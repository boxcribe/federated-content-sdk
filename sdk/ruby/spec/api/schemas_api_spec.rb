=begin
#Federated Content API

#Welcome to the Federated Content API following Open API Specification (Version 3.0.0)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.57
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SchemasApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SchemasApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SchemasApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SchemasApi' do
    it 'should create an instance of SchemasApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SchemasApi)
    end
  end

  # unit tests for schemas_get
  # Get schemas
  # Retrieve a list of schemas with the ability to filter by tenant, category, sort, limit, or page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant Get all schemas for a Tenant ID
  # @option opts [String] :category Get all schemas for a Category ID
  # @option opts [String] :sort Sort by query in the form of field:desc/asc (ex. name:asc)
  # @option opts [Integer] :limit Maximum number of schemas
  # @option opts [Integer] :page Page number
  # @return [InlineResponse20010]
  describe 'schemas_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schemas_grouped_by_endpoint_get
  # Get schemas grouped by endpoint
  # Retrieve a list of schemas grouped by their endpoint with the ability to filter by tenant, category, sort, limit, or page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant Get all schemas for a Tenant ID
  # @option opts [String] :category Get all schemas for a Category ID
  # @option opts [String] :sort Sort by query in the form of field:desc/asc (ex. endpoint:asc)
  # @option opts [Integer] :limit Maximum number of schemas
  # @option opts [Integer] :page Page number
  # @return [InlineResponse20011]
  describe 'schemas_grouped_by_endpoint_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schemas_id_delete
  # Delete schema
  # @param id Schema id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schemas_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schemas_id_get
  # Get schema
  # @param id Schema id
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'schemas_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schemas_id_patch
  # Update schema
  # @param body 
  # @param id Schema id
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'schemas_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schemas_post
  # Create schema
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'schemas_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
