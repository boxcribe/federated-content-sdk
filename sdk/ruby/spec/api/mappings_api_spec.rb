=begin
#Federated Content API

#Welcome to the Federated Content API following Open API Specification (Version 3.0.0)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.57
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MappingsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MappingsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MappingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MappingsApi' do
    it 'should create an instance of MappingsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MappingsApi)
    end
  end

  # unit tests for mappings_get
  # Get mappings
  # Retrieve a list of mappings with the ability to filter by tenant, category, schema, integration, field, sort, limit or page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant Get all mappings for a Tenant ID
  # @option opts [String] :schema Get all mappings for a Schema ID
  # @option opts [String] :field Get all mappings for a Field ID
  # @option opts [String] :integration Get all mappings for an Integration ID
  # @option opts [String] :sort sort by query in the form of mapping:desc/asc (ex. name:asc)
  # @option opts [Integer] :limit Maximum number of mappings
  # @option opts [Integer] :page Page number
  # @return [InlineResponse2009]
  describe 'mappings_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mappings_id_delete
  # Delete mapping
  # @param id Mapping id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'mappings_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mappings_id_get
  # Get mapping
  # @param id Mapping id
  # @param [Hash] opts the optional parameters
  # @return [Mapping]
  describe 'mappings_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mappings_id_patch
  # Update mapping
  # @param body 
  # @param id Mapping id
  # @param [Hash] opts the optional parameters
  # @return [Mapping]
  describe 'mappings_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mappings_post
  # Create mapping
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Mapping]
  describe 'mappings_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
