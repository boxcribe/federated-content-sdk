/* tslint:disable */
/* eslint-disable */
/**
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

 /**
 * 
 *
 * @export
 * @interface SchemasBody
 */
export interface SchemasBody {

    /**
     * The unique identifier of the tenant
     *
     * @type {string}
     * @memberof SchemasBody
     */
    tenantId?: string;

    /**
     * The unique identifier of the category
     *
     * @type {string}
     * @memberof SchemasBody
     */
    categoryId: string;

    /**
     * Name of the schema
     *
     * @type {string}
     * @memberof SchemasBody
     */
    name: string;

    /**
     * Slug for the schema
     *
     * @type {string}
     * @memberof SchemasBody
     */
    slug: string;

    /**
     * Status of the schema
     *
     * @type {string}
     * @memberof SchemasBody
     */
    status?: SchemasBodyStatusEnum;

    /**
     * Whether the schema is a system schema
     *
     * @type {boolean}
     * @memberof SchemasBody
     */
    system?: boolean;

    /**
     * Endpoint URL
     *
     * @type {string}
     * @memberof SchemasBody
     */
    endpoint?: string;

    /**
     * Endpoint name (Group name)
     *
     * @type {string}
     * @memberof SchemasBody
     */
    endpointName?: string;

    /**
     * Type of the schema (Request or Response)
     *
     * @type {string}
     * @memberof SchemasBody
     */
    type: SchemasBodyTypeEnum;

    /**
     * HTTP method for Request types
     *
     * @type {string}
     * @memberof SchemasBody
     */
    method?: SchemasBodyMethodEnum;

    /**
     * Headers for Request type, stored in JSON format
     *
     * @type {{ [key: string]: string; }}
     * @memberof SchemasBody
     */
    headers?: { [key: string]: string; };

    /**
     * Query parameters for Request type, stored in JSON format
     *
     * @type {{ [key: string]: string; }}
     * @memberof SchemasBody
     */
    _query?: { [key: string]: string; };
}

/**
 * @export
 * @enum {string}
 */
export enum SchemasBodyStatusEnum {
    Active = 'Active',
    Inactive = 'Inactive'
}
/**
 * @export
 * @enum {string}
 */
export enum SchemasBodyTypeEnum {
    Request = 'Request',
    Response = 'Response'
}
/**
 * @export
 * @enum {string}
 */
export enum SchemasBodyMethodEnum {
    GET = 'GET',
    POST = 'POST',
    PATCH = 'PATCH',
    DELETE = 'DELETE'
}

