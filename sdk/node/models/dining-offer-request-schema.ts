/* tslint:disable */
/* eslint-disable */
/**
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

 /**
 * 
 *
 * @export
 * @interface DiningOfferRequestSchema
 */
export interface DiningOfferRequestSchema {

    /**
     * Latitude for the event location.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    locationLatitude?: number;

    /**
     * Longitude for the event location.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    locationLongitude?: number;

    /**
     * Radius to search for events around the location coordinates.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    locationRadius?: number;

    /**
     * Date for the dining search.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    date?: string;

    /**
     * Keywords to filter the events.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    filterByKeyword?: string;

    /**
     * Minimum price to filter the events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByPriceMin?: number;

    /**
     * Maximum price to filter the events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByPriceMax?: number;

    /**
     * Minimum distance to filter events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByDistanceMin?: number;

    /**
     * Maximum distance to filter events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByDistanceMax?: number;

    /**
     * Minimum rating to filter events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByRatingMin?: number;

    /**
     * Maximum rating to filter events.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    filterByRatingMax?: number;

    /**
     * Filter events by specific subcategories.
     *
     * @type {Array<string>}
     * @memberof DiningOfferRequestSchema
     */
    filterBySubcategories?: Array<string>;

    /**
     * Field to sort events by.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    sortBy?: string;

    /**
     * Order to sort events (asc, desc).
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    sortOrder?: string;

    /**
     * Page number for pagination.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    page?: number;

    /**
     * Number of events per page.
     *
     * @type {number}
     * @memberof DiningOfferRequestSchema
     */
    limit?: number;

    /**
     * Language for the event offers.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    language?: string;

    /**
     * Currency for the event offers.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    currency?: string;

    /**
     * Distance metric (mi/km) used in filters.
     *
     * @type {string}
     * @memberof DiningOfferRequestSchema
     */
    metric?: string;
}
