/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AuthForgotpasswordBody;
import io.swagger.client.model.AuthLoginBody;
import io.swagger.client.model.AuthLogoutBody;
import io.swagger.client.model.AuthRefreshtokensBody;
import io.swagger.client.model.AuthRegisterBody;
import io.swagger.client.model.AuthResetpasswordBody;
import io.swagger.client.model.AuthSendverificationemailBody;
import io.swagger.client.model.AuthTokens;
import io.swagger.client.model.Error;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse201;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AuthenticationApi
 */
@Ignore
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Forgot password
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authForgotPasswordPostTest() throws Exception {
        AuthForgotpasswordBody body = null;
        api.authForgotPasswordPost(body);

        // TODO: test validations
    }
    /**
     * Login
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authLoginPostTest() throws Exception {
        AuthLoginBody body = null;
        InlineResponse2003 response = api.authLoginPost(body);

        // TODO: test validations
    }
    /**
     * Logout
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authLogoutPostTest() throws Exception {
        AuthLogoutBody body = null;
        api.authLogoutPost(body);

        // TODO: test validations
    }
    /**
     * Refresh auth tokens
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authRefreshTokensPostTest() throws Exception {
        AuthRefreshtokensBody body = null;
        AuthTokens response = api.authRefreshTokensPost(body);

        // TODO: test validations
    }
    /**
     * Register
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authRegisterPostTest() throws Exception {
        AuthRegisterBody body = null;
        InlineResponse201 response = api.authRegisterPost(body);

        // TODO: test validations
    }
    /**
     * Reset password
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authResetPasswordPostTest() throws Exception {
        AuthResetpasswordBody body = null;
        String token = null;
        api.authResetPasswordPost(body, token);

        // TODO: test validations
    }
    /**
     * Send verification email
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authSendVerificationEmailPostTest() throws Exception {
        AuthSendverificationemailBody body = null;
        api.authSendVerificationEmailPost(body);

        // TODO: test validations
    }
    /**
     * verify email
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authVerifyEmailPostTest() throws Exception {
        String token = null;
        api.authVerifyEmailPost(token);

        // TODO: test validations
    }
}
