/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;
/**
 * ToursAndActivitiesVariantSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class ToursAndActivitiesVariantSchema {
  @SerializedName("variant_id")
  private UUID variantId = null;

  @SerializedName("supplier_variant_id")
  private UUID supplierVariantId = null;

  @SerializedName("variant_index")
  private Integer variantIndex = null;

  @SerializedName("variant_tax")
  private BigDecimal variantTax = null;

  @SerializedName("variant_price")
  private BigDecimal variantPrice = null;

  @SerializedName("variant_currency")
  private String variantCurrency = null;

  @SerializedName("variant_cancellation_policies")
  private String variantCancellationPolicies = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("startTime")
  private String startTime = null;

  @SerializedName("adults")
  private Integer adults = null;

  @SerializedName("children")
  private Integer children = null;

  @SerializedName("variant_name")
  private String variantName = null;

  @SerializedName("variant_description")
  private String variantDescription = null;

  @SerializedName("variant_address")
  private String variantAddress = null;

  @SerializedName("variant_latitude")
  private Float variantLatitude = null;

  @SerializedName("variant_longitude")
  private Float variantLongitude = null;

  @SerializedName("variant_distance")
  private BigDecimal variantDistance = null;

  @SerializedName("variant_distance_metric")
  private String variantDistanceMetric = null;

  @SerializedName("variant_images")
  private List<String> variantImages = null;

  @SerializedName("variant_rating")
  private BigDecimal variantRating = null;

  @SerializedName("variant_reviews")
  private List<String> variantReviews = null;

  @SerializedName("variant_subcategories")
  private List<String> variantSubcategories = null;

  @SerializedName("booking_questions")
  private List<String> bookingQuestions = null;

  public ToursAndActivitiesVariantSchema variantId(UUID variantId) {
    this.variantId = variantId;
    return this;
  }

   /**
   * Unique identifier for the tour variant.
   * @return variantId
  **/
  @Schema(description = "Unique identifier for the tour variant.")
  public UUID getVariantId() {
    return variantId;
  }

  public void setVariantId(UUID variantId) {
    this.variantId = variantId;
  }

  public ToursAndActivitiesVariantSchema supplierVariantId(UUID supplierVariantId) {
    this.supplierVariantId = supplierVariantId;
    return this;
  }

   /**
   * Identifier given by the supplier for the variant.
   * @return supplierVariantId
  **/
  @Schema(description = "Identifier given by the supplier for the variant.")
  public UUID getSupplierVariantId() {
    return supplierVariantId;
  }

  public void setSupplierVariantId(UUID supplierVariantId) {
    this.supplierVariantId = supplierVariantId;
  }

  public ToursAndActivitiesVariantSchema variantIndex(Integer variantIndex) {
    this.variantIndex = variantIndex;
    return this;
  }

   /**
   * Index of the variant for ordering.
   * @return variantIndex
  **/
  @Schema(description = "Index of the variant for ordering.")
  public Integer getVariantIndex() {
    return variantIndex;
  }

  public void setVariantIndex(Integer variantIndex) {
    this.variantIndex = variantIndex;
  }

  public ToursAndActivitiesVariantSchema variantTax(BigDecimal variantTax) {
    this.variantTax = variantTax;
    return this;
  }

   /**
   * Tax applied to the variant price.
   * @return variantTax
  **/
  @Schema(description = "Tax applied to the variant price.")
  public BigDecimal getVariantTax() {
    return variantTax;
  }

  public void setVariantTax(BigDecimal variantTax) {
    this.variantTax = variantTax;
  }

  public ToursAndActivitiesVariantSchema variantPrice(BigDecimal variantPrice) {
    this.variantPrice = variantPrice;
    return this;
  }

   /**
   * Price of the tour variant.
   * @return variantPrice
  **/
  @Schema(description = "Price of the tour variant.")
  public BigDecimal getVariantPrice() {
    return variantPrice;
  }

  public void setVariantPrice(BigDecimal variantPrice) {
    this.variantPrice = variantPrice;
  }

  public ToursAndActivitiesVariantSchema variantCurrency(String variantCurrency) {
    this.variantCurrency = variantCurrency;
    return this;
  }

   /**
   * Currency of the variant price.
   * @return variantCurrency
  **/
  @Schema(description = "Currency of the variant price.")
  public String getVariantCurrency() {
    return variantCurrency;
  }

  public void setVariantCurrency(String variantCurrency) {
    this.variantCurrency = variantCurrency;
  }

  public ToursAndActivitiesVariantSchema variantCancellationPolicies(String variantCancellationPolicies) {
    this.variantCancellationPolicies = variantCancellationPolicies;
    return this;
  }

   /**
   * Cancellation policies applicable to the tour variant.
   * @return variantCancellationPolicies
  **/
  @Schema(description = "Cancellation policies applicable to the tour variant.")
  public String getVariantCancellationPolicies() {
    return variantCancellationPolicies;
  }

  public void setVariantCancellationPolicies(String variantCancellationPolicies) {
    this.variantCancellationPolicies = variantCancellationPolicies;
  }

  public ToursAndActivitiesVariantSchema date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the tour.
   * @return date
  **/
  @Schema(description = "Date of the tour.")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public ToursAndActivitiesVariantSchema startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of the tour.
   * @return startTime
  **/
  @Schema(description = "Start time of the tour.")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public ToursAndActivitiesVariantSchema adults(Integer adults) {
    this.adults = adults;
    return this;
  }

   /**
   * Number of adults for the tour.
   * @return adults
  **/
  @Schema(description = "Number of adults for the tour.")
  public Integer getAdults() {
    return adults;
  }

  public void setAdults(Integer adults) {
    this.adults = adults;
  }

  public ToursAndActivitiesVariantSchema children(Integer children) {
    this.children = children;
    return this;
  }

   /**
   * Number of children for the tour.
   * @return children
  **/
  @Schema(description = "Number of children for the tour.")
  public Integer getChildren() {
    return children;
  }

  public void setChildren(Integer children) {
    this.children = children;
  }

  public ToursAndActivitiesVariantSchema variantName(String variantName) {
    this.variantName = variantName;
    return this;
  }

   /**
   * Name of the tour variant.
   * @return variantName
  **/
  @Schema(description = "Name of the tour variant.")
  public String getVariantName() {
    return variantName;
  }

  public void setVariantName(String variantName) {
    this.variantName = variantName;
  }

  public ToursAndActivitiesVariantSchema variantDescription(String variantDescription) {
    this.variantDescription = variantDescription;
    return this;
  }

   /**
   * Description of the tour variant.
   * @return variantDescription
  **/
  @Schema(description = "Description of the tour variant.")
  public String getVariantDescription() {
    return variantDescription;
  }

  public void setVariantDescription(String variantDescription) {
    this.variantDescription = variantDescription;
  }

  public ToursAndActivitiesVariantSchema variantAddress(String variantAddress) {
    this.variantAddress = variantAddress;
    return this;
  }

   /**
   * Address where the tour variant takes place.
   * @return variantAddress
  **/
  @Schema(description = "Address where the tour variant takes place.")
  public String getVariantAddress() {
    return variantAddress;
  }

  public void setVariantAddress(String variantAddress) {
    this.variantAddress = variantAddress;
  }

  public ToursAndActivitiesVariantSchema variantLatitude(Float variantLatitude) {
    this.variantLatitude = variantLatitude;
    return this;
  }

   /**
   * Latitude coordinate of the tour location.
   * @return variantLatitude
  **/
  @Schema(description = "Latitude coordinate of the tour location.")
  public Float getVariantLatitude() {
    return variantLatitude;
  }

  public void setVariantLatitude(Float variantLatitude) {
    this.variantLatitude = variantLatitude;
  }

  public ToursAndActivitiesVariantSchema variantLongitude(Float variantLongitude) {
    this.variantLongitude = variantLongitude;
    return this;
  }

   /**
   * Longitude coordinate of the tour location.
   * @return variantLongitude
  **/
  @Schema(description = "Longitude coordinate of the tour location.")
  public Float getVariantLongitude() {
    return variantLongitude;
  }

  public void setVariantLongitude(Float variantLongitude) {
    this.variantLongitude = variantLongitude;
  }

  public ToursAndActivitiesVariantSchema variantDistance(BigDecimal variantDistance) {
    this.variantDistance = variantDistance;
    return this;
  }

   /**
   * Distance covered during the tour.
   * @return variantDistance
  **/
  @Schema(description = "Distance covered during the tour.")
  public BigDecimal getVariantDistance() {
    return variantDistance;
  }

  public void setVariantDistance(BigDecimal variantDistance) {
    this.variantDistance = variantDistance;
  }

  public ToursAndActivitiesVariantSchema variantDistanceMetric(String variantDistanceMetric) {
    this.variantDistanceMetric = variantDistanceMetric;
    return this;
  }

   /**
   * Metric used for distance measurement (miles or kilometers).
   * @return variantDistanceMetric
  **/
  @Schema(description = "Metric used for distance measurement (miles or kilometers).")
  public String getVariantDistanceMetric() {
    return variantDistanceMetric;
  }

  public void setVariantDistanceMetric(String variantDistanceMetric) {
    this.variantDistanceMetric = variantDistanceMetric;
  }

  public ToursAndActivitiesVariantSchema variantImages(List<String> variantImages) {
    this.variantImages = variantImages;
    return this;
  }

  public ToursAndActivitiesVariantSchema addVariantImagesItem(String variantImagesItem) {
    if (this.variantImages == null) {
      this.variantImages = new ArrayList<String>();
    }
    this.variantImages.add(variantImagesItem);
    return this;
  }

   /**
   * Array of images related to the tour variant.
   * @return variantImages
  **/
  @Schema(description = "Array of images related to the tour variant.")
  public List<String> getVariantImages() {
    return variantImages;
  }

  public void setVariantImages(List<String> variantImages) {
    this.variantImages = variantImages;
  }

  public ToursAndActivitiesVariantSchema variantRating(BigDecimal variantRating) {
    this.variantRating = variantRating;
    return this;
  }

   /**
   * Rating of the tour variant.
   * @return variantRating
  **/
  @Schema(description = "Rating of the tour variant.")
  public BigDecimal getVariantRating() {
    return variantRating;
  }

  public void setVariantRating(BigDecimal variantRating) {
    this.variantRating = variantRating;
  }

  public ToursAndActivitiesVariantSchema variantReviews(List<String> variantReviews) {
    this.variantReviews = variantReviews;
    return this;
  }

  public ToursAndActivitiesVariantSchema addVariantReviewsItem(String variantReviewsItem) {
    if (this.variantReviews == null) {
      this.variantReviews = new ArrayList<String>();
    }
    this.variantReviews.add(variantReviewsItem);
    return this;
  }

   /**
   * Collection of reviews for the tour variant.
   * @return variantReviews
  **/
  @Schema(description = "Collection of reviews for the tour variant.")
  public List<String> getVariantReviews() {
    return variantReviews;
  }

  public void setVariantReviews(List<String> variantReviews) {
    this.variantReviews = variantReviews;
  }

  public ToursAndActivitiesVariantSchema variantSubcategories(List<String> variantSubcategories) {
    this.variantSubcategories = variantSubcategories;
    return this;
  }

  public ToursAndActivitiesVariantSchema addVariantSubcategoriesItem(String variantSubcategoriesItem) {
    if (this.variantSubcategories == null) {
      this.variantSubcategories = new ArrayList<String>();
    }
    this.variantSubcategories.add(variantSubcategoriesItem);
    return this;
  }

   /**
   * Subcategories of the tour variant.
   * @return variantSubcategories
  **/
  @Schema(description = "Subcategories of the tour variant.")
  public List<String> getVariantSubcategories() {
    return variantSubcategories;
  }

  public void setVariantSubcategories(List<String> variantSubcategories) {
    this.variantSubcategories = variantSubcategories;
  }

  public ToursAndActivitiesVariantSchema bookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
    return this;
  }

  public ToursAndActivitiesVariantSchema addBookingQuestionsItem(String bookingQuestionsItem) {
    if (this.bookingQuestions == null) {
      this.bookingQuestions = new ArrayList<String>();
    }
    this.bookingQuestions.add(bookingQuestionsItem);
    return this;
  }

   /**
   * Questions related to booking the tour variant.
   * @return bookingQuestions
  **/
  @Schema(description = "Questions related to booking the tour variant.")
  public List<String> getBookingQuestions() {
    return bookingQuestions;
  }

  public void setBookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToursAndActivitiesVariantSchema toursAndActivitiesVariantSchema = (ToursAndActivitiesVariantSchema) o;
    return Objects.equals(this.variantId, toursAndActivitiesVariantSchema.variantId) &&
        Objects.equals(this.supplierVariantId, toursAndActivitiesVariantSchema.supplierVariantId) &&
        Objects.equals(this.variantIndex, toursAndActivitiesVariantSchema.variantIndex) &&
        Objects.equals(this.variantTax, toursAndActivitiesVariantSchema.variantTax) &&
        Objects.equals(this.variantPrice, toursAndActivitiesVariantSchema.variantPrice) &&
        Objects.equals(this.variantCurrency, toursAndActivitiesVariantSchema.variantCurrency) &&
        Objects.equals(this.variantCancellationPolicies, toursAndActivitiesVariantSchema.variantCancellationPolicies) &&
        Objects.equals(this.date, toursAndActivitiesVariantSchema.date) &&
        Objects.equals(this.startTime, toursAndActivitiesVariantSchema.startTime) &&
        Objects.equals(this.adults, toursAndActivitiesVariantSchema.adults) &&
        Objects.equals(this.children, toursAndActivitiesVariantSchema.children) &&
        Objects.equals(this.variantName, toursAndActivitiesVariantSchema.variantName) &&
        Objects.equals(this.variantDescription, toursAndActivitiesVariantSchema.variantDescription) &&
        Objects.equals(this.variantAddress, toursAndActivitiesVariantSchema.variantAddress) &&
        Objects.equals(this.variantLatitude, toursAndActivitiesVariantSchema.variantLatitude) &&
        Objects.equals(this.variantLongitude, toursAndActivitiesVariantSchema.variantLongitude) &&
        Objects.equals(this.variantDistance, toursAndActivitiesVariantSchema.variantDistance) &&
        Objects.equals(this.variantDistanceMetric, toursAndActivitiesVariantSchema.variantDistanceMetric) &&
        Objects.equals(this.variantImages, toursAndActivitiesVariantSchema.variantImages) &&
        Objects.equals(this.variantRating, toursAndActivitiesVariantSchema.variantRating) &&
        Objects.equals(this.variantReviews, toursAndActivitiesVariantSchema.variantReviews) &&
        Objects.equals(this.variantSubcategories, toursAndActivitiesVariantSchema.variantSubcategories) &&
        Objects.equals(this.bookingQuestions, toursAndActivitiesVariantSchema.bookingQuestions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(variantId, supplierVariantId, variantIndex, variantTax, variantPrice, variantCurrency, variantCancellationPolicies, date, startTime, adults, children, variantName, variantDescription, variantAddress, variantLatitude, variantLongitude, variantDistance, variantDistanceMetric, variantImages, variantRating, variantReviews, variantSubcategories, bookingQuestions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToursAndActivitiesVariantSchema {\n");
    
    sb.append("    variantId: ").append(toIndentedString(variantId)).append("\n");
    sb.append("    supplierVariantId: ").append(toIndentedString(supplierVariantId)).append("\n");
    sb.append("    variantIndex: ").append(toIndentedString(variantIndex)).append("\n");
    sb.append("    variantTax: ").append(toIndentedString(variantTax)).append("\n");
    sb.append("    variantPrice: ").append(toIndentedString(variantPrice)).append("\n");
    sb.append("    variantCurrency: ").append(toIndentedString(variantCurrency)).append("\n");
    sb.append("    variantCancellationPolicies: ").append(toIndentedString(variantCancellationPolicies)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    variantName: ").append(toIndentedString(variantName)).append("\n");
    sb.append("    variantDescription: ").append(toIndentedString(variantDescription)).append("\n");
    sb.append("    variantAddress: ").append(toIndentedString(variantAddress)).append("\n");
    sb.append("    variantLatitude: ").append(toIndentedString(variantLatitude)).append("\n");
    sb.append("    variantLongitude: ").append(toIndentedString(variantLongitude)).append("\n");
    sb.append("    variantDistance: ").append(toIndentedString(variantDistance)).append("\n");
    sb.append("    variantDistanceMetric: ").append(toIndentedString(variantDistanceMetric)).append("\n");
    sb.append("    variantImages: ").append(toIndentedString(variantImages)).append("\n");
    sb.append("    variantRating: ").append(toIndentedString(variantRating)).append("\n");
    sb.append("    variantReviews: ").append(toIndentedString(variantReviews)).append("\n");
    sb.append("    variantSubcategories: ").append(toIndentedString(variantSubcategories)).append("\n");
    sb.append("    bookingQuestions: ").append(toIndentedString(bookingQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
