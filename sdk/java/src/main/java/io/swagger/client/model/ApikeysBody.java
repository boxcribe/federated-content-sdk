/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * ApikeysBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class ApikeysBody {
  @SerializedName("tenant_id")
  private String tenantId = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Active")
    ACTIVE("Active"),
    @SerializedName("Inactive")
    INACTIVE("Inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("usage_limit")
  private BigDecimal usageLimit = null;

  /**
   * Gets or Sets envName
   */
  @JsonAdapter(EnvNameEnum.Adapter.class)
  public enum EnvNameEnum {
    @SerializedName("Production")
    PRODUCTION("Production"),
    @SerializedName("Sandbox")
    SANDBOX("Sandbox");

    private String value;

    EnvNameEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EnvNameEnum fromValue(String input) {
      for (EnvNameEnum b : EnvNameEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EnvNameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvNameEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EnvNameEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EnvNameEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("env_name")
  private EnvNameEnum envName = null;

  public ApikeysBody tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @Schema(required = true, description = "")
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public ApikeysBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ApikeysBody status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ApikeysBody usageLimit(BigDecimal usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

   /**
   * Get usageLimit
   * @return usageLimit
  **/
  @Schema(description = "")
  public BigDecimal getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(BigDecimal usageLimit) {
    this.usageLimit = usageLimit;
  }

  public ApikeysBody envName(EnvNameEnum envName) {
    this.envName = envName;
    return this;
  }

   /**
   * Get envName
   * @return envName
  **/
  @Schema(description = "")
  public EnvNameEnum getEnvName() {
    return envName;
  }

  public void setEnvName(EnvNameEnum envName) {
    this.envName = envName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApikeysBody apikeysBody = (ApikeysBody) o;
    return Objects.equals(this.tenantId, apikeysBody.tenantId) &&
        Objects.equals(this.name, apikeysBody.name) &&
        Objects.equals(this.status, apikeysBody.status) &&
        Objects.equals(this.usageLimit, apikeysBody.usageLimit) &&
        Objects.equals(this.envName, apikeysBody.envName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantId, name, status, usageLimit, envName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApikeysBody {\n");
    
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("    envName: ").append(toIndentedString(envName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
