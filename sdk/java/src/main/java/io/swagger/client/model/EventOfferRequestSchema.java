/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * EventOfferRequestSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class EventOfferRequestSchema {
  @SerializedName("location_latitude")
  private Float locationLatitude = null;

  @SerializedName("location_longitude")
  private Float locationLongitude = null;

  @SerializedName("location_radius")
  private Float locationRadius = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("filter_by_keyword")
  private String filterByKeyword = null;

  @SerializedName("filter_by_price_min")
  private BigDecimal filterByPriceMin = null;

  @SerializedName("filter_by_price_max")
  private BigDecimal filterByPriceMax = null;

  @SerializedName("filter_by_distance_min")
  private BigDecimal filterByDistanceMin = null;

  @SerializedName("filter_by_distance_max")
  private BigDecimal filterByDistanceMax = null;

  @SerializedName("filter_by_rating_min")
  private BigDecimal filterByRatingMin = null;

  @SerializedName("filter_by_rating_max")
  private BigDecimal filterByRatingMax = null;

  @SerializedName("filter_by_performers")
  private List<String> filterByPerformers = null;

  @SerializedName("filter_by_subcategories")
  private List<String> filterBySubcategories = null;

  @SerializedName("sort_by")
  private String sortBy = null;

  @SerializedName("sort_order")
  private String sortOrder = null;

  @SerializedName("page")
  private BigDecimal page = null;

  @SerializedName("limit")
  private BigDecimal limit = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("metric")
  private String metric = null;

  public EventOfferRequestSchema locationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
    return this;
  }

   /**
   * Latitude for the event location.
   * @return locationLatitude
  **/
  @Schema(description = "Latitude for the event location.")
  public Float getLocationLatitude() {
    return locationLatitude;
  }

  public void setLocationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
  }

  public EventOfferRequestSchema locationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
    return this;
  }

   /**
   * Longitude for the event location.
   * @return locationLongitude
  **/
  @Schema(description = "Longitude for the event location.")
  public Float getLocationLongitude() {
    return locationLongitude;
  }

  public void setLocationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
  }

  public EventOfferRequestSchema locationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
    return this;
  }

   /**
   * Radius to search for events around the location coordinates.
   * @return locationRadius
  **/
  @Schema(description = "Radius to search for events around the location coordinates.")
  public Float getLocationRadius() {
    return locationRadius;
  }

  public void setLocationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
  }

  public EventOfferRequestSchema startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date for the event search.
   * @return startDate
  **/
  @Schema(description = "Start date for the event search.")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public EventOfferRequestSchema endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End date for the event search.
   * @return endDate
  **/
  @Schema(description = "End date for the event search.")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public EventOfferRequestSchema filterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
    return this;
  }

   /**
   * Keywords to filter the events.
   * @return filterByKeyword
  **/
  @Schema(description = "Keywords to filter the events.")
  public String getFilterByKeyword() {
    return filterByKeyword;
  }

  public void setFilterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
  }

  public EventOfferRequestSchema filterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
    return this;
  }

   /**
   * Minimum price to filter the events.
   * @return filterByPriceMin
  **/
  @Schema(description = "Minimum price to filter the events.")
  public BigDecimal getFilterByPriceMin() {
    return filterByPriceMin;
  }

  public void setFilterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
  }

  public EventOfferRequestSchema filterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
    return this;
  }

   /**
   * Maximum price to filter the events.
   * @return filterByPriceMax
  **/
  @Schema(description = "Maximum price to filter the events.")
  public BigDecimal getFilterByPriceMax() {
    return filterByPriceMax;
  }

  public void setFilterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
  }

  public EventOfferRequestSchema filterByDistanceMin(BigDecimal filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
    return this;
  }

   /**
   * Minimum distance to filter events.
   * @return filterByDistanceMin
  **/
  @Schema(description = "Minimum distance to filter events.")
  public BigDecimal getFilterByDistanceMin() {
    return filterByDistanceMin;
  }

  public void setFilterByDistanceMin(BigDecimal filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
  }

  public EventOfferRequestSchema filterByDistanceMax(BigDecimal filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
    return this;
  }

   /**
   * Maximum distance to filter events.
   * @return filterByDistanceMax
  **/
  @Schema(description = "Maximum distance to filter events.")
  public BigDecimal getFilterByDistanceMax() {
    return filterByDistanceMax;
  }

  public void setFilterByDistanceMax(BigDecimal filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
  }

  public EventOfferRequestSchema filterByRatingMin(BigDecimal filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
    return this;
  }

   /**
   * Minimum rating to filter events.
   * @return filterByRatingMin
  **/
  @Schema(description = "Minimum rating to filter events.")
  public BigDecimal getFilterByRatingMin() {
    return filterByRatingMin;
  }

  public void setFilterByRatingMin(BigDecimal filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
  }

  public EventOfferRequestSchema filterByRatingMax(BigDecimal filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
    return this;
  }

   /**
   * Maximum rating to filter events.
   * @return filterByRatingMax
  **/
  @Schema(description = "Maximum rating to filter events.")
  public BigDecimal getFilterByRatingMax() {
    return filterByRatingMax;
  }

  public void setFilterByRatingMax(BigDecimal filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
  }

  public EventOfferRequestSchema filterByPerformers(List<String> filterByPerformers) {
    this.filterByPerformers = filterByPerformers;
    return this;
  }

  public EventOfferRequestSchema addFilterByPerformersItem(String filterByPerformersItem) {
    if (this.filterByPerformers == null) {
      this.filterByPerformers = new ArrayList<String>();
    }
    this.filterByPerformers.add(filterByPerformersItem);
    return this;
  }

   /**
   * Filter events by specific performers.
   * @return filterByPerformers
  **/
  @Schema(description = "Filter events by specific performers.")
  public List<String> getFilterByPerformers() {
    return filterByPerformers;
  }

  public void setFilterByPerformers(List<String> filterByPerformers) {
    this.filterByPerformers = filterByPerformers;
  }

  public EventOfferRequestSchema filterBySubcategories(List<String> filterBySubcategories) {
    this.filterBySubcategories = filterBySubcategories;
    return this;
  }

  public EventOfferRequestSchema addFilterBySubcategoriesItem(String filterBySubcategoriesItem) {
    if (this.filterBySubcategories == null) {
      this.filterBySubcategories = new ArrayList<String>();
    }
    this.filterBySubcategories.add(filterBySubcategoriesItem);
    return this;
  }

   /**
   * Filter events by specific subcategories.
   * @return filterBySubcategories
  **/
  @Schema(description = "Filter events by specific subcategories.")
  public List<String> getFilterBySubcategories() {
    return filterBySubcategories;
  }

  public void setFilterBySubcategories(List<String> filterBySubcategories) {
    this.filterBySubcategories = filterBySubcategories;
  }

  public EventOfferRequestSchema sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Field to sort events by.
   * @return sortBy
  **/
  @Schema(description = "Field to sort events by.")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public EventOfferRequestSchema sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Order to sort events (asc, desc).
   * @return sortOrder
  **/
  @Schema(description = "Order to sort events (asc, desc).")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public EventOfferRequestSchema page(BigDecimal page) {
    this.page = page;
    return this;
  }

   /**
   * Page number for pagination.
   * @return page
  **/
  @Schema(description = "Page number for pagination.")
  public BigDecimal getPage() {
    return page;
  }

  public void setPage(BigDecimal page) {
    this.page = page;
  }

  public EventOfferRequestSchema limit(BigDecimal limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of events per page.
   * @return limit
  **/
  @Schema(description = "Number of events per page.")
  public BigDecimal getLimit() {
    return limit;
  }

  public void setLimit(BigDecimal limit) {
    this.limit = limit;
  }

  public EventOfferRequestSchema language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Language for the event offers.
   * @return language
  **/
  @Schema(description = "Language for the event offers.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public EventOfferRequestSchema currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency for the event offers.
   * @return currency
  **/
  @Schema(description = "Currency for the event offers.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public EventOfferRequestSchema metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * Distance metric (mi/km) used in filters.
   * @return metric
  **/
  @Schema(description = "Distance metric (mi/km) used in filters.")
  public String getMetric() {
    return metric;
  }

  public void setMetric(String metric) {
    this.metric = metric;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventOfferRequestSchema eventOfferRequestSchema = (EventOfferRequestSchema) o;
    return Objects.equals(this.locationLatitude, eventOfferRequestSchema.locationLatitude) &&
        Objects.equals(this.locationLongitude, eventOfferRequestSchema.locationLongitude) &&
        Objects.equals(this.locationRadius, eventOfferRequestSchema.locationRadius) &&
        Objects.equals(this.startDate, eventOfferRequestSchema.startDate) &&
        Objects.equals(this.endDate, eventOfferRequestSchema.endDate) &&
        Objects.equals(this.filterByKeyword, eventOfferRequestSchema.filterByKeyword) &&
        Objects.equals(this.filterByPriceMin, eventOfferRequestSchema.filterByPriceMin) &&
        Objects.equals(this.filterByPriceMax, eventOfferRequestSchema.filterByPriceMax) &&
        Objects.equals(this.filterByDistanceMin, eventOfferRequestSchema.filterByDistanceMin) &&
        Objects.equals(this.filterByDistanceMax, eventOfferRequestSchema.filterByDistanceMax) &&
        Objects.equals(this.filterByRatingMin, eventOfferRequestSchema.filterByRatingMin) &&
        Objects.equals(this.filterByRatingMax, eventOfferRequestSchema.filterByRatingMax) &&
        Objects.equals(this.filterByPerformers, eventOfferRequestSchema.filterByPerformers) &&
        Objects.equals(this.filterBySubcategories, eventOfferRequestSchema.filterBySubcategories) &&
        Objects.equals(this.sortBy, eventOfferRequestSchema.sortBy) &&
        Objects.equals(this.sortOrder, eventOfferRequestSchema.sortOrder) &&
        Objects.equals(this.page, eventOfferRequestSchema.page) &&
        Objects.equals(this.limit, eventOfferRequestSchema.limit) &&
        Objects.equals(this.language, eventOfferRequestSchema.language) &&
        Objects.equals(this.currency, eventOfferRequestSchema.currency) &&
        Objects.equals(this.metric, eventOfferRequestSchema.metric);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationLatitude, locationLongitude, locationRadius, startDate, endDate, filterByKeyword, filterByPriceMin, filterByPriceMax, filterByDistanceMin, filterByDistanceMax, filterByRatingMin, filterByRatingMax, filterByPerformers, filterBySubcategories, sortBy, sortOrder, page, limit, language, currency, metric);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventOfferRequestSchema {\n");
    
    sb.append("    locationLatitude: ").append(toIndentedString(locationLatitude)).append("\n");
    sb.append("    locationLongitude: ").append(toIndentedString(locationLongitude)).append("\n");
    sb.append("    locationRadius: ").append(toIndentedString(locationRadius)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    filterByKeyword: ").append(toIndentedString(filterByKeyword)).append("\n");
    sb.append("    filterByPriceMin: ").append(toIndentedString(filterByPriceMin)).append("\n");
    sb.append("    filterByPriceMax: ").append(toIndentedString(filterByPriceMax)).append("\n");
    sb.append("    filterByDistanceMin: ").append(toIndentedString(filterByDistanceMin)).append("\n");
    sb.append("    filterByDistanceMax: ").append(toIndentedString(filterByDistanceMax)).append("\n");
    sb.append("    filterByRatingMin: ").append(toIndentedString(filterByRatingMin)).append("\n");
    sb.append("    filterByRatingMax: ").append(toIndentedString(filterByRatingMax)).append("\n");
    sb.append("    filterByPerformers: ").append(toIndentedString(filterByPerformers)).append("\n");
    sb.append("    filterBySubcategories: ").append(toIndentedString(filterBySubcategories)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
