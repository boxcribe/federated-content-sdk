/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;
/**
 * TransportOfferDetailsSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class TransportOfferDetailsSchema {
  @SerializedName("offer_id")
  private UUID offerId = null;

  @SerializedName("supplier_offer_id")
  private UUID supplierOfferId = null;

  @SerializedName("offer_index")
  private Integer offerIndex = null;

  @SerializedName("offer_tax")
  private BigDecimal offerTax = null;

  @SerializedName("offer_price")
  private BigDecimal offerPrice = null;

  @SerializedName("offer_currency")
  private String offerCurrency = null;

  @SerializedName("offer_cancelation_policies")
  private String offerCancelationPolicies = null;

  @SerializedName("pickup_date")
  private LocalDate pickupDate = null;

  @SerializedName("pickup_time")
  private String pickupTime = null;

  @SerializedName("adults")
  private Integer adults = null;

  @SerializedName("children")
  private Integer children = null;

  @SerializedName("return_date")
  private LocalDate returnDate = null;

  @SerializedName("return_time")
  private String returnTime = null;

  @SerializedName("transport_name")
  private String transportName = null;

  @SerializedName("transport_description")
  private String transportDescription = null;

  @SerializedName("transport_address")
  private String transportAddress = null;

  @SerializedName("transport_latitude")
  private Float transportLatitude = null;

  @SerializedName("transport_longitude")
  private Float transportLongitude = null;

  @SerializedName("transport_distance")
  private BigDecimal transportDistance = null;

  @SerializedName("transport_distance_metric")
  private String transportDistanceMetric = null;

  @SerializedName("transport_images")
  private List<String> transportImages = null;

  @SerializedName("transport_rating")
  private BigDecimal transportRating = null;

  @SerializedName("transport_reviews")
  private List<String> transportReviews = null;

  @SerializedName("transport_type")
  private String transportType = null;

  @SerializedName("transport_class")
  private String transportClass = null;

  @SerializedName("transport_company")
  private String transportCompany = null;

  @SerializedName("transport_company_logo")
  private String transportCompanyLogo = null;

  @SerializedName("transport_passengers_number")
  private Integer transportPassengersNumber = null;

  @SerializedName("transport_bags_number")
  private Integer transportBagsNumber = null;

  @SerializedName("transport_amenities")
  private List<String> transportAmenities = null;

  @SerializedName("booking_questions")
  private List<String> bookingQuestions = null;

  public TransportOfferDetailsSchema offerId(UUID offerId) {
    this.offerId = offerId;
    return this;
  }

   /**
   * Unique identifier of the offer.
   * @return offerId
  **/
  @Schema(description = "Unique identifier of the offer.")
  public UUID getOfferId() {
    return offerId;
  }

  public void setOfferId(UUID offerId) {
    this.offerId = offerId;
  }

  public TransportOfferDetailsSchema supplierOfferId(UUID supplierOfferId) {
    this.supplierOfferId = supplierOfferId;
    return this;
  }

   /**
   * Unique identifier for the supplier’s offer.
   * @return supplierOfferId
  **/
  @Schema(description = "Unique identifier for the supplier’s offer.")
  public UUID getSupplierOfferId() {
    return supplierOfferId;
  }

  public void setSupplierOfferId(UUID supplierOfferId) {
    this.supplierOfferId = supplierOfferId;
  }

  public TransportOfferDetailsSchema offerIndex(Integer offerIndex) {
    this.offerIndex = offerIndex;
    return this;
  }

   /**
   * Index number of the offer.
   * @return offerIndex
  **/
  @Schema(description = "Index number of the offer.")
  public Integer getOfferIndex() {
    return offerIndex;
  }

  public void setOfferIndex(Integer offerIndex) {
    this.offerIndex = offerIndex;
  }

  public TransportOfferDetailsSchema offerTax(BigDecimal offerTax) {
    this.offerTax = offerTax;
    return this;
  }

   /**
   * Applicable taxes on the offer.
   * @return offerTax
  **/
  @Schema(description = "Applicable taxes on the offer.")
  public BigDecimal getOfferTax() {
    return offerTax;
  }

  public void setOfferTax(BigDecimal offerTax) {
    this.offerTax = offerTax;
  }

  public TransportOfferDetailsSchema offerPrice(BigDecimal offerPrice) {
    this.offerPrice = offerPrice;
    return this;
  }

   /**
   * Total price of the offer.
   * @return offerPrice
  **/
  @Schema(description = "Total price of the offer.")
  public BigDecimal getOfferPrice() {
    return offerPrice;
  }

  public void setOfferPrice(BigDecimal offerPrice) {
    this.offerPrice = offerPrice;
  }

  public TransportOfferDetailsSchema offerCurrency(String offerCurrency) {
    this.offerCurrency = offerCurrency;
    return this;
  }

   /**
   * Currency of the offer.
   * @return offerCurrency
  **/
  @Schema(description = "Currency of the offer.")
  public String getOfferCurrency() {
    return offerCurrency;
  }

  public void setOfferCurrency(String offerCurrency) {
    this.offerCurrency = offerCurrency;
  }

  public TransportOfferDetailsSchema offerCancelationPolicies(String offerCancelationPolicies) {
    this.offerCancelationPolicies = offerCancelationPolicies;
    return this;
  }

   /**
   * Cancellation policies of the offer.
   * @return offerCancelationPolicies
  **/
  @Schema(description = "Cancellation policies of the offer.")
  public String getOfferCancelationPolicies() {
    return offerCancelationPolicies;
  }

  public void setOfferCancelationPolicies(String offerCancelationPolicies) {
    this.offerCancelationPolicies = offerCancelationPolicies;
  }

  public TransportOfferDetailsSchema pickupDate(LocalDate pickupDate) {
    this.pickupDate = pickupDate;
    return this;
  }

   /**
   * Date when the transport is scheduled to be picked up.
   * @return pickupDate
  **/
  @Schema(description = "Date when the transport is scheduled to be picked up.")
  public LocalDate getPickupDate() {
    return pickupDate;
  }

  public void setPickupDate(LocalDate pickupDate) {
    this.pickupDate = pickupDate;
  }

  public TransportOfferDetailsSchema pickupTime(String pickupTime) {
    this.pickupTime = pickupTime;
    return this;
  }

   /**
   * Time when the transport is scheduled to be picked up.
   * @return pickupTime
  **/
  @Schema(description = "Time when the transport is scheduled to be picked up.")
  public String getPickupTime() {
    return pickupTime;
  }

  public void setPickupTime(String pickupTime) {
    this.pickupTime = pickupTime;
  }

  public TransportOfferDetailsSchema adults(Integer adults) {
    this.adults = adults;
    return this;
  }

   /**
   * Number of adults included in the transport offer.
   * @return adults
  **/
  @Schema(description = "Number of adults included in the transport offer.")
  public Integer getAdults() {
    return adults;
  }

  public void setAdults(Integer adults) {
    this.adults = adults;
  }

  public TransportOfferDetailsSchema children(Integer children) {
    this.children = children;
    return this;
  }

   /**
   * Number of children included in the transport offer.
   * @return children
  **/
  @Schema(description = "Number of children included in the transport offer.")
  public Integer getChildren() {
    return children;
  }

  public void setChildren(Integer children) {
    this.children = children;
  }

  public TransportOfferDetailsSchema returnDate(LocalDate returnDate) {
    this.returnDate = returnDate;
    return this;
  }

   /**
   * Date when the transport is scheduled to be returned.
   * @return returnDate
  **/
  @Schema(description = "Date when the transport is scheduled to be returned.")
  public LocalDate getReturnDate() {
    return returnDate;
  }

  public void setReturnDate(LocalDate returnDate) {
    this.returnDate = returnDate;
  }

  public TransportOfferDetailsSchema returnTime(String returnTime) {
    this.returnTime = returnTime;
    return this;
  }

   /**
   * Time when the transport is scheduled to be returned.
   * @return returnTime
  **/
  @Schema(description = "Time when the transport is scheduled to be returned.")
  public String getReturnTime() {
    return returnTime;
  }

  public void setReturnTime(String returnTime) {
    this.returnTime = returnTime;
  }

  public TransportOfferDetailsSchema transportName(String transportName) {
    this.transportName = transportName;
    return this;
  }

   /**
   * Name of the transport provider or vehicle.
   * @return transportName
  **/
  @Schema(description = "Name of the transport provider or vehicle.")
  public String getTransportName() {
    return transportName;
  }

  public void setTransportName(String transportName) {
    this.transportName = transportName;
  }

  public TransportOfferDetailsSchema transportDescription(String transportDescription) {
    this.transportDescription = transportDescription;
    return this;
  }

   /**
   * Description of the transport.
   * @return transportDescription
  **/
  @Schema(description = "Description of the transport.")
  public String getTransportDescription() {
    return transportDescription;
  }

  public void setTransportDescription(String transportDescription) {
    this.transportDescription = transportDescription;
  }

  public TransportOfferDetailsSchema transportAddress(String transportAddress) {
    this.transportAddress = transportAddress;
    return this;
  }

   /**
   * Address where the transport is located or where it operates.
   * @return transportAddress
  **/
  @Schema(description = "Address where the transport is located or where it operates.")
  public String getTransportAddress() {
    return transportAddress;
  }

  public void setTransportAddress(String transportAddress) {
    this.transportAddress = transportAddress;
  }

  public TransportOfferDetailsSchema transportLatitude(Float transportLatitude) {
    this.transportLatitude = transportLatitude;
    return this;
  }

   /**
   * Latitude coordinate of the transport location.
   * @return transportLatitude
  **/
  @Schema(description = "Latitude coordinate of the transport location.")
  public Float getTransportLatitude() {
    return transportLatitude;
  }

  public void setTransportLatitude(Float transportLatitude) {
    this.transportLatitude = transportLatitude;
  }

  public TransportOfferDetailsSchema transportLongitude(Float transportLongitude) {
    this.transportLongitude = transportLongitude;
    return this;
  }

   /**
   * Longitude coordinate of the transport location.
   * @return transportLongitude
  **/
  @Schema(description = "Longitude coordinate of the transport location.")
  public Float getTransportLongitude() {
    return transportLongitude;
  }

  public void setTransportLongitude(Float transportLongitude) {
    this.transportLongitude = transportLongitude;
  }

  public TransportOfferDetailsSchema transportDistance(BigDecimal transportDistance) {
    this.transportDistance = transportDistance;
    return this;
  }

   /**
   * Distance covered by the transport offer.
   * @return transportDistance
  **/
  @Schema(description = "Distance covered by the transport offer.")
  public BigDecimal getTransportDistance() {
    return transportDistance;
  }

  public void setTransportDistance(BigDecimal transportDistance) {
    this.transportDistance = transportDistance;
  }

  public TransportOfferDetailsSchema transportDistanceMetric(String transportDistanceMetric) {
    this.transportDistanceMetric = transportDistanceMetric;
    return this;
  }

   /**
   * Metric unit for transport distance (e.g., kilometers, miles).
   * @return transportDistanceMetric
  **/
  @Schema(description = "Metric unit for transport distance (e.g., kilometers, miles).")
  public String getTransportDistanceMetric() {
    return transportDistanceMetric;
  }

  public void setTransportDistanceMetric(String transportDistanceMetric) {
    this.transportDistanceMetric = transportDistanceMetric;
  }

  public TransportOfferDetailsSchema transportImages(List<String> transportImages) {
    this.transportImages = transportImages;
    return this;
  }

  public TransportOfferDetailsSchema addTransportImagesItem(String transportImagesItem) {
    if (this.transportImages == null) {
      this.transportImages = new ArrayList<String>();
    }
    this.transportImages.add(transportImagesItem);
    return this;
  }

   /**
   * Collection of images of the transport.
   * @return transportImages
  **/
  @Schema(description = "Collection of images of the transport.")
  public List<String> getTransportImages() {
    return transportImages;
  }

  public void setTransportImages(List<String> transportImages) {
    this.transportImages = transportImages;
  }

  public TransportOfferDetailsSchema transportRating(BigDecimal transportRating) {
    this.transportRating = transportRating;
    return this;
  }

   /**
   * Rating of the transport.
   * @return transportRating
  **/
  @Schema(description = "Rating of the transport.")
  public BigDecimal getTransportRating() {
    return transportRating;
  }

  public void setTransportRating(BigDecimal transportRating) {
    this.transportRating = transportRating;
  }

  public TransportOfferDetailsSchema transportReviews(List<String> transportReviews) {
    this.transportReviews = transportReviews;
    return this;
  }

  public TransportOfferDetailsSchema addTransportReviewsItem(String transportReviewsItem) {
    if (this.transportReviews == null) {
      this.transportReviews = new ArrayList<String>();
    }
    this.transportReviews.add(transportReviewsItem);
    return this;
  }

   /**
   * Reviews for the transport.
   * @return transportReviews
  **/
  @Schema(description = "Reviews for the transport.")
  public List<String> getTransportReviews() {
    return transportReviews;
  }

  public void setTransportReviews(List<String> transportReviews) {
    this.transportReviews = transportReviews;
  }

  public TransportOfferDetailsSchema transportType(String transportType) {
    this.transportType = transportType;
    return this;
  }

   /**
   * Type of transport (e.g., car, van, scooter).
   * @return transportType
  **/
  @Schema(description = "Type of transport (e.g., car, van, scooter).")
  public String getTransportType() {
    return transportType;
  }

  public void setTransportType(String transportType) {
    this.transportType = transportType;
  }

  public TransportOfferDetailsSchema transportClass(String transportClass) {
    this.transportClass = transportClass;
    return this;
  }

   /**
   * Class of the transport (e.g., economy, luxury).
   * @return transportClass
  **/
  @Schema(description = "Class of the transport (e.g., economy, luxury).")
  public String getTransportClass() {
    return transportClass;
  }

  public void setTransportClass(String transportClass) {
    this.transportClass = transportClass;
  }

  public TransportOfferDetailsSchema transportCompany(String transportCompany) {
    this.transportCompany = transportCompany;
    return this;
  }

   /**
   * Company providing the transport.
   * @return transportCompany
  **/
  @Schema(description = "Company providing the transport.")
  public String getTransportCompany() {
    return transportCompany;
  }

  public void setTransportCompany(String transportCompany) {
    this.transportCompany = transportCompany;
  }

  public TransportOfferDetailsSchema transportCompanyLogo(String transportCompanyLogo) {
    this.transportCompanyLogo = transportCompanyLogo;
    return this;
  }

   /**
   * Logo of the company providing the transport.
   * @return transportCompanyLogo
  **/
  @Schema(description = "Logo of the company providing the transport.")
  public String getTransportCompanyLogo() {
    return transportCompanyLogo;
  }

  public void setTransportCompanyLogo(String transportCompanyLogo) {
    this.transportCompanyLogo = transportCompanyLogo;
  }

  public TransportOfferDetailsSchema transportPassengersNumber(Integer transportPassengersNumber) {
    this.transportPassengersNumber = transportPassengersNumber;
    return this;
  }

   /**
   * Number of passengers the transport can accommodate.
   * @return transportPassengersNumber
  **/
  @Schema(description = "Number of passengers the transport can accommodate.")
  public Integer getTransportPassengersNumber() {
    return transportPassengersNumber;
  }

  public void setTransportPassengersNumber(Integer transportPassengersNumber) {
    this.transportPassengersNumber = transportPassengersNumber;
  }

  public TransportOfferDetailsSchema transportBagsNumber(Integer transportBagsNumber) {
    this.transportBagsNumber = transportBagsNumber;
    return this;
  }

   /**
   * Number of bags the transport can accommodate.
   * @return transportBagsNumber
  **/
  @Schema(description = "Number of bags the transport can accommodate.")
  public Integer getTransportBagsNumber() {
    return transportBagsNumber;
  }

  public void setTransportBagsNumber(Integer transportBagsNumber) {
    this.transportBagsNumber = transportBagsNumber;
  }

  public TransportOfferDetailsSchema transportAmenities(List<String> transportAmenities) {
    this.transportAmenities = transportAmenities;
    return this;
  }

  public TransportOfferDetailsSchema addTransportAmenitiesItem(String transportAmenitiesItem) {
    if (this.transportAmenities == null) {
      this.transportAmenities = new ArrayList<String>();
    }
    this.transportAmenities.add(transportAmenitiesItem);
    return this;
  }

   /**
   * List of amenities provided with the transport.
   * @return transportAmenities
  **/
  @Schema(description = "List of amenities provided with the transport.")
  public List<String> getTransportAmenities() {
    return transportAmenities;
  }

  public void setTransportAmenities(List<String> transportAmenities) {
    this.transportAmenities = transportAmenities;
  }

  public TransportOfferDetailsSchema bookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
    return this;
  }

  public TransportOfferDetailsSchema addBookingQuestionsItem(String bookingQuestionsItem) {
    if (this.bookingQuestions == null) {
      this.bookingQuestions = new ArrayList<String>();
    }
    this.bookingQuestions.add(bookingQuestionsItem);
    return this;
  }

   /**
   * Questions related to booking the transport.
   * @return bookingQuestions
  **/
  @Schema(description = "Questions related to booking the transport.")
  public List<String> getBookingQuestions() {
    return bookingQuestions;
  }

  public void setBookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransportOfferDetailsSchema transportOfferDetailsSchema = (TransportOfferDetailsSchema) o;
    return Objects.equals(this.offerId, transportOfferDetailsSchema.offerId) &&
        Objects.equals(this.supplierOfferId, transportOfferDetailsSchema.supplierOfferId) &&
        Objects.equals(this.offerIndex, transportOfferDetailsSchema.offerIndex) &&
        Objects.equals(this.offerTax, transportOfferDetailsSchema.offerTax) &&
        Objects.equals(this.offerPrice, transportOfferDetailsSchema.offerPrice) &&
        Objects.equals(this.offerCurrency, transportOfferDetailsSchema.offerCurrency) &&
        Objects.equals(this.offerCancelationPolicies, transportOfferDetailsSchema.offerCancelationPolicies) &&
        Objects.equals(this.pickupDate, transportOfferDetailsSchema.pickupDate) &&
        Objects.equals(this.pickupTime, transportOfferDetailsSchema.pickupTime) &&
        Objects.equals(this.adults, transportOfferDetailsSchema.adults) &&
        Objects.equals(this.children, transportOfferDetailsSchema.children) &&
        Objects.equals(this.returnDate, transportOfferDetailsSchema.returnDate) &&
        Objects.equals(this.returnTime, transportOfferDetailsSchema.returnTime) &&
        Objects.equals(this.transportName, transportOfferDetailsSchema.transportName) &&
        Objects.equals(this.transportDescription, transportOfferDetailsSchema.transportDescription) &&
        Objects.equals(this.transportAddress, transportOfferDetailsSchema.transportAddress) &&
        Objects.equals(this.transportLatitude, transportOfferDetailsSchema.transportLatitude) &&
        Objects.equals(this.transportLongitude, transportOfferDetailsSchema.transportLongitude) &&
        Objects.equals(this.transportDistance, transportOfferDetailsSchema.transportDistance) &&
        Objects.equals(this.transportDistanceMetric, transportOfferDetailsSchema.transportDistanceMetric) &&
        Objects.equals(this.transportImages, transportOfferDetailsSchema.transportImages) &&
        Objects.equals(this.transportRating, transportOfferDetailsSchema.transportRating) &&
        Objects.equals(this.transportReviews, transportOfferDetailsSchema.transportReviews) &&
        Objects.equals(this.transportType, transportOfferDetailsSchema.transportType) &&
        Objects.equals(this.transportClass, transportOfferDetailsSchema.transportClass) &&
        Objects.equals(this.transportCompany, transportOfferDetailsSchema.transportCompany) &&
        Objects.equals(this.transportCompanyLogo, transportOfferDetailsSchema.transportCompanyLogo) &&
        Objects.equals(this.transportPassengersNumber, transportOfferDetailsSchema.transportPassengersNumber) &&
        Objects.equals(this.transportBagsNumber, transportOfferDetailsSchema.transportBagsNumber) &&
        Objects.equals(this.transportAmenities, transportOfferDetailsSchema.transportAmenities) &&
        Objects.equals(this.bookingQuestions, transportOfferDetailsSchema.bookingQuestions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offerId, supplierOfferId, offerIndex, offerTax, offerPrice, offerCurrency, offerCancelationPolicies, pickupDate, pickupTime, adults, children, returnDate, returnTime, transportName, transportDescription, transportAddress, transportLatitude, transportLongitude, transportDistance, transportDistanceMetric, transportImages, transportRating, transportReviews, transportType, transportClass, transportCompany, transportCompanyLogo, transportPassengersNumber, transportBagsNumber, transportAmenities, bookingQuestions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransportOfferDetailsSchema {\n");
    
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    supplierOfferId: ").append(toIndentedString(supplierOfferId)).append("\n");
    sb.append("    offerIndex: ").append(toIndentedString(offerIndex)).append("\n");
    sb.append("    offerTax: ").append(toIndentedString(offerTax)).append("\n");
    sb.append("    offerPrice: ").append(toIndentedString(offerPrice)).append("\n");
    sb.append("    offerCurrency: ").append(toIndentedString(offerCurrency)).append("\n");
    sb.append("    offerCancelationPolicies: ").append(toIndentedString(offerCancelationPolicies)).append("\n");
    sb.append("    pickupDate: ").append(toIndentedString(pickupDate)).append("\n");
    sb.append("    pickupTime: ").append(toIndentedString(pickupTime)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    returnDate: ").append(toIndentedString(returnDate)).append("\n");
    sb.append("    returnTime: ").append(toIndentedString(returnTime)).append("\n");
    sb.append("    transportName: ").append(toIndentedString(transportName)).append("\n");
    sb.append("    transportDescription: ").append(toIndentedString(transportDescription)).append("\n");
    sb.append("    transportAddress: ").append(toIndentedString(transportAddress)).append("\n");
    sb.append("    transportLatitude: ").append(toIndentedString(transportLatitude)).append("\n");
    sb.append("    transportLongitude: ").append(toIndentedString(transportLongitude)).append("\n");
    sb.append("    transportDistance: ").append(toIndentedString(transportDistance)).append("\n");
    sb.append("    transportDistanceMetric: ").append(toIndentedString(transportDistanceMetric)).append("\n");
    sb.append("    transportImages: ").append(toIndentedString(transportImages)).append("\n");
    sb.append("    transportRating: ").append(toIndentedString(transportRating)).append("\n");
    sb.append("    transportReviews: ").append(toIndentedString(transportReviews)).append("\n");
    sb.append("    transportType: ").append(toIndentedString(transportType)).append("\n");
    sb.append("    transportClass: ").append(toIndentedString(transportClass)).append("\n");
    sb.append("    transportCompany: ").append(toIndentedString(transportCompany)).append("\n");
    sb.append("    transportCompanyLogo: ").append(toIndentedString(transportCompanyLogo)).append("\n");
    sb.append("    transportPassengersNumber: ").append(toIndentedString(transportPassengersNumber)).append("\n");
    sb.append("    transportBagsNumber: ").append(toIndentedString(transportBagsNumber)).append("\n");
    sb.append("    transportAmenities: ").append(toIndentedString(transportAmenities)).append("\n");
    sb.append("    bookingQuestions: ").append(toIndentedString(bookingQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
