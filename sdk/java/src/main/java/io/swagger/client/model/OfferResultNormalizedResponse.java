/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * Offer Request Normalized Boxcribe API Response
 */
@Schema(description = "Offer Request Normalized Boxcribe API Response")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class OfferResultNormalizedResponse {
  @SerializedName("ids")
  private String ids = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("index")
  private Integer index = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("latitude")
  private BigDecimal latitude = null;

  @SerializedName("longitude")
  private BigDecimal longitude = null;

  @SerializedName("distance")
  private BigDecimal distance = null;

  @SerializedName("distanceUnitOfMeasure")
  private String distanceUnitOfMeasure = null;

  @SerializedName("pictures")
  private List<String> pictures = null;

  @SerializedName("tax")
  private BigDecimal tax = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("priceDescription")
  private String priceDescription = null;

  @SerializedName("freeCancellation")
  private Boolean freeCancellation = null;

  @SerializedName("rating")
  private BigDecimal rating = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("ohter_attributes")
  private Object ohterAttributes = null;

  @SerializedName("offer_rooms")
  private List offerRooms = null;

  @SerializedName("offer_variants")
  private List offerVariants = null;

  public OfferResultNormalizedResponse ids(String ids) {
    this.ids = ids;
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public String getIds() {
    return ids;
  }

  public void setIds(String ids) {
    this.ids = ids;
  }

  public OfferResultNormalizedResponse category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public OfferResultNormalizedResponse index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @Schema(description = "")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public OfferResultNormalizedResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OfferResultNormalizedResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OfferResultNormalizedResponse address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public OfferResultNormalizedResponse latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @Schema(description = "")
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  public OfferResultNormalizedResponse longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @Schema(description = "")
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

  public OfferResultNormalizedResponse distance(BigDecimal distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @Schema(description = "")
  public BigDecimal getDistance() {
    return distance;
  }

  public void setDistance(BigDecimal distance) {
    this.distance = distance;
  }

  public OfferResultNormalizedResponse distanceUnitOfMeasure(String distanceUnitOfMeasure) {
    this.distanceUnitOfMeasure = distanceUnitOfMeasure;
    return this;
  }

   /**
   * Get distanceUnitOfMeasure
   * @return distanceUnitOfMeasure
  **/
  @Schema(description = "")
  public String getDistanceUnitOfMeasure() {
    return distanceUnitOfMeasure;
  }

  public void setDistanceUnitOfMeasure(String distanceUnitOfMeasure) {
    this.distanceUnitOfMeasure = distanceUnitOfMeasure;
  }

  public OfferResultNormalizedResponse pictures(List<String> pictures) {
    this.pictures = pictures;
    return this;
  }

  public OfferResultNormalizedResponse addPicturesItem(String picturesItem) {
    if (this.pictures == null) {
      this.pictures = new ArrayList<String>();
    }
    this.pictures.add(picturesItem);
    return this;
  }

   /**
   * Get pictures
   * @return pictures
  **/
  @Schema(description = "")
  public List<String> getPictures() {
    return pictures;
  }

  public void setPictures(List<String> pictures) {
    this.pictures = pictures;
  }

  public OfferResultNormalizedResponse tax(BigDecimal tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @Schema(description = "")
  public BigDecimal getTax() {
    return tax;
  }

  public void setTax(BigDecimal tax) {
    this.tax = tax;
  }

  public OfferResultNormalizedResponse price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public OfferResultNormalizedResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public OfferResultNormalizedResponse priceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
    return this;
  }

   /**
   * Get priceDescription
   * @return priceDescription
  **/
  @Schema(description = "")
  public String getPriceDescription() {
    return priceDescription;
  }

  public void setPriceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
  }

  public OfferResultNormalizedResponse freeCancellation(Boolean freeCancellation) {
    this.freeCancellation = freeCancellation;
    return this;
  }

   /**
   * Get freeCancellation
   * @return freeCancellation
  **/
  @Schema(description = "")
  public Boolean isFreeCancellation() {
    return freeCancellation;
  }

  public void setFreeCancellation(Boolean freeCancellation) {
    this.freeCancellation = freeCancellation;
  }

  public OfferResultNormalizedResponse rating(BigDecimal rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @Schema(description = "")
  public BigDecimal getRating() {
    return rating;
  }

  public void setRating(BigDecimal rating) {
    this.rating = rating;
  }

  public OfferResultNormalizedResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OfferResultNormalizedResponse ohterAttributes(Object ohterAttributes) {
    this.ohterAttributes = ohterAttributes;
    return this;
  }

   /**
   * Get ohterAttributes
   * @return ohterAttributes
  **/
  @Schema(description = "")
  public Object getOhterAttributes() {
    return ohterAttributes;
  }

  public void setOhterAttributes(Object ohterAttributes) {
    this.ohterAttributes = ohterAttributes;
  }

  public OfferResultNormalizedResponse offerRooms(List offerRooms) {
    this.offerRooms = offerRooms;
    return this;
  }

   /**
   * Get offerRooms
   * @return offerRooms
  **/
  @Schema(description = "")
  public List getOfferRooms() {
    return offerRooms;
  }

  public void setOfferRooms(List offerRooms) {
    this.offerRooms = offerRooms;
  }

  public OfferResultNormalizedResponse offerVariants(List offerVariants) {
    this.offerVariants = offerVariants;
    return this;
  }

   /**
   * Get offerVariants
   * @return offerVariants
  **/
  @Schema(description = "")
  public List getOfferVariants() {
    return offerVariants;
  }

  public void setOfferVariants(List offerVariants) {
    this.offerVariants = offerVariants;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferResultNormalizedResponse offerResultNormalizedResponse = (OfferResultNormalizedResponse) o;
    return Objects.equals(this.ids, offerResultNormalizedResponse.ids) &&
        Objects.equals(this.category, offerResultNormalizedResponse.category) &&
        Objects.equals(this.index, offerResultNormalizedResponse.index) &&
        Objects.equals(this.name, offerResultNormalizedResponse.name) &&
        Objects.equals(this.description, offerResultNormalizedResponse.description) &&
        Objects.equals(this.address, offerResultNormalizedResponse.address) &&
        Objects.equals(this.latitude, offerResultNormalizedResponse.latitude) &&
        Objects.equals(this.longitude, offerResultNormalizedResponse.longitude) &&
        Objects.equals(this.distance, offerResultNormalizedResponse.distance) &&
        Objects.equals(this.distanceUnitOfMeasure, offerResultNormalizedResponse.distanceUnitOfMeasure) &&
        Objects.equals(this.pictures, offerResultNormalizedResponse.pictures) &&
        Objects.equals(this.tax, offerResultNormalizedResponse.tax) &&
        Objects.equals(this.price, offerResultNormalizedResponse.price) &&
        Objects.equals(this.currency, offerResultNormalizedResponse.currency) &&
        Objects.equals(this.priceDescription, offerResultNormalizedResponse.priceDescription) &&
        Objects.equals(this.freeCancellation, offerResultNormalizedResponse.freeCancellation) &&
        Objects.equals(this.rating, offerResultNormalizedResponse.rating) &&
        Objects.equals(this.status, offerResultNormalizedResponse.status) &&
        Objects.equals(this.ohterAttributes, offerResultNormalizedResponse.ohterAttributes) &&
        Objects.equals(this.offerRooms, offerResultNormalizedResponse.offerRooms) &&
        Objects.equals(this.offerVariants, offerResultNormalizedResponse.offerVariants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, category, index, name, description, address, latitude, longitude, distance, distanceUnitOfMeasure, pictures, tax, price, currency, priceDescription, freeCancellation, rating, status, ohterAttributes, offerRooms, offerVariants);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferResultNormalizedResponse {\n");
    
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    distanceUnitOfMeasure: ").append(toIndentedString(distanceUnitOfMeasure)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    priceDescription: ").append(toIndentedString(priceDescription)).append("\n");
    sb.append("    freeCancellation: ").append(toIndentedString(freeCancellation)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ohterAttributes: ").append(toIndentedString(ohterAttributes)).append("\n");
    sb.append("    offerRooms: ").append(toIndentedString(offerRooms)).append("\n");
    sb.append("    offerVariants: ").append(toIndentedString(offerVariants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
