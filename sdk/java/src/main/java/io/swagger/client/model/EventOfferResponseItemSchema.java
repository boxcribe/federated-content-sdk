/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;
/**
 * EventOfferResponseItemSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class EventOfferResponseItemSchema {
  @SerializedName("offer_id")
  private UUID offerId = null;

  @SerializedName("supplier_offer_id")
  private UUID supplierOfferId = null;

  @SerializedName("offer_index")
  private BigDecimal offerIndex = null;

  @SerializedName("offer_tax")
  private BigDecimal offerTax = null;

  @SerializedName("offer_price")
  private BigDecimal offerPrice = null;

  @SerializedName("offer_currency")
  private String offerCurrency = null;

  @SerializedName("offer_cancelation_policies")
  private String offerCancelationPolicies = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("adults")
  private BigDecimal adults = null;

  @SerializedName("children")
  private BigDecimal children = null;

  @SerializedName("event_name")
  private String eventName = null;

  @SerializedName("event_description")
  private String eventDescription = null;

  @SerializedName("event_address")
  private String eventAddress = null;

  @SerializedName("event_latitude")
  private Float eventLatitude = null;

  @SerializedName("event_longitude")
  private Float eventLongitude = null;

  @SerializedName("event_distance")
  private BigDecimal eventDistance = null;

  @SerializedName("event_distance_metric")
  private String eventDistanceMetric = null;

  @SerializedName("event_images")
  private List<String> eventImages = null;

  @SerializedName("event_rating")
  private BigDecimal eventRating = null;

  @SerializedName("event_reviews")
  private List<String> eventReviews = null;

  @SerializedName("event_venue")
  private String eventVenue = null;

  @SerializedName("event_venue_capacity")
  private BigDecimal eventVenueCapacity = null;

  @SerializedName("event_performers")
  private List<String> eventPerformers = null;

  @SerializedName("event_subcategories")
  private List<String> eventSubcategories = null;

  @SerializedName("booking_questions")
  private List<String> bookingQuestions = null;

  public EventOfferResponseItemSchema offerId(UUID offerId) {
    this.offerId = offerId;
    return this;
  }

   /**
   * Unique identifier for the offer.
   * @return offerId
  **/
  @Schema(description = "Unique identifier for the offer.")
  public UUID getOfferId() {
    return offerId;
  }

  public void setOfferId(UUID offerId) {
    this.offerId = offerId;
  }

  public EventOfferResponseItemSchema supplierOfferId(UUID supplierOfferId) {
    this.supplierOfferId = supplierOfferId;
    return this;
  }

   /**
   * Unique identifier for the supplier’s offer.
   * @return supplierOfferId
  **/
  @Schema(description = "Unique identifier for the supplier’s offer.")
  public UUID getSupplierOfferId() {
    return supplierOfferId;
  }

  public void setSupplierOfferId(UUID supplierOfferId) {
    this.supplierOfferId = supplierOfferId;
  }

  public EventOfferResponseItemSchema offerIndex(BigDecimal offerIndex) {
    this.offerIndex = offerIndex;
    return this;
  }

   /**
   * Index of the offer for sorting purposes.
   * @return offerIndex
  **/
  @Schema(description = "Index of the offer for sorting purposes.")
  public BigDecimal getOfferIndex() {
    return offerIndex;
  }

  public void setOfferIndex(BigDecimal offerIndex) {
    this.offerIndex = offerIndex;
  }

  public EventOfferResponseItemSchema offerTax(BigDecimal offerTax) {
    this.offerTax = offerTax;
    return this;
  }

   /**
   * Tax applied to the offer.
   * @return offerTax
  **/
  @Schema(description = "Tax applied to the offer.")
  public BigDecimal getOfferTax() {
    return offerTax;
  }

  public void setOfferTax(BigDecimal offerTax) {
    this.offerTax = offerTax;
  }

  public EventOfferResponseItemSchema offerPrice(BigDecimal offerPrice) {
    this.offerPrice = offerPrice;
    return this;
  }

   /**
   * Price of the offer.
   * @return offerPrice
  **/
  @Schema(description = "Price of the offer.")
  public BigDecimal getOfferPrice() {
    return offerPrice;
  }

  public void setOfferPrice(BigDecimal offerPrice) {
    this.offerPrice = offerPrice;
  }

  public EventOfferResponseItemSchema offerCurrency(String offerCurrency) {
    this.offerCurrency = offerCurrency;
    return this;
  }

   /**
   * Currency of the offer price.
   * @return offerCurrency
  **/
  @Schema(description = "Currency of the offer price.")
  public String getOfferCurrency() {
    return offerCurrency;
  }

  public void setOfferCurrency(String offerCurrency) {
    this.offerCurrency = offerCurrency;
  }

  public EventOfferResponseItemSchema offerCancelationPolicies(String offerCancelationPolicies) {
    this.offerCancelationPolicies = offerCancelationPolicies;
    return this;
  }

   /**
   * Cancellation policies applicable to the offer.
   * @return offerCancelationPolicies
  **/
  @Schema(description = "Cancellation policies applicable to the offer.")
  public String getOfferCancelationPolicies() {
    return offerCancelationPolicies;
  }

  public void setOfferCancelationPolicies(String offerCancelationPolicies) {
    this.offerCancelationPolicies = offerCancelationPolicies;
  }

  public EventOfferResponseItemSchema date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the event.
   * @return date
  **/
  @Schema(description = "Date of the event.")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public EventOfferResponseItemSchema adults(BigDecimal adults) {
    this.adults = adults;
    return this;
  }

   /**
   * Number of adults involved in the event.
   * @return adults
  **/
  @Schema(description = "Number of adults involved in the event.")
  public BigDecimal getAdults() {
    return adults;
  }

  public void setAdults(BigDecimal adults) {
    this.adults = adults;
  }

  public EventOfferResponseItemSchema children(BigDecimal children) {
    this.children = children;
    return this;
  }

   /**
   * Number of children involved in the event.
   * @return children
  **/
  @Schema(description = "Number of children involved in the event.")
  public BigDecimal getChildren() {
    return children;
  }

  public void setChildren(BigDecimal children) {
    this.children = children;
  }

  public EventOfferResponseItemSchema eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Name of the event.
   * @return eventName
  **/
  @Schema(description = "Name of the event.")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public EventOfferResponseItemSchema eventDescription(String eventDescription) {
    this.eventDescription = eventDescription;
    return this;
  }

   /**
   * Description of the event.
   * @return eventDescription
  **/
  @Schema(description = "Description of the event.")
  public String getEventDescription() {
    return eventDescription;
  }

  public void setEventDescription(String eventDescription) {
    this.eventDescription = eventDescription;
  }

  public EventOfferResponseItemSchema eventAddress(String eventAddress) {
    this.eventAddress = eventAddress;
    return this;
  }

   /**
   * Address where the event will take place.
   * @return eventAddress
  **/
  @Schema(description = "Address where the event will take place.")
  public String getEventAddress() {
    return eventAddress;
  }

  public void setEventAddress(String eventAddress) {
    this.eventAddress = eventAddress;
  }

  public EventOfferResponseItemSchema eventLatitude(Float eventLatitude) {
    this.eventLatitude = eventLatitude;
    return this;
  }

   /**
   * Latitude of the event location.
   * @return eventLatitude
  **/
  @Schema(description = "Latitude of the event location.")
  public Float getEventLatitude() {
    return eventLatitude;
  }

  public void setEventLatitude(Float eventLatitude) {
    this.eventLatitude = eventLatitude;
  }

  public EventOfferResponseItemSchema eventLongitude(Float eventLongitude) {
    this.eventLongitude = eventLongitude;
    return this;
  }

   /**
   * Longitude of the event location.
   * @return eventLongitude
  **/
  @Schema(description = "Longitude of the event location.")
  public Float getEventLongitude() {
    return eventLongitude;
  }

  public void setEventLongitude(Float eventLongitude) {
    this.eventLongitude = eventLongitude;
  }

  public EventOfferResponseItemSchema eventDistance(BigDecimal eventDistance) {
    this.eventDistance = eventDistance;
    return this;
  }

   /**
   * Distance to the event from a reference point.
   * @return eventDistance
  **/
  @Schema(description = "Distance to the event from a reference point.")
  public BigDecimal getEventDistance() {
    return eventDistance;
  }

  public void setEventDistance(BigDecimal eventDistance) {
    this.eventDistance = eventDistance;
  }

  public EventOfferResponseItemSchema eventDistanceMetric(String eventDistanceMetric) {
    this.eventDistanceMetric = eventDistanceMetric;
    return this;
  }

   /**
   * Metric used to measure the distance to the event.
   * @return eventDistanceMetric
  **/
  @Schema(description = "Metric used to measure the distance to the event.")
  public String getEventDistanceMetric() {
    return eventDistanceMetric;
  }

  public void setEventDistanceMetric(String eventDistanceMetric) {
    this.eventDistanceMetric = eventDistanceMetric;
  }

  public EventOfferResponseItemSchema eventImages(List<String> eventImages) {
    this.eventImages = eventImages;
    return this;
  }

  public EventOfferResponseItemSchema addEventImagesItem(String eventImagesItem) {
    if (this.eventImages == null) {
      this.eventImages = new ArrayList<String>();
    }
    this.eventImages.add(eventImagesItem);
    return this;
  }

   /**
   * Images of the event.
   * @return eventImages
  **/
  @Schema(description = "Images of the event.")
  public List<String> getEventImages() {
    return eventImages;
  }

  public void setEventImages(List<String> eventImages) {
    this.eventImages = eventImages;
  }

  public EventOfferResponseItemSchema eventRating(BigDecimal eventRating) {
    this.eventRating = eventRating;
    return this;
  }

   /**
   * Rating of the event.
   * @return eventRating
  **/
  @Schema(description = "Rating of the event.")
  public BigDecimal getEventRating() {
    return eventRating;
  }

  public void setEventRating(BigDecimal eventRating) {
    this.eventRating = eventRating;
  }

  public EventOfferResponseItemSchema eventReviews(List<String> eventReviews) {
    this.eventReviews = eventReviews;
    return this;
  }

  public EventOfferResponseItemSchema addEventReviewsItem(String eventReviewsItem) {
    if (this.eventReviews == null) {
      this.eventReviews = new ArrayList<String>();
    }
    this.eventReviews.add(eventReviewsItem);
    return this;
  }

   /**
   * Reviews of the event.
   * @return eventReviews
  **/
  @Schema(description = "Reviews of the event.")
  public List<String> getEventReviews() {
    return eventReviews;
  }

  public void setEventReviews(List<String> eventReviews) {
    this.eventReviews = eventReviews;
  }

  public EventOfferResponseItemSchema eventVenue(String eventVenue) {
    this.eventVenue = eventVenue;
    return this;
  }

   /**
   * Venue where the event will take place.
   * @return eventVenue
  **/
  @Schema(description = "Venue where the event will take place.")
  public String getEventVenue() {
    return eventVenue;
  }

  public void setEventVenue(String eventVenue) {
    this.eventVenue = eventVenue;
  }

  public EventOfferResponseItemSchema eventVenueCapacity(BigDecimal eventVenueCapacity) {
    this.eventVenueCapacity = eventVenueCapacity;
    return this;
  }

   /**
   * Capacity of the venue.
   * @return eventVenueCapacity
  **/
  @Schema(description = "Capacity of the venue.")
  public BigDecimal getEventVenueCapacity() {
    return eventVenueCapacity;
  }

  public void setEventVenueCapacity(BigDecimal eventVenueCapacity) {
    this.eventVenueCapacity = eventVenueCapacity;
  }

  public EventOfferResponseItemSchema eventPerformers(List<String> eventPerformers) {
    this.eventPerformers = eventPerformers;
    return this;
  }

  public EventOfferResponseItemSchema addEventPerformersItem(String eventPerformersItem) {
    if (this.eventPerformers == null) {
      this.eventPerformers = new ArrayList<String>();
    }
    this.eventPerformers.add(eventPerformersItem);
    return this;
  }

   /**
   * Performers at the event.
   * @return eventPerformers
  **/
  @Schema(description = "Performers at the event.")
  public List<String> getEventPerformers() {
    return eventPerformers;
  }

  public void setEventPerformers(List<String> eventPerformers) {
    this.eventPerformers = eventPerformers;
  }

  public EventOfferResponseItemSchema eventSubcategories(List<String> eventSubcategories) {
    this.eventSubcategories = eventSubcategories;
    return this;
  }

  public EventOfferResponseItemSchema addEventSubcategoriesItem(String eventSubcategoriesItem) {
    if (this.eventSubcategories == null) {
      this.eventSubcategories = new ArrayList<String>();
    }
    this.eventSubcategories.add(eventSubcategoriesItem);
    return this;
  }

   /**
   * Subcategories of the event.
   * @return eventSubcategories
  **/
  @Schema(description = "Subcategories of the event.")
  public List<String> getEventSubcategories() {
    return eventSubcategories;
  }

  public void setEventSubcategories(List<String> eventSubcategories) {
    this.eventSubcategories = eventSubcategories;
  }

  public EventOfferResponseItemSchema bookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
    return this;
  }

  public EventOfferResponseItemSchema addBookingQuestionsItem(String bookingQuestionsItem) {
    if (this.bookingQuestions == null) {
      this.bookingQuestions = new ArrayList<String>();
    }
    this.bookingQuestions.add(bookingQuestionsItem);
    return this;
  }

   /**
   * Questions related to booking the event.
   * @return bookingQuestions
  **/
  @Schema(description = "Questions related to booking the event.")
  public List<String> getBookingQuestions() {
    return bookingQuestions;
  }

  public void setBookingQuestions(List<String> bookingQuestions) {
    this.bookingQuestions = bookingQuestions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventOfferResponseItemSchema eventOfferResponseItemSchema = (EventOfferResponseItemSchema) o;
    return Objects.equals(this.offerId, eventOfferResponseItemSchema.offerId) &&
        Objects.equals(this.supplierOfferId, eventOfferResponseItemSchema.supplierOfferId) &&
        Objects.equals(this.offerIndex, eventOfferResponseItemSchema.offerIndex) &&
        Objects.equals(this.offerTax, eventOfferResponseItemSchema.offerTax) &&
        Objects.equals(this.offerPrice, eventOfferResponseItemSchema.offerPrice) &&
        Objects.equals(this.offerCurrency, eventOfferResponseItemSchema.offerCurrency) &&
        Objects.equals(this.offerCancelationPolicies, eventOfferResponseItemSchema.offerCancelationPolicies) &&
        Objects.equals(this.date, eventOfferResponseItemSchema.date) &&
        Objects.equals(this.adults, eventOfferResponseItemSchema.adults) &&
        Objects.equals(this.children, eventOfferResponseItemSchema.children) &&
        Objects.equals(this.eventName, eventOfferResponseItemSchema.eventName) &&
        Objects.equals(this.eventDescription, eventOfferResponseItemSchema.eventDescription) &&
        Objects.equals(this.eventAddress, eventOfferResponseItemSchema.eventAddress) &&
        Objects.equals(this.eventLatitude, eventOfferResponseItemSchema.eventLatitude) &&
        Objects.equals(this.eventLongitude, eventOfferResponseItemSchema.eventLongitude) &&
        Objects.equals(this.eventDistance, eventOfferResponseItemSchema.eventDistance) &&
        Objects.equals(this.eventDistanceMetric, eventOfferResponseItemSchema.eventDistanceMetric) &&
        Objects.equals(this.eventImages, eventOfferResponseItemSchema.eventImages) &&
        Objects.equals(this.eventRating, eventOfferResponseItemSchema.eventRating) &&
        Objects.equals(this.eventReviews, eventOfferResponseItemSchema.eventReviews) &&
        Objects.equals(this.eventVenue, eventOfferResponseItemSchema.eventVenue) &&
        Objects.equals(this.eventVenueCapacity, eventOfferResponseItemSchema.eventVenueCapacity) &&
        Objects.equals(this.eventPerformers, eventOfferResponseItemSchema.eventPerformers) &&
        Objects.equals(this.eventSubcategories, eventOfferResponseItemSchema.eventSubcategories) &&
        Objects.equals(this.bookingQuestions, eventOfferResponseItemSchema.bookingQuestions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offerId, supplierOfferId, offerIndex, offerTax, offerPrice, offerCurrency, offerCancelationPolicies, date, adults, children, eventName, eventDescription, eventAddress, eventLatitude, eventLongitude, eventDistance, eventDistanceMetric, eventImages, eventRating, eventReviews, eventVenue, eventVenueCapacity, eventPerformers, eventSubcategories, bookingQuestions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventOfferResponseItemSchema {\n");
    
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    supplierOfferId: ").append(toIndentedString(supplierOfferId)).append("\n");
    sb.append("    offerIndex: ").append(toIndentedString(offerIndex)).append("\n");
    sb.append("    offerTax: ").append(toIndentedString(offerTax)).append("\n");
    sb.append("    offerPrice: ").append(toIndentedString(offerPrice)).append("\n");
    sb.append("    offerCurrency: ").append(toIndentedString(offerCurrency)).append("\n");
    sb.append("    offerCancelationPolicies: ").append(toIndentedString(offerCancelationPolicies)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventDescription: ").append(toIndentedString(eventDescription)).append("\n");
    sb.append("    eventAddress: ").append(toIndentedString(eventAddress)).append("\n");
    sb.append("    eventLatitude: ").append(toIndentedString(eventLatitude)).append("\n");
    sb.append("    eventLongitude: ").append(toIndentedString(eventLongitude)).append("\n");
    sb.append("    eventDistance: ").append(toIndentedString(eventDistance)).append("\n");
    sb.append("    eventDistanceMetric: ").append(toIndentedString(eventDistanceMetric)).append("\n");
    sb.append("    eventImages: ").append(toIndentedString(eventImages)).append("\n");
    sb.append("    eventRating: ").append(toIndentedString(eventRating)).append("\n");
    sb.append("    eventReviews: ").append(toIndentedString(eventReviews)).append("\n");
    sb.append("    eventVenue: ").append(toIndentedString(eventVenue)).append("\n");
    sb.append("    eventVenueCapacity: ").append(toIndentedString(eventVenueCapacity)).append("\n");
    sb.append("    eventPerformers: ").append(toIndentedString(eventPerformers)).append("\n");
    sb.append("    eventSubcategories: ").append(toIndentedString(eventSubcategories)).append("\n");
    sb.append("    bookingQuestions: ").append(toIndentedString(bookingQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
