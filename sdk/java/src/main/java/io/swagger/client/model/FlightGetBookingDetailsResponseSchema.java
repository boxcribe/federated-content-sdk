/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FlightBookingCustomerSchema;
import io.swagger.client.model.FlightOfferRequestSchema;
import io.swagger.client.model.FlightOfferResponseItemSchema;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * FlightGetBookingDetailsResponseSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class FlightGetBookingDetailsResponseSchema {
  @SerializedName("company_id")
  private UUID companyId = null;

  @SerializedName("tenant_id")
  private UUID tenantId = null;

  @SerializedName("category_id")
  private UUID categoryId = null;

  @SerializedName("supplier_id")
  private UUID supplierId = null;

  @SerializedName("booking_id")
  private UUID bookingId = null;

  @SerializedName("supplier_booking_id")
  private UUID supplierBookingId = null;

  @SerializedName("supplier_booking_reference")
  private String supplierBookingReference = null;

  @SerializedName("customer_reference")
  private String customerReference = null;

  @SerializedName("booking_reference")
  private String bookingReference = null;

  @SerializedName("payment_reference")
  private String paymentReference = null;

  @SerializedName("booking_status")
  private String bookingStatus = null;

  @SerializedName("booking_tax")
  private Float bookingTax = null;

  @SerializedName("booking_price")
  private Float bookingPrice = null;

  @SerializedName("booking_currency")
  private String bookingCurrency = null;

  @SerializedName("booking_cancellation_policies")
  private String bookingCancellationPolicies = null;

  @SerializedName("customer")
  private FlightBookingCustomerSchema customer = null;

  @SerializedName("offer_request")
  private FlightOfferRequestSchema offerRequest = null;

  @SerializedName("offer")
  private FlightOfferResponseItemSchema offer = null;

  @SerializedName("passengers")
  private List<FlightBookingCustomerSchema> passengers = null;

  @SerializedName("success")
  private Boolean success = null;

  @SerializedName("error_message")
  private String errorMessage = null;

  public FlightGetBookingDetailsResponseSchema companyId(UUID companyId) {
    this.companyId = companyId;
    return this;
  }

   /**
   * Identifier for the company associated with the booking.
   * @return companyId
  **/
  @Schema(description = "Identifier for the company associated with the booking.")
  public UUID getCompanyId() {
    return companyId;
  }

  public void setCompanyId(UUID companyId) {
    this.companyId = companyId;
  }

  public FlightGetBookingDetailsResponseSchema tenantId(UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Identifier for the tenant associated with the booking.
   * @return tenantId
  **/
  @Schema(description = "Identifier for the tenant associated with the booking.")
  public UUID getTenantId() {
    return tenantId;
  }

  public void setTenantId(UUID tenantId) {
    this.tenantId = tenantId;
  }

  public FlightGetBookingDetailsResponseSchema categoryId(UUID categoryId) {
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Identifier for the category of the booking.
   * @return categoryId
  **/
  @Schema(description = "Identifier for the category of the booking.")
  public UUID getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(UUID categoryId) {
    this.categoryId = categoryId;
  }

  public FlightGetBookingDetailsResponseSchema supplierId(UUID supplierId) {
    this.supplierId = supplierId;
    return this;
  }

   /**
   * Identifier for the supplier of the booking.
   * @return supplierId
  **/
  @Schema(description = "Identifier for the supplier of the booking.")
  public UUID getSupplierId() {
    return supplierId;
  }

  public void setSupplierId(UUID supplierId) {
    this.supplierId = supplierId;
  }

  public FlightGetBookingDetailsResponseSchema bookingId(UUID bookingId) {
    this.bookingId = bookingId;
    return this;
  }

   /**
   * Unique identifier for the booking.
   * @return bookingId
  **/
  @Schema(description = "Unique identifier for the booking.")
  public UUID getBookingId() {
    return bookingId;
  }

  public void setBookingId(UUID bookingId) {
    this.bookingId = bookingId;
  }

  public FlightGetBookingDetailsResponseSchema supplierBookingId(UUID supplierBookingId) {
    this.supplierBookingId = supplierBookingId;
    return this;
  }

   /**
   * Supplier’s identifier for the booking.
   * @return supplierBookingId
  **/
  @Schema(description = "Supplier’s identifier for the booking.")
  public UUID getSupplierBookingId() {
    return supplierBookingId;
  }

  public void setSupplierBookingId(UUID supplierBookingId) {
    this.supplierBookingId = supplierBookingId;
  }

  public FlightGetBookingDetailsResponseSchema supplierBookingReference(String supplierBookingReference) {
    this.supplierBookingReference = supplierBookingReference;
    return this;
  }

   /**
   * Reference number provided by the supplier for the booking.
   * @return supplierBookingReference
  **/
  @Schema(description = "Reference number provided by the supplier for the booking.")
  public String getSupplierBookingReference() {
    return supplierBookingReference;
  }

  public void setSupplierBookingReference(String supplierBookingReference) {
    this.supplierBookingReference = supplierBookingReference;
  }

  public FlightGetBookingDetailsResponseSchema customerReference(String customerReference) {
    this.customerReference = customerReference;
    return this;
  }

   /**
   * Customer reference number associated with the booking.
   * @return customerReference
  **/
  @Schema(description = "Customer reference number associated with the booking.")
  public String getCustomerReference() {
    return customerReference;
  }

  public void setCustomerReference(String customerReference) {
    this.customerReference = customerReference;
  }

  public FlightGetBookingDetailsResponseSchema bookingReference(String bookingReference) {
    this.bookingReference = bookingReference;
    return this;
  }

   /**
   * Internal reference number for the booking.
   * @return bookingReference
  **/
  @Schema(description = "Internal reference number for the booking.")
  public String getBookingReference() {
    return bookingReference;
  }

  public void setBookingReference(String bookingReference) {
    this.bookingReference = bookingReference;
  }

  public FlightGetBookingDetailsResponseSchema paymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
    return this;
  }

   /**
   * Reference number for the payment associated with the booking.
   * @return paymentReference
  **/
  @Schema(description = "Reference number for the payment associated with the booking.")
  public String getPaymentReference() {
    return paymentReference;
  }

  public void setPaymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
  }

  public FlightGetBookingDetailsResponseSchema bookingStatus(String bookingStatus) {
    this.bookingStatus = bookingStatus;
    return this;
  }

   /**
   * Current status of the booking.
   * @return bookingStatus
  **/
  @Schema(description = "Current status of the booking.")
  public String getBookingStatus() {
    return bookingStatus;
  }

  public void setBookingStatus(String bookingStatus) {
    this.bookingStatus = bookingStatus;
  }

  public FlightGetBookingDetailsResponseSchema bookingTax(Float bookingTax) {
    this.bookingTax = bookingTax;
    return this;
  }

   /**
   * Tax applied to the booking.
   * @return bookingTax
  **/
  @Schema(description = "Tax applied to the booking.")
  public Float getBookingTax() {
    return bookingTax;
  }

  public void setBookingTax(Float bookingTax) {
    this.bookingTax = bookingTax;
  }

  public FlightGetBookingDetailsResponseSchema bookingPrice(Float bookingPrice) {
    this.bookingPrice = bookingPrice;
    return this;
  }

   /**
   * Total price of the booking.
   * @return bookingPrice
  **/
  @Schema(description = "Total price of the booking.")
  public Float getBookingPrice() {
    return bookingPrice;
  }

  public void setBookingPrice(Float bookingPrice) {
    this.bookingPrice = bookingPrice;
  }

  public FlightGetBookingDetailsResponseSchema bookingCurrency(String bookingCurrency) {
    this.bookingCurrency = bookingCurrency;
    return this;
  }

   /**
   * Currency used for the booking pricing.
   * @return bookingCurrency
  **/
  @Schema(description = "Currency used for the booking pricing.")
  public String getBookingCurrency() {
    return bookingCurrency;
  }

  public void setBookingCurrency(String bookingCurrency) {
    this.bookingCurrency = bookingCurrency;
  }

  public FlightGetBookingDetailsResponseSchema bookingCancellationPolicies(String bookingCancellationPolicies) {
    this.bookingCancellationPolicies = bookingCancellationPolicies;
    return this;
  }

   /**
   * Cancellation policies applicable to the booking.
   * @return bookingCancellationPolicies
  **/
  @Schema(description = "Cancellation policies applicable to the booking.")
  public String getBookingCancellationPolicies() {
    return bookingCancellationPolicies;
  }

  public void setBookingCancellationPolicies(String bookingCancellationPolicies) {
    this.bookingCancellationPolicies = bookingCancellationPolicies;
  }

  public FlightGetBookingDetailsResponseSchema customer(FlightBookingCustomerSchema customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public FlightBookingCustomerSchema getCustomer() {
    return customer;
  }

  public void setCustomer(FlightBookingCustomerSchema customer) {
    this.customer = customer;
  }

  public FlightGetBookingDetailsResponseSchema offerRequest(FlightOfferRequestSchema offerRequest) {
    this.offerRequest = offerRequest;
    return this;
  }

   /**
   * Get offerRequest
   * @return offerRequest
  **/
  @Schema(description = "")
  public FlightOfferRequestSchema getOfferRequest() {
    return offerRequest;
  }

  public void setOfferRequest(FlightOfferRequestSchema offerRequest) {
    this.offerRequest = offerRequest;
  }

  public FlightGetBookingDetailsResponseSchema offer(FlightOfferResponseItemSchema offer) {
    this.offer = offer;
    return this;
  }

   /**
   * Get offer
   * @return offer
  **/
  @Schema(description = "")
  public FlightOfferResponseItemSchema getOffer() {
    return offer;
  }

  public void setOffer(FlightOfferResponseItemSchema offer) {
    this.offer = offer;
  }

  public FlightGetBookingDetailsResponseSchema passengers(List<FlightBookingCustomerSchema> passengers) {
    this.passengers = passengers;
    return this;
  }

  public FlightGetBookingDetailsResponseSchema addPassengersItem(FlightBookingCustomerSchema passengersItem) {
    if (this.passengers == null) {
      this.passengers = new ArrayList<FlightBookingCustomerSchema>();
    }
    this.passengers.add(passengersItem);
    return this;
  }

   /**
   * Get passengers
   * @return passengers
  **/
  @Schema(description = "")
  public List<FlightBookingCustomerSchema> getPassengers() {
    return passengers;
  }

  public void setPassengers(List<FlightBookingCustomerSchema> passengers) {
    this.passengers = passengers;
  }

  public FlightGetBookingDetailsResponseSchema success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Indicates if the booking was successful.
   * @return success
  **/
  @Schema(description = "Indicates if the booking was successful.")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public FlightGetBookingDetailsResponseSchema errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Provides details on any error that occurred
   * @return errorMessage
  **/
  @Schema(description = "Provides details on any error that occurred")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightGetBookingDetailsResponseSchema flightGetBookingDetailsResponseSchema = (FlightGetBookingDetailsResponseSchema) o;
    return Objects.equals(this.companyId, flightGetBookingDetailsResponseSchema.companyId) &&
        Objects.equals(this.tenantId, flightGetBookingDetailsResponseSchema.tenantId) &&
        Objects.equals(this.categoryId, flightGetBookingDetailsResponseSchema.categoryId) &&
        Objects.equals(this.supplierId, flightGetBookingDetailsResponseSchema.supplierId) &&
        Objects.equals(this.bookingId, flightGetBookingDetailsResponseSchema.bookingId) &&
        Objects.equals(this.supplierBookingId, flightGetBookingDetailsResponseSchema.supplierBookingId) &&
        Objects.equals(this.supplierBookingReference, flightGetBookingDetailsResponseSchema.supplierBookingReference) &&
        Objects.equals(this.customerReference, flightGetBookingDetailsResponseSchema.customerReference) &&
        Objects.equals(this.bookingReference, flightGetBookingDetailsResponseSchema.bookingReference) &&
        Objects.equals(this.paymentReference, flightGetBookingDetailsResponseSchema.paymentReference) &&
        Objects.equals(this.bookingStatus, flightGetBookingDetailsResponseSchema.bookingStatus) &&
        Objects.equals(this.bookingTax, flightGetBookingDetailsResponseSchema.bookingTax) &&
        Objects.equals(this.bookingPrice, flightGetBookingDetailsResponseSchema.bookingPrice) &&
        Objects.equals(this.bookingCurrency, flightGetBookingDetailsResponseSchema.bookingCurrency) &&
        Objects.equals(this.bookingCancellationPolicies, flightGetBookingDetailsResponseSchema.bookingCancellationPolicies) &&
        Objects.equals(this.customer, flightGetBookingDetailsResponseSchema.customer) &&
        Objects.equals(this.offerRequest, flightGetBookingDetailsResponseSchema.offerRequest) &&
        Objects.equals(this.offer, flightGetBookingDetailsResponseSchema.offer) &&
        Objects.equals(this.passengers, flightGetBookingDetailsResponseSchema.passengers) &&
        Objects.equals(this.success, flightGetBookingDetailsResponseSchema.success) &&
        Objects.equals(this.errorMessage, flightGetBookingDetailsResponseSchema.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, tenantId, categoryId, supplierId, bookingId, supplierBookingId, supplierBookingReference, customerReference, bookingReference, paymentReference, bookingStatus, bookingTax, bookingPrice, bookingCurrency, bookingCancellationPolicies, customer, offerRequest, offer, passengers, success, errorMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightGetBookingDetailsResponseSchema {\n");
    
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    supplierId: ").append(toIndentedString(supplierId)).append("\n");
    sb.append("    bookingId: ").append(toIndentedString(bookingId)).append("\n");
    sb.append("    supplierBookingId: ").append(toIndentedString(supplierBookingId)).append("\n");
    sb.append("    supplierBookingReference: ").append(toIndentedString(supplierBookingReference)).append("\n");
    sb.append("    customerReference: ").append(toIndentedString(customerReference)).append("\n");
    sb.append("    bookingReference: ").append(toIndentedString(bookingReference)).append("\n");
    sb.append("    paymentReference: ").append(toIndentedString(paymentReference)).append("\n");
    sb.append("    bookingStatus: ").append(toIndentedString(bookingStatus)).append("\n");
    sb.append("    bookingTax: ").append(toIndentedString(bookingTax)).append("\n");
    sb.append("    bookingPrice: ").append(toIndentedString(bookingPrice)).append("\n");
    sb.append("    bookingCurrency: ").append(toIndentedString(bookingCurrency)).append("\n");
    sb.append("    bookingCancellationPolicies: ").append(toIndentedString(bookingCancellationPolicies)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    offerRequest: ").append(toIndentedString(offerRequest)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    passengers: ").append(toIndentedString(passengers)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
