/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * TransportOfferRequestSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class TransportOfferRequestSchema {
  @SerializedName("pickup_location_latitude")
  private Float pickupLocationLatitude = null;

  @SerializedName("pickup_location_longitude")
  private Float pickupLocationLongitude = null;

  @SerializedName("pickup_date")
  private LocalDate pickupDate = null;

  @SerializedName("pickup_time")
  private String pickupTime = null;

  @SerializedName("adults")
  private Integer adults = null;

  @SerializedName("children")
  private Integer children = null;

  @SerializedName("return_location_latitude")
  private Float returnLocationLatitude = null;

  @SerializedName("return_location_longitude")
  private Float returnLocationLongitude = null;

  @SerializedName("return_date")
  private LocalDate returnDate = null;

  @SerializedName("return_time")
  private String returnTime = null;

  @SerializedName("filter_by_keyword")
  private String filterByKeyword = null;

  @SerializedName("filter_by_price_min")
  private BigDecimal filterByPriceMin = null;

  @SerializedName("filter_by_price_max")
  private BigDecimal filterByPriceMax = null;

  @SerializedName("filter_by_distance_min")
  private Integer filterByDistanceMin = null;

  @SerializedName("filter_by_distance_max")
  private Integer filterByDistanceMax = null;

  @SerializedName("filter_by_rating_min")
  private Integer filterByRatingMin = null;

  @SerializedName("filter_by_rating_max")
  private Integer filterByRatingMax = null;

  @SerializedName("filter_by_stars")
  private List<String> filterByStars = null;

  @SerializedName("filter_by_facilities")
  private List<String> filterByFacilities = null;

  @SerializedName("filter_by_amenities")
  private List<String> filterByAmenities = null;

  @SerializedName("filter_by_passengers_min")
  private Integer filterByPassengersMin = null;

  @SerializedName("filter_by_passengers_max")
  private Integer filterByPassengersMax = null;

  @SerializedName("filter_by_bags_min")
  private Integer filterByBagsMin = null;

  @SerializedName("filter_by_bags_max")
  private Integer filterByBagsMax = null;

  @SerializedName("filter_by_type")
  private List<String> filterByType = null;

  @SerializedName("filter_by_company")
  private List<String> filterByCompany = null;

  @SerializedName("filter_by_class")
  private List<String> filterByClass = null;

  @SerializedName("sort_by")
  private String sortBy = null;

  @SerializedName("sort_order")
  private String sortOrder = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("metric")
  private String metric = null;

  public TransportOfferRequestSchema pickupLocationLatitude(Float pickupLocationLatitude) {
    this.pickupLocationLatitude = pickupLocationLatitude;
    return this;
  }

   /**
   * Latitude for the pickup location.
   * @return pickupLocationLatitude
  **/
  @Schema(description = "Latitude for the pickup location.")
  public Float getPickupLocationLatitude() {
    return pickupLocationLatitude;
  }

  public void setPickupLocationLatitude(Float pickupLocationLatitude) {
    this.pickupLocationLatitude = pickupLocationLatitude;
  }

  public TransportOfferRequestSchema pickupLocationLongitude(Float pickupLocationLongitude) {
    this.pickupLocationLongitude = pickupLocationLongitude;
    return this;
  }

   /**
   * Longitude for the pickup location.
   * @return pickupLocationLongitude
  **/
  @Schema(description = "Longitude for the pickup location.")
  public Float getPickupLocationLongitude() {
    return pickupLocationLongitude;
  }

  public void setPickupLocationLongitude(Float pickupLocationLongitude) {
    this.pickupLocationLongitude = pickupLocationLongitude;
  }

  public TransportOfferRequestSchema pickupDate(LocalDate pickupDate) {
    this.pickupDate = pickupDate;
    return this;
  }

   /**
   * Date of the pickup.
   * @return pickupDate
  **/
  @Schema(description = "Date of the pickup.")
  public LocalDate getPickupDate() {
    return pickupDate;
  }

  public void setPickupDate(LocalDate pickupDate) {
    this.pickupDate = pickupDate;
  }

  public TransportOfferRequestSchema pickupTime(String pickupTime) {
    this.pickupTime = pickupTime;
    return this;
  }

   /**
   * Time of the pickup.
   * @return pickupTime
  **/
  @Schema(description = "Time of the pickup.")
  public String getPickupTime() {
    return pickupTime;
  }

  public void setPickupTime(String pickupTime) {
    this.pickupTime = pickupTime;
  }

  public TransportOfferRequestSchema adults(Integer adults) {
    this.adults = adults;
    return this;
  }

   /**
   * Number of adults.
   * @return adults
  **/
  @Schema(description = "Number of adults.")
  public Integer getAdults() {
    return adults;
  }

  public void setAdults(Integer adults) {
    this.adults = adults;
  }

  public TransportOfferRequestSchema children(Integer children) {
    this.children = children;
    return this;
  }

   /**
   * Number of children.
   * @return children
  **/
  @Schema(description = "Number of children.")
  public Integer getChildren() {
    return children;
  }

  public void setChildren(Integer children) {
    this.children = children;
  }

  public TransportOfferRequestSchema returnLocationLatitude(Float returnLocationLatitude) {
    this.returnLocationLatitude = returnLocationLatitude;
    return this;
  }

   /**
   * Latitude for the return location.
   * @return returnLocationLatitude
  **/
  @Schema(description = "Latitude for the return location.")
  public Float getReturnLocationLatitude() {
    return returnLocationLatitude;
  }

  public void setReturnLocationLatitude(Float returnLocationLatitude) {
    this.returnLocationLatitude = returnLocationLatitude;
  }

  public TransportOfferRequestSchema returnLocationLongitude(Float returnLocationLongitude) {
    this.returnLocationLongitude = returnLocationLongitude;
    return this;
  }

   /**
   * Longitude for the return location.
   * @return returnLocationLongitude
  **/
  @Schema(description = "Longitude for the return location.")
  public Float getReturnLocationLongitude() {
    return returnLocationLongitude;
  }

  public void setReturnLocationLongitude(Float returnLocationLongitude) {
    this.returnLocationLongitude = returnLocationLongitude;
  }

  public TransportOfferRequestSchema returnDate(LocalDate returnDate) {
    this.returnDate = returnDate;
    return this;
  }

   /**
   * Date of the return.
   * @return returnDate
  **/
  @Schema(description = "Date of the return.")
  public LocalDate getReturnDate() {
    return returnDate;
  }

  public void setReturnDate(LocalDate returnDate) {
    this.returnDate = returnDate;
  }

  public TransportOfferRequestSchema returnTime(String returnTime) {
    this.returnTime = returnTime;
    return this;
  }

   /**
   * Time of the return.
   * @return returnTime
  **/
  @Schema(description = "Time of the return.")
  public String getReturnTime() {
    return returnTime;
  }

  public void setReturnTime(String returnTime) {
    this.returnTime = returnTime;
  }

  public TransportOfferRequestSchema filterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
    return this;
  }

   /**
   * Keyword filter.
   * @return filterByKeyword
  **/
  @Schema(description = "Keyword filter.")
  public String getFilterByKeyword() {
    return filterByKeyword;
  }

  public void setFilterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
  }

  public TransportOfferRequestSchema filterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
    return this;
  }

   /**
   * Minimum price filter.
   * @return filterByPriceMin
  **/
  @Schema(description = "Minimum price filter.")
  public BigDecimal getFilterByPriceMin() {
    return filterByPriceMin;
  }

  public void setFilterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
  }

  public TransportOfferRequestSchema filterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
    return this;
  }

   /**
   * Maximum price filter.
   * @return filterByPriceMax
  **/
  @Schema(description = "Maximum price filter.")
  public BigDecimal getFilterByPriceMax() {
    return filterByPriceMax;
  }

  public void setFilterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
  }

  public TransportOfferRequestSchema filterByDistanceMin(Integer filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
    return this;
  }

   /**
   * Minimum distance filter.
   * @return filterByDistanceMin
  **/
  @Schema(description = "Minimum distance filter.")
  public Integer getFilterByDistanceMin() {
    return filterByDistanceMin;
  }

  public void setFilterByDistanceMin(Integer filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
  }

  public TransportOfferRequestSchema filterByDistanceMax(Integer filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
    return this;
  }

   /**
   * Maximum distance filter.
   * @return filterByDistanceMax
  **/
  @Schema(description = "Maximum distance filter.")
  public Integer getFilterByDistanceMax() {
    return filterByDistanceMax;
  }

  public void setFilterByDistanceMax(Integer filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
  }

  public TransportOfferRequestSchema filterByRatingMin(Integer filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
    return this;
  }

   /**
   * Minimum rating filter.
   * @return filterByRatingMin
  **/
  @Schema(description = "Minimum rating filter.")
  public Integer getFilterByRatingMin() {
    return filterByRatingMin;
  }

  public void setFilterByRatingMin(Integer filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
  }

  public TransportOfferRequestSchema filterByRatingMax(Integer filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
    return this;
  }

   /**
   * Maximum rating filter.
   * @return filterByRatingMax
  **/
  @Schema(description = "Maximum rating filter.")
  public Integer getFilterByRatingMax() {
    return filterByRatingMax;
  }

  public void setFilterByRatingMax(Integer filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
  }

  public TransportOfferRequestSchema filterByStars(List<String> filterByStars) {
    this.filterByStars = filterByStars;
    return this;
  }

  public TransportOfferRequestSchema addFilterByStarsItem(String filterByStarsItem) {
    if (this.filterByStars == null) {
      this.filterByStars = new ArrayList<String>();
    }
    this.filterByStars.add(filterByStarsItem);
    return this;
  }

   /**
   * Filter by star rating.
   * @return filterByStars
  **/
  @Schema(description = "Filter by star rating.")
  public List<String> getFilterByStars() {
    return filterByStars;
  }

  public void setFilterByStars(List<String> filterByStars) {
    this.filterByStars = filterByStars;
  }

  public TransportOfferRequestSchema filterByFacilities(List<String> filterByFacilities) {
    this.filterByFacilities = filterByFacilities;
    return this;
  }

  public TransportOfferRequestSchema addFilterByFacilitiesItem(String filterByFacilitiesItem) {
    if (this.filterByFacilities == null) {
      this.filterByFacilities = new ArrayList<String>();
    }
    this.filterByFacilities.add(filterByFacilitiesItem);
    return this;
  }

   /**
   * Facilities filter.
   * @return filterByFacilities
  **/
  @Schema(description = "Facilities filter.")
  public List<String> getFilterByFacilities() {
    return filterByFacilities;
  }

  public void setFilterByFacilities(List<String> filterByFacilities) {
    this.filterByFacilities = filterByFacilities;
  }

  public TransportOfferRequestSchema filterByAmenities(List<String> filterByAmenities) {
    this.filterByAmenities = filterByAmenities;
    return this;
  }

  public TransportOfferRequestSchema addFilterByAmenitiesItem(String filterByAmenitiesItem) {
    if (this.filterByAmenities == null) {
      this.filterByAmenities = new ArrayList<String>();
    }
    this.filterByAmenities.add(filterByAmenitiesItem);
    return this;
  }

   /**
   * Amenities filter.
   * @return filterByAmenities
  **/
  @Schema(description = "Amenities filter.")
  public List<String> getFilterByAmenities() {
    return filterByAmenities;
  }

  public void setFilterByAmenities(List<String> filterByAmenities) {
    this.filterByAmenities = filterByAmenities;
  }

  public TransportOfferRequestSchema filterByPassengersMin(Integer filterByPassengersMin) {
    this.filterByPassengersMin = filterByPassengersMin;
    return this;
  }

   /**
   * Minimum passengers filter.
   * @return filterByPassengersMin
  **/
  @Schema(description = "Minimum passengers filter.")
  public Integer getFilterByPassengersMin() {
    return filterByPassengersMin;
  }

  public void setFilterByPassengersMin(Integer filterByPassengersMin) {
    this.filterByPassengersMin = filterByPassengersMin;
  }

  public TransportOfferRequestSchema filterByPassengersMax(Integer filterByPassengersMax) {
    this.filterByPassengersMax = filterByPassengersMax;
    return this;
  }

   /**
   * Maximum passengers filter.
   * @return filterByPassengersMax
  **/
  @Schema(description = "Maximum passengers filter.")
  public Integer getFilterByPassengersMax() {
    return filterByPassengersMax;
  }

  public void setFilterByPassengersMax(Integer filterByPassengersMax) {
    this.filterByPassengersMax = filterByPassengersMax;
  }

  public TransportOfferRequestSchema filterByBagsMin(Integer filterByBagsMin) {
    this.filterByBagsMin = filterByBagsMin;
    return this;
  }

   /**
   * Minimum bags filter.
   * @return filterByBagsMin
  **/
  @Schema(description = "Minimum bags filter.")
  public Integer getFilterByBagsMin() {
    return filterByBagsMin;
  }

  public void setFilterByBagsMin(Integer filterByBagsMin) {
    this.filterByBagsMin = filterByBagsMin;
  }

  public TransportOfferRequestSchema filterByBagsMax(Integer filterByBagsMax) {
    this.filterByBagsMax = filterByBagsMax;
    return this;
  }

   /**
   * Maximum bags filter.
   * @return filterByBagsMax
  **/
  @Schema(description = "Maximum bags filter.")
  public Integer getFilterByBagsMax() {
    return filterByBagsMax;
  }

  public void setFilterByBagsMax(Integer filterByBagsMax) {
    this.filterByBagsMax = filterByBagsMax;
  }

  public TransportOfferRequestSchema filterByType(List<String> filterByType) {
    this.filterByType = filterByType;
    return this;
  }

  public TransportOfferRequestSchema addFilterByTypeItem(String filterByTypeItem) {
    if (this.filterByType == null) {
      this.filterByType = new ArrayList<String>();
    }
    this.filterByType.add(filterByTypeItem);
    return this;
  }

   /**
   * Type filter.
   * @return filterByType
  **/
  @Schema(description = "Type filter.")
  public List<String> getFilterByType() {
    return filterByType;
  }

  public void setFilterByType(List<String> filterByType) {
    this.filterByType = filterByType;
  }

  public TransportOfferRequestSchema filterByCompany(List<String> filterByCompany) {
    this.filterByCompany = filterByCompany;
    return this;
  }

  public TransportOfferRequestSchema addFilterByCompanyItem(String filterByCompanyItem) {
    if (this.filterByCompany == null) {
      this.filterByCompany = new ArrayList<String>();
    }
    this.filterByCompany.add(filterByCompanyItem);
    return this;
  }

   /**
   * Company filter.
   * @return filterByCompany
  **/
  @Schema(description = "Company filter.")
  public List<String> getFilterByCompany() {
    return filterByCompany;
  }

  public void setFilterByCompany(List<String> filterByCompany) {
    this.filterByCompany = filterByCompany;
  }

  public TransportOfferRequestSchema filterByClass(List<String> filterByClass) {
    this.filterByClass = filterByClass;
    return this;
  }

  public TransportOfferRequestSchema addFilterByClassItem(String filterByClassItem) {
    if (this.filterByClass == null) {
      this.filterByClass = new ArrayList<String>();
    }
    this.filterByClass.add(filterByClassItem);
    return this;
  }

   /**
   * Class filter.
   * @return filterByClass
  **/
  @Schema(description = "Class filter.")
  public List<String> getFilterByClass() {
    return filterByClass;
  }

  public void setFilterByClass(List<String> filterByClass) {
    this.filterByClass = filterByClass;
  }

  public TransportOfferRequestSchema sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Sorting parameter.
   * @return sortBy
  **/
  @Schema(description = "Sorting parameter.")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public TransportOfferRequestSchema sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Sort order (asc/desc).
   * @return sortOrder
  **/
  @Schema(description = "Sort order (asc/desc).")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public TransportOfferRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Page number for pagination.
   * @return page
  **/
  @Schema(description = "Page number for pagination.")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public TransportOfferRequestSchema limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Limit of results per page.
   * @return limit
  **/
  @Schema(description = "Limit of results per page.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public TransportOfferRequestSchema language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Language for the results.
   * @return language
  **/
  @Schema(description = "Language for the results.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public TransportOfferRequestSchema currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency for pricing.
   * @return currency
  **/
  @Schema(description = "Currency for pricing.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public TransportOfferRequestSchema metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * Unit of measurement for distances.
   * @return metric
  **/
  @Schema(description = "Unit of measurement for distances.")
  public String getMetric() {
    return metric;
  }

  public void setMetric(String metric) {
    this.metric = metric;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransportOfferRequestSchema transportOfferRequestSchema = (TransportOfferRequestSchema) o;
    return Objects.equals(this.pickupLocationLatitude, transportOfferRequestSchema.pickupLocationLatitude) &&
        Objects.equals(this.pickupLocationLongitude, transportOfferRequestSchema.pickupLocationLongitude) &&
        Objects.equals(this.pickupDate, transportOfferRequestSchema.pickupDate) &&
        Objects.equals(this.pickupTime, transportOfferRequestSchema.pickupTime) &&
        Objects.equals(this.adults, transportOfferRequestSchema.adults) &&
        Objects.equals(this.children, transportOfferRequestSchema.children) &&
        Objects.equals(this.returnLocationLatitude, transportOfferRequestSchema.returnLocationLatitude) &&
        Objects.equals(this.returnLocationLongitude, transportOfferRequestSchema.returnLocationLongitude) &&
        Objects.equals(this.returnDate, transportOfferRequestSchema.returnDate) &&
        Objects.equals(this.returnTime, transportOfferRequestSchema.returnTime) &&
        Objects.equals(this.filterByKeyword, transportOfferRequestSchema.filterByKeyword) &&
        Objects.equals(this.filterByPriceMin, transportOfferRequestSchema.filterByPriceMin) &&
        Objects.equals(this.filterByPriceMax, transportOfferRequestSchema.filterByPriceMax) &&
        Objects.equals(this.filterByDistanceMin, transportOfferRequestSchema.filterByDistanceMin) &&
        Objects.equals(this.filterByDistanceMax, transportOfferRequestSchema.filterByDistanceMax) &&
        Objects.equals(this.filterByRatingMin, transportOfferRequestSchema.filterByRatingMin) &&
        Objects.equals(this.filterByRatingMax, transportOfferRequestSchema.filterByRatingMax) &&
        Objects.equals(this.filterByStars, transportOfferRequestSchema.filterByStars) &&
        Objects.equals(this.filterByFacilities, transportOfferRequestSchema.filterByFacilities) &&
        Objects.equals(this.filterByAmenities, transportOfferRequestSchema.filterByAmenities) &&
        Objects.equals(this.filterByPassengersMin, transportOfferRequestSchema.filterByPassengersMin) &&
        Objects.equals(this.filterByPassengersMax, transportOfferRequestSchema.filterByPassengersMax) &&
        Objects.equals(this.filterByBagsMin, transportOfferRequestSchema.filterByBagsMin) &&
        Objects.equals(this.filterByBagsMax, transportOfferRequestSchema.filterByBagsMax) &&
        Objects.equals(this.filterByType, transportOfferRequestSchema.filterByType) &&
        Objects.equals(this.filterByCompany, transportOfferRequestSchema.filterByCompany) &&
        Objects.equals(this.filterByClass, transportOfferRequestSchema.filterByClass) &&
        Objects.equals(this.sortBy, transportOfferRequestSchema.sortBy) &&
        Objects.equals(this.sortOrder, transportOfferRequestSchema.sortOrder) &&
        Objects.equals(this.page, transportOfferRequestSchema.page) &&
        Objects.equals(this.limit, transportOfferRequestSchema.limit) &&
        Objects.equals(this.language, transportOfferRequestSchema.language) &&
        Objects.equals(this.currency, transportOfferRequestSchema.currency) &&
        Objects.equals(this.metric, transportOfferRequestSchema.metric);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pickupLocationLatitude, pickupLocationLongitude, pickupDate, pickupTime, adults, children, returnLocationLatitude, returnLocationLongitude, returnDate, returnTime, filterByKeyword, filterByPriceMin, filterByPriceMax, filterByDistanceMin, filterByDistanceMax, filterByRatingMin, filterByRatingMax, filterByStars, filterByFacilities, filterByAmenities, filterByPassengersMin, filterByPassengersMax, filterByBagsMin, filterByBagsMax, filterByType, filterByCompany, filterByClass, sortBy, sortOrder, page, limit, language, currency, metric);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransportOfferRequestSchema {\n");
    
    sb.append("    pickupLocationLatitude: ").append(toIndentedString(pickupLocationLatitude)).append("\n");
    sb.append("    pickupLocationLongitude: ").append(toIndentedString(pickupLocationLongitude)).append("\n");
    sb.append("    pickupDate: ").append(toIndentedString(pickupDate)).append("\n");
    sb.append("    pickupTime: ").append(toIndentedString(pickupTime)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    returnLocationLatitude: ").append(toIndentedString(returnLocationLatitude)).append("\n");
    sb.append("    returnLocationLongitude: ").append(toIndentedString(returnLocationLongitude)).append("\n");
    sb.append("    returnDate: ").append(toIndentedString(returnDate)).append("\n");
    sb.append("    returnTime: ").append(toIndentedString(returnTime)).append("\n");
    sb.append("    filterByKeyword: ").append(toIndentedString(filterByKeyword)).append("\n");
    sb.append("    filterByPriceMin: ").append(toIndentedString(filterByPriceMin)).append("\n");
    sb.append("    filterByPriceMax: ").append(toIndentedString(filterByPriceMax)).append("\n");
    sb.append("    filterByDistanceMin: ").append(toIndentedString(filterByDistanceMin)).append("\n");
    sb.append("    filterByDistanceMax: ").append(toIndentedString(filterByDistanceMax)).append("\n");
    sb.append("    filterByRatingMin: ").append(toIndentedString(filterByRatingMin)).append("\n");
    sb.append("    filterByRatingMax: ").append(toIndentedString(filterByRatingMax)).append("\n");
    sb.append("    filterByStars: ").append(toIndentedString(filterByStars)).append("\n");
    sb.append("    filterByFacilities: ").append(toIndentedString(filterByFacilities)).append("\n");
    sb.append("    filterByAmenities: ").append(toIndentedString(filterByAmenities)).append("\n");
    sb.append("    filterByPassengersMin: ").append(toIndentedString(filterByPassengersMin)).append("\n");
    sb.append("    filterByPassengersMax: ").append(toIndentedString(filterByPassengersMax)).append("\n");
    sb.append("    filterByBagsMin: ").append(toIndentedString(filterByBagsMin)).append("\n");
    sb.append("    filterByBagsMax: ").append(toIndentedString(filterByBagsMax)).append("\n");
    sb.append("    filterByType: ").append(toIndentedString(filterByType)).append("\n");
    sb.append("    filterByCompany: ").append(toIndentedString(filterByCompany)).append("\n");
    sb.append("    filterByClass: ").append(toIndentedString(filterByClass)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
