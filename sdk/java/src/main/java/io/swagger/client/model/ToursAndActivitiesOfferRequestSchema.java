/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * ToursAndActivitiesOfferRequestSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class ToursAndActivitiesOfferRequestSchema {
  @SerializedName("location_latitude")
  private Float locationLatitude = null;

  @SerializedName("location_longitude")
  private Float locationLongitude = null;

  @SerializedName("location_radius")
  private Float locationRadius = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("adults")
  private Integer adults = null;

  @SerializedName("children")
  private Integer children = null;

  @SerializedName("filter_by_keyword")
  private String filterByKeyword = null;

  @SerializedName("filter_by_price_min")
  private BigDecimal filterByPriceMin = null;

  @SerializedName("filter_by_price_max")
  private BigDecimal filterByPriceMax = null;

  @SerializedName("filter_by_distance_min")
  private Integer filterByDistanceMin = null;

  @SerializedName("filter_by_distance_max")
  private Integer filterByDistanceMax = null;

  @SerializedName("filter_by_rating_min")
  private Integer filterByRatingMin = null;

  @SerializedName("filter_by_rating_max")
  private Integer filterByRatingMax = null;

  @SerializedName("filter_by_subcategories")
  private List<String> filterBySubcategories = null;

  @SerializedName("sort_by")
  private String sortBy = null;

  @SerializedName("sort_order")
  private String sortOrder = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("metric")
  private String metric = null;

  public ToursAndActivitiesOfferRequestSchema locationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
    return this;
  }

   /**
   * Latitude for the location.
   * @return locationLatitude
  **/
  @Schema(description = "Latitude for the location.")
  public Float getLocationLatitude() {
    return locationLatitude;
  }

  public void setLocationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
  }

  public ToursAndActivitiesOfferRequestSchema locationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
    return this;
  }

   /**
   * Longitude for the location.
   * @return locationLongitude
  **/
  @Schema(description = "Longitude for the location.")
  public Float getLocationLongitude() {
    return locationLongitude;
  }

  public void setLocationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
  }

  public ToursAndActivitiesOfferRequestSchema locationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
    return this;
  }

   /**
   * Radius to search for tours and activities from the specified location.
   * @return locationRadius
  **/
  @Schema(description = "Radius to search for tours and activities from the specified location.")
  public Float getLocationRadius() {
    return locationRadius;
  }

  public void setLocationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
  }

  public ToursAndActivitiesOfferRequestSchema startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Starting date for tours and activities.
   * @return startDate
  **/
  @Schema(description = "Starting date for tours and activities.")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public ToursAndActivitiesOfferRequestSchema endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Ending date for tours and activities.
   * @return endDate
  **/
  @Schema(description = "Ending date for tours and activities.")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public ToursAndActivitiesOfferRequestSchema adults(Integer adults) {
    this.adults = adults;
    return this;
  }

   /**
   * Number of adults participating.
   * @return adults
  **/
  @Schema(description = "Number of adults participating.")
  public Integer getAdults() {
    return adults;
  }

  public void setAdults(Integer adults) {
    this.adults = adults;
  }

  public ToursAndActivitiesOfferRequestSchema children(Integer children) {
    this.children = children;
    return this;
  }

   /**
   * Number of children participating.
   * @return children
  **/
  @Schema(description = "Number of children participating.")
  public Integer getChildren() {
    return children;
  }

  public void setChildren(Integer children) {
    this.children = children;
  }

  public ToursAndActivitiesOfferRequestSchema filterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
    return this;
  }

   /**
   * Keyword to filter tours and activities.
   * @return filterByKeyword
  **/
  @Schema(description = "Keyword to filter tours and activities.")
  public String getFilterByKeyword() {
    return filterByKeyword;
  }

  public void setFilterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
  }

  public ToursAndActivitiesOfferRequestSchema filterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
    return this;
  }

   /**
   * Minimum price filter.
   * @return filterByPriceMin
  **/
  @Schema(description = "Minimum price filter.")
  public BigDecimal getFilterByPriceMin() {
    return filterByPriceMin;
  }

  public void setFilterByPriceMin(BigDecimal filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
  }

  public ToursAndActivitiesOfferRequestSchema filterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
    return this;
  }

   /**
   * Maximum price filter.
   * @return filterByPriceMax
  **/
  @Schema(description = "Maximum price filter.")
  public BigDecimal getFilterByPriceMax() {
    return filterByPriceMax;
  }

  public void setFilterByPriceMax(BigDecimal filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
  }

  public ToursAndActivitiesOfferRequestSchema filterByDistanceMin(Integer filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
    return this;
  }

   /**
   * Minimum distance filter.
   * @return filterByDistanceMin
  **/
  @Schema(description = "Minimum distance filter.")
  public Integer getFilterByDistanceMin() {
    return filterByDistanceMin;
  }

  public void setFilterByDistanceMin(Integer filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
  }

  public ToursAndActivitiesOfferRequestSchema filterByDistanceMax(Integer filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
    return this;
  }

   /**
   * Maximum distance filter.
   * @return filterByDistanceMax
  **/
  @Schema(description = "Maximum distance filter.")
  public Integer getFilterByDistanceMax() {
    return filterByDistanceMax;
  }

  public void setFilterByDistanceMax(Integer filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
  }

  public ToursAndActivitiesOfferRequestSchema filterByRatingMin(Integer filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
    return this;
  }

   /**
   * Minimum rating filter.
   * @return filterByRatingMin
  **/
  @Schema(description = "Minimum rating filter.")
  public Integer getFilterByRatingMin() {
    return filterByRatingMin;
  }

  public void setFilterByRatingMin(Integer filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
  }

  public ToursAndActivitiesOfferRequestSchema filterByRatingMax(Integer filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
    return this;
  }

   /**
   * Maximum rating filter.
   * @return filterByRatingMax
  **/
  @Schema(description = "Maximum rating filter.")
  public Integer getFilterByRatingMax() {
    return filterByRatingMax;
  }

  public void setFilterByRatingMax(Integer filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
  }

  public ToursAndActivitiesOfferRequestSchema filterBySubcategories(List<String> filterBySubcategories) {
    this.filterBySubcategories = filterBySubcategories;
    return this;
  }

  public ToursAndActivitiesOfferRequestSchema addFilterBySubcategoriesItem(String filterBySubcategoriesItem) {
    if (this.filterBySubcategories == null) {
      this.filterBySubcategories = new ArrayList<String>();
    }
    this.filterBySubcategories.add(filterBySubcategoriesItem);
    return this;
  }

   /**
   * Subcategories to filter tours and activities.
   * @return filterBySubcategories
  **/
  @Schema(description = "Subcategories to filter tours and activities.")
  public List<String> getFilterBySubcategories() {
    return filterBySubcategories;
  }

  public void setFilterBySubcategories(List<String> filterBySubcategories) {
    this.filterBySubcategories = filterBySubcategories;
  }

  public ToursAndActivitiesOfferRequestSchema sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Criteria to sort the search results.
   * @return sortBy
  **/
  @Schema(description = "Criteria to sort the search results.")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public ToursAndActivitiesOfferRequestSchema sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Order to sort the results (ascending or descending).
   * @return sortOrder
  **/
  @Schema(description = "Order to sort the results (ascending or descending).")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ToursAndActivitiesOfferRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Page number for pagination.
   * @return page
  **/
  @Schema(description = "Page number for pagination.")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public ToursAndActivitiesOfferRequestSchema limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of items per page.
   * @return limit
  **/
  @Schema(description = "Number of items per page.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ToursAndActivitiesOfferRequestSchema language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Language of the tour offers.
   * @return language
  **/
  @Schema(description = "Language of the tour offers.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public ToursAndActivitiesOfferRequestSchema currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency in which prices are displayed.
   * @return currency
  **/
  @Schema(description = "Currency in which prices are displayed.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public ToursAndActivitiesOfferRequestSchema metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * Unit for distance measurement (mi/km) used in filters.
   * @return metric
  **/
  @Schema(description = "Unit for distance measurement (mi/km) used in filters.")
  public String getMetric() {
    return metric;
  }

  public void setMetric(String metric) {
    this.metric = metric;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToursAndActivitiesOfferRequestSchema toursAndActivitiesOfferRequestSchema = (ToursAndActivitiesOfferRequestSchema) o;
    return Objects.equals(this.locationLatitude, toursAndActivitiesOfferRequestSchema.locationLatitude) &&
        Objects.equals(this.locationLongitude, toursAndActivitiesOfferRequestSchema.locationLongitude) &&
        Objects.equals(this.locationRadius, toursAndActivitiesOfferRequestSchema.locationRadius) &&
        Objects.equals(this.startDate, toursAndActivitiesOfferRequestSchema.startDate) &&
        Objects.equals(this.endDate, toursAndActivitiesOfferRequestSchema.endDate) &&
        Objects.equals(this.adults, toursAndActivitiesOfferRequestSchema.adults) &&
        Objects.equals(this.children, toursAndActivitiesOfferRequestSchema.children) &&
        Objects.equals(this.filterByKeyword, toursAndActivitiesOfferRequestSchema.filterByKeyword) &&
        Objects.equals(this.filterByPriceMin, toursAndActivitiesOfferRequestSchema.filterByPriceMin) &&
        Objects.equals(this.filterByPriceMax, toursAndActivitiesOfferRequestSchema.filterByPriceMax) &&
        Objects.equals(this.filterByDistanceMin, toursAndActivitiesOfferRequestSchema.filterByDistanceMin) &&
        Objects.equals(this.filterByDistanceMax, toursAndActivitiesOfferRequestSchema.filterByDistanceMax) &&
        Objects.equals(this.filterByRatingMin, toursAndActivitiesOfferRequestSchema.filterByRatingMin) &&
        Objects.equals(this.filterByRatingMax, toursAndActivitiesOfferRequestSchema.filterByRatingMax) &&
        Objects.equals(this.filterBySubcategories, toursAndActivitiesOfferRequestSchema.filterBySubcategories) &&
        Objects.equals(this.sortBy, toursAndActivitiesOfferRequestSchema.sortBy) &&
        Objects.equals(this.sortOrder, toursAndActivitiesOfferRequestSchema.sortOrder) &&
        Objects.equals(this.page, toursAndActivitiesOfferRequestSchema.page) &&
        Objects.equals(this.limit, toursAndActivitiesOfferRequestSchema.limit) &&
        Objects.equals(this.language, toursAndActivitiesOfferRequestSchema.language) &&
        Objects.equals(this.currency, toursAndActivitiesOfferRequestSchema.currency) &&
        Objects.equals(this.metric, toursAndActivitiesOfferRequestSchema.metric);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationLatitude, locationLongitude, locationRadius, startDate, endDate, adults, children, filterByKeyword, filterByPriceMin, filterByPriceMax, filterByDistanceMin, filterByDistanceMax, filterByRatingMin, filterByRatingMax, filterBySubcategories, sortBy, sortOrder, page, limit, language, currency, metric);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToursAndActivitiesOfferRequestSchema {\n");
    
    sb.append("    locationLatitude: ").append(toIndentedString(locationLatitude)).append("\n");
    sb.append("    locationLongitude: ").append(toIndentedString(locationLongitude)).append("\n");
    sb.append("    locationRadius: ").append(toIndentedString(locationRadius)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    filterByKeyword: ").append(toIndentedString(filterByKeyword)).append("\n");
    sb.append("    filterByPriceMin: ").append(toIndentedString(filterByPriceMin)).append("\n");
    sb.append("    filterByPriceMax: ").append(toIndentedString(filterByPriceMax)).append("\n");
    sb.append("    filterByDistanceMin: ").append(toIndentedString(filterByDistanceMin)).append("\n");
    sb.append("    filterByDistanceMax: ").append(toIndentedString(filterByDistanceMax)).append("\n");
    sb.append("    filterByRatingMin: ").append(toIndentedString(filterByRatingMin)).append("\n");
    sb.append("    filterByRatingMax: ").append(toIndentedString(filterByRatingMax)).append("\n");
    sb.append("    filterBySubcategories: ").append(toIndentedString(filterBySubcategories)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
