/*
 * Federated Content API
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HotelOfferRequestSchemaRooms;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * HotelOfferRequestSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-24T14:14:21.689997473Z[GMT]")

public class HotelOfferRequestSchema {
  @SerializedName("location_latitude")
  private Float locationLatitude = null;

  @SerializedName("location_longitude")
  private Float locationLongitude = null;

  @SerializedName("location_radius")
  private Float locationRadius = null;

  @SerializedName("checkin_date")
  private LocalDate checkinDate = null;

  @SerializedName("checkout_date")
  private LocalDate checkoutDate = null;

  @SerializedName("rooms")
  private List<HotelOfferRequestSchemaRooms> rooms = null;

  @SerializedName("filter_by_keyword")
  private String filterByKeyword = null;

  @SerializedName("filter_by_price_min")
  private Double filterByPriceMin = null;

  @SerializedName("filter_by_price_max")
  private Double filterByPriceMax = null;

  @SerializedName("filter_by_distance_min")
  private Float filterByDistanceMin = null;

  @SerializedName("filter_by_distance_max")
  private Float filterByDistanceMax = null;

  @SerializedName("filter_by_rating_min")
  private Float filterByRatingMin = null;

  @SerializedName("filter_by_rating_max")
  private Float filterByRatingMax = null;

  @SerializedName("filter_by_stars")
  private List<Integer> filterByStars = null;

  @SerializedName("filter_by_facilities")
  private List<String> filterByFacilities = null;

  @SerializedName("filter_by_amenities")
  private List<String> filterByAmenities = null;

  @SerializedName("sort_by")
  private String sortBy = null;

  @SerializedName("sort_order")
  private String sortOrder = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("metric")
  private String metric = null;

  public HotelOfferRequestSchema locationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
    return this;
  }

   /**
   * Latitude of the hotel location.
   * @return locationLatitude
  **/
  @Schema(description = "Latitude of the hotel location.")
  public Float getLocationLatitude() {
    return locationLatitude;
  }

  public void setLocationLatitude(Float locationLatitude) {
    this.locationLatitude = locationLatitude;
  }

  public HotelOfferRequestSchema locationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
    return this;
  }

   /**
   * Longitude of the hotel location.
   * @return locationLongitude
  **/
  @Schema(description = "Longitude of the hotel location.")
  public Float getLocationLongitude() {
    return locationLongitude;
  }

  public void setLocationLongitude(Float locationLongitude) {
    this.locationLongitude = locationLongitude;
  }

  public HotelOfferRequestSchema locationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
    return this;
  }

   /**
   * Search radius from the specified location.
   * @return locationRadius
  **/
  @Schema(description = "Search radius from the specified location.")
  public Float getLocationRadius() {
    return locationRadius;
  }

  public void setLocationRadius(Float locationRadius) {
    this.locationRadius = locationRadius;
  }

  public HotelOfferRequestSchema checkinDate(LocalDate checkinDate) {
    this.checkinDate = checkinDate;
    return this;
  }

   /**
   * Check-in date for the hotel booking.
   * @return checkinDate
  **/
  @Schema(description = "Check-in date for the hotel booking.")
  public LocalDate getCheckinDate() {
    return checkinDate;
  }

  public void setCheckinDate(LocalDate checkinDate) {
    this.checkinDate = checkinDate;
  }

  public HotelOfferRequestSchema checkoutDate(LocalDate checkoutDate) {
    this.checkoutDate = checkoutDate;
    return this;
  }

   /**
   * Check-out date for the hotel booking.
   * @return checkoutDate
  **/
  @Schema(description = "Check-out date for the hotel booking.")
  public LocalDate getCheckoutDate() {
    return checkoutDate;
  }

  public void setCheckoutDate(LocalDate checkoutDate) {
    this.checkoutDate = checkoutDate;
  }

  public HotelOfferRequestSchema rooms(List<HotelOfferRequestSchemaRooms> rooms) {
    this.rooms = rooms;
    return this;
  }

  public HotelOfferRequestSchema addRoomsItem(HotelOfferRequestSchemaRooms roomsItem) {
    if (this.rooms == null) {
      this.rooms = new ArrayList<HotelOfferRequestSchemaRooms>();
    }
    this.rooms.add(roomsItem);
    return this;
  }

   /**
   * Details of rooms including number of adults and children per room.
   * @return rooms
  **/
  @Schema(description = "Details of rooms including number of adults and children per room.")
  public List<HotelOfferRequestSchemaRooms> getRooms() {
    return rooms;
  }

  public void setRooms(List<HotelOfferRequestSchemaRooms> rooms) {
    this.rooms = rooms;
  }

  public HotelOfferRequestSchema filterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
    return this;
  }

   /**
   * Keyword to filter hotel offers.
   * @return filterByKeyword
  **/
  @Schema(description = "Keyword to filter hotel offers.")
  public String getFilterByKeyword() {
    return filterByKeyword;
  }

  public void setFilterByKeyword(String filterByKeyword) {
    this.filterByKeyword = filterByKeyword;
  }

  public HotelOfferRequestSchema filterByPriceMin(Double filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
    return this;
  }

   /**
   * Minimum price filter for hotel offers.
   * @return filterByPriceMin
  **/
  @Schema(description = "Minimum price filter for hotel offers.")
  public Double getFilterByPriceMin() {
    return filterByPriceMin;
  }

  public void setFilterByPriceMin(Double filterByPriceMin) {
    this.filterByPriceMin = filterByPriceMin;
  }

  public HotelOfferRequestSchema filterByPriceMax(Double filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
    return this;
  }

   /**
   * Maximum price filter for hotel offers.
   * @return filterByPriceMax
  **/
  @Schema(description = "Maximum price filter for hotel offers.")
  public Double getFilterByPriceMax() {
    return filterByPriceMax;
  }

  public void setFilterByPriceMax(Double filterByPriceMax) {
    this.filterByPriceMax = filterByPriceMax;
  }

  public HotelOfferRequestSchema filterByDistanceMin(Float filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
    return this;
  }

   /**
   * Minimum distance filter for hotel location.
   * @return filterByDistanceMin
  **/
  @Schema(description = "Minimum distance filter for hotel location.")
  public Float getFilterByDistanceMin() {
    return filterByDistanceMin;
  }

  public void setFilterByDistanceMin(Float filterByDistanceMin) {
    this.filterByDistanceMin = filterByDistanceMin;
  }

  public HotelOfferRequestSchema filterByDistanceMax(Float filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
    return this;
  }

   /**
   * Maximum distance filter for hotel location.
   * @return filterByDistanceMax
  **/
  @Schema(description = "Maximum distance filter for hotel location.")
  public Float getFilterByDistanceMax() {
    return filterByDistanceMax;
  }

  public void setFilterByDistanceMax(Float filterByDistanceMax) {
    this.filterByDistanceMax = filterByDistanceMax;
  }

  public HotelOfferRequestSchema filterByRatingMin(Float filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
    return this;
  }

   /**
   * Minimum rating filter for hotels.
   * @return filterByRatingMin
  **/
  @Schema(description = "Minimum rating filter for hotels.")
  public Float getFilterByRatingMin() {
    return filterByRatingMin;
  }

  public void setFilterByRatingMin(Float filterByRatingMin) {
    this.filterByRatingMin = filterByRatingMin;
  }

  public HotelOfferRequestSchema filterByRatingMax(Float filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
    return this;
  }

   /**
   * Maximum rating filter for hotels.
   * @return filterByRatingMax
  **/
  @Schema(description = "Maximum rating filter for hotels.")
  public Float getFilterByRatingMax() {
    return filterByRatingMax;
  }

  public void setFilterByRatingMax(Float filterByRatingMax) {
    this.filterByRatingMax = filterByRatingMax;
  }

  public HotelOfferRequestSchema filterByStars(List<Integer> filterByStars) {
    this.filterByStars = filterByStars;
    return this;
  }

  public HotelOfferRequestSchema addFilterByStarsItem(Integer filterByStarsItem) {
    if (this.filterByStars == null) {
      this.filterByStars = new ArrayList<Integer>();
    }
    this.filterByStars.add(filterByStarsItem);
    return this;
  }

   /**
   * Filter hotels by star ratings.
   * @return filterByStars
  **/
  @Schema(description = "Filter hotels by star ratings.")
  public List<Integer> getFilterByStars() {
    return filterByStars;
  }

  public void setFilterByStars(List<Integer> filterByStars) {
    this.filterByStars = filterByStars;
  }

  public HotelOfferRequestSchema filterByFacilities(List<String> filterByFacilities) {
    this.filterByFacilities = filterByFacilities;
    return this;
  }

  public HotelOfferRequestSchema addFilterByFacilitiesItem(String filterByFacilitiesItem) {
    if (this.filterByFacilities == null) {
      this.filterByFacilities = new ArrayList<String>();
    }
    this.filterByFacilities.add(filterByFacilitiesItem);
    return this;
  }

   /**
   * Filter hotels by available facilities.
   * @return filterByFacilities
  **/
  @Schema(description = "Filter hotels by available facilities.")
  public List<String> getFilterByFacilities() {
    return filterByFacilities;
  }

  public void setFilterByFacilities(List<String> filterByFacilities) {
    this.filterByFacilities = filterByFacilities;
  }

  public HotelOfferRequestSchema filterByAmenities(List<String> filterByAmenities) {
    this.filterByAmenities = filterByAmenities;
    return this;
  }

  public HotelOfferRequestSchema addFilterByAmenitiesItem(String filterByAmenitiesItem) {
    if (this.filterByAmenities == null) {
      this.filterByAmenities = new ArrayList<String>();
    }
    this.filterByAmenities.add(filterByAmenitiesItem);
    return this;
  }

   /**
   * Filter hotels by available amenities.
   * @return filterByAmenities
  **/
  @Schema(description = "Filter hotels by available amenities.")
  public List<String> getFilterByAmenities() {
    return filterByAmenities;
  }

  public void setFilterByAmenities(List<String> filterByAmenities) {
    this.filterByAmenities = filterByAmenities;
  }

  public HotelOfferRequestSchema sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Field to sort the results by.
   * @return sortBy
  **/
  @Schema(description = "Field to sort the results by.")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public HotelOfferRequestSchema sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Order to sort the results, either asc or desc.
   * @return sortOrder
  **/
  @Schema(description = "Order to sort the results, either asc or desc.")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public HotelOfferRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Page number for pagination.
   * @return page
  **/
  @Schema(description = "Page number for pagination.")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public HotelOfferRequestSchema limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of items per page for pagination.
   * @return limit
  **/
  @Schema(description = "Number of items per page for pagination.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public HotelOfferRequestSchema language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Preferred language of the hotel information.
   * @return language
  **/
  @Schema(description = "Preferred language of the hotel information.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public HotelOfferRequestSchema currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency in which prices should be displayed.
   * @return currency
  **/
  @Schema(description = "Currency in which prices should be displayed.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public HotelOfferRequestSchema metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * Unit of measure for distance, either miles (mi) or kilometers (km).
   * @return metric
  **/
  @Schema(description = "Unit of measure for distance, either miles (mi) or kilometers (km).")
  public String getMetric() {
    return metric;
  }

  public void setMetric(String metric) {
    this.metric = metric;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotelOfferRequestSchema hotelOfferRequestSchema = (HotelOfferRequestSchema) o;
    return Objects.equals(this.locationLatitude, hotelOfferRequestSchema.locationLatitude) &&
        Objects.equals(this.locationLongitude, hotelOfferRequestSchema.locationLongitude) &&
        Objects.equals(this.locationRadius, hotelOfferRequestSchema.locationRadius) &&
        Objects.equals(this.checkinDate, hotelOfferRequestSchema.checkinDate) &&
        Objects.equals(this.checkoutDate, hotelOfferRequestSchema.checkoutDate) &&
        Objects.equals(this.rooms, hotelOfferRequestSchema.rooms) &&
        Objects.equals(this.filterByKeyword, hotelOfferRequestSchema.filterByKeyword) &&
        Objects.equals(this.filterByPriceMin, hotelOfferRequestSchema.filterByPriceMin) &&
        Objects.equals(this.filterByPriceMax, hotelOfferRequestSchema.filterByPriceMax) &&
        Objects.equals(this.filterByDistanceMin, hotelOfferRequestSchema.filterByDistanceMin) &&
        Objects.equals(this.filterByDistanceMax, hotelOfferRequestSchema.filterByDistanceMax) &&
        Objects.equals(this.filterByRatingMin, hotelOfferRequestSchema.filterByRatingMin) &&
        Objects.equals(this.filterByRatingMax, hotelOfferRequestSchema.filterByRatingMax) &&
        Objects.equals(this.filterByStars, hotelOfferRequestSchema.filterByStars) &&
        Objects.equals(this.filterByFacilities, hotelOfferRequestSchema.filterByFacilities) &&
        Objects.equals(this.filterByAmenities, hotelOfferRequestSchema.filterByAmenities) &&
        Objects.equals(this.sortBy, hotelOfferRequestSchema.sortBy) &&
        Objects.equals(this.sortOrder, hotelOfferRequestSchema.sortOrder) &&
        Objects.equals(this.page, hotelOfferRequestSchema.page) &&
        Objects.equals(this.limit, hotelOfferRequestSchema.limit) &&
        Objects.equals(this.language, hotelOfferRequestSchema.language) &&
        Objects.equals(this.currency, hotelOfferRequestSchema.currency) &&
        Objects.equals(this.metric, hotelOfferRequestSchema.metric);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationLatitude, locationLongitude, locationRadius, checkinDate, checkoutDate, rooms, filterByKeyword, filterByPriceMin, filterByPriceMax, filterByDistanceMin, filterByDistanceMax, filterByRatingMin, filterByRatingMax, filterByStars, filterByFacilities, filterByAmenities, sortBy, sortOrder, page, limit, language, currency, metric);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotelOfferRequestSchema {\n");
    
    sb.append("    locationLatitude: ").append(toIndentedString(locationLatitude)).append("\n");
    sb.append("    locationLongitude: ").append(toIndentedString(locationLongitude)).append("\n");
    sb.append("    locationRadius: ").append(toIndentedString(locationRadius)).append("\n");
    sb.append("    checkinDate: ").append(toIndentedString(checkinDate)).append("\n");
    sb.append("    checkoutDate: ").append(toIndentedString(checkoutDate)).append("\n");
    sb.append("    rooms: ").append(toIndentedString(rooms)).append("\n");
    sb.append("    filterByKeyword: ").append(toIndentedString(filterByKeyword)).append("\n");
    sb.append("    filterByPriceMin: ").append(toIndentedString(filterByPriceMin)).append("\n");
    sb.append("    filterByPriceMax: ").append(toIndentedString(filterByPriceMax)).append("\n");
    sb.append("    filterByDistanceMin: ").append(toIndentedString(filterByDistanceMin)).append("\n");
    sb.append("    filterByDistanceMax: ").append(toIndentedString(filterByDistanceMax)).append("\n");
    sb.append("    filterByRatingMin: ").append(toIndentedString(filterByRatingMin)).append("\n");
    sb.append("    filterByRatingMax: ").append(toIndentedString(filterByRatingMax)).append("\n");
    sb.append("    filterByStars: ").append(toIndentedString(filterByStars)).append("\n");
    sb.append("    filterByFacilities: ").append(toIndentedString(filterByFacilities)).append("\n");
    sb.append("    filterByAmenities: ").append(toIndentedString(filterByAmenities)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
