# coding: utf-8

"""
    Federated Content API

    Welcome to the Federated Content API following Open API Specification (Version 3.0.0)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FlightPassengerOfferRequestSchema(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'age': 'int',
        'first_name': 'str',
        'last_name': 'str',
        'loyalty_airline': 'str',
        'loyalty_number': 'str'
    }

    attribute_map = {
        'type': 'type',
        'age': 'age',
        'first_name': 'first_name',
        'last_name': 'last_name',
        'loyalty_airline': 'loyalty_airline',
        'loyalty_number': 'loyalty_number'
    }

    def __init__(self, type=None, age=None, first_name=None, last_name=None, loyalty_airline=None, loyalty_number=None):  # noqa: E501
        """FlightPassengerOfferRequestSchema - a model defined in Swagger"""  # noqa: E501
        self._type = None
        self._age = None
        self._first_name = None
        self._last_name = None
        self._loyalty_airline = None
        self._loyalty_number = None
        self.discriminator = None
        if type is not None:
            self.type = type
        if age is not None:
            self.age = age
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if loyalty_airline is not None:
            self.loyalty_airline = loyalty_airline
        if loyalty_number is not None:
            self.loyalty_number = loyalty_number

    @property
    def type(self):
        """Gets the type of this FlightPassengerOfferRequestSchema.  # noqa: E501

        Type of passenger (adult, child, infant, infant with seat).  # noqa: E501

        :return: The type of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FlightPassengerOfferRequestSchema.

        Type of passenger (adult, child, infant, infant with seat).  # noqa: E501

        :param type: The type of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def age(self):
        """Gets the age of this FlightPassengerOfferRequestSchema.  # noqa: E501

        Age of the passenger.  # noqa: E501

        :return: The age of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this FlightPassengerOfferRequestSchema.

        Age of the passenger.  # noqa: E501

        :param age: The age of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._age = age

    @property
    def first_name(self):
        """Gets the first_name of this FlightPassengerOfferRequestSchema.  # noqa: E501

        First name of the passenger.  # noqa: E501

        :return: The first_name of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this FlightPassengerOfferRequestSchema.

        First name of the passenger.  # noqa: E501

        :param first_name: The first_name of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this FlightPassengerOfferRequestSchema.  # noqa: E501

        Last name of the passenger.  # noqa: E501

        :return: The last_name of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this FlightPassengerOfferRequestSchema.

        Last name of the passenger.  # noqa: E501

        :param last_name: The last_name of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def loyalty_airline(self):
        """Gets the loyalty_airline of this FlightPassengerOfferRequestSchema.  # noqa: E501

        Airline of the loyalty program.  # noqa: E501

        :return: The loyalty_airline of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._loyalty_airline

    @loyalty_airline.setter
    def loyalty_airline(self, loyalty_airline):
        """Sets the loyalty_airline of this FlightPassengerOfferRequestSchema.

        Airline of the loyalty program.  # noqa: E501

        :param loyalty_airline: The loyalty_airline of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._loyalty_airline = loyalty_airline

    @property
    def loyalty_number(self):
        """Gets the loyalty_number of this FlightPassengerOfferRequestSchema.  # noqa: E501

        Loyalty program membership number.  # noqa: E501

        :return: The loyalty_number of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._loyalty_number

    @loyalty_number.setter
    def loyalty_number(self, loyalty_number):
        """Sets the loyalty_number of this FlightPassengerOfferRequestSchema.

        Loyalty program membership number.  # noqa: E501

        :param loyalty_number: The loyalty_number of this FlightPassengerOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._loyalty_number = loyalty_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FlightPassengerOfferRequestSchema, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FlightPassengerOfferRequestSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
