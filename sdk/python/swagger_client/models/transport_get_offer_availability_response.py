# coding: utf-8

"""
    Federated Content API

    Welcome to the Federated Content API following Open API Specification (Version 3.0.0)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TransportGetOfferAvailabilityResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'offer_id': 'str',
        'supplier_offer_id': 'str',
        'offer_index': 'int',
        'offer_tax': 'float',
        'offer_price': 'float',
        'offer_currency': 'str',
        'offer_cancelation_policies': 'str',
        'pickup_date': 'date',
        'pickup_time': 'str',
        'adults': 'int',
        'children': 'int',
        'return_date': 'date',
        'return_time': 'str',
        'transport_name': 'str',
        'transport_description': 'str',
        'transport_address': 'str',
        'transport_latitude': 'float',
        'transport_longitude': 'float',
        'transport_distance': 'float',
        'transport_distance_metric': 'str',
        'transport_images': 'list[str]',
        'transport_rating': 'float',
        'transport_reviews': 'list[object]',
        'transport_type': 'str',
        'transport_class': 'str',
        'transport_company': 'str',
        'transport_company_logo': 'str',
        'transport_passengers_number': 'int',
        'transport_bags_number': 'int',
        'transport_amenities': 'list[str]',
        'booking_questions': 'list[object]'
    }

    attribute_map = {
        'offer_id': 'offer_id',
        'supplier_offer_id': 'supplier_offer_id',
        'offer_index': 'offer_index',
        'offer_tax': 'offer_tax',
        'offer_price': 'offer_price',
        'offer_currency': 'offer_currency',
        'offer_cancelation_policies': 'offer_cancelation_policies',
        'pickup_date': 'pickup_date',
        'pickup_time': 'pickup_time',
        'adults': 'adults',
        'children': 'children',
        'return_date': 'return_date',
        'return_time': 'return_time',
        'transport_name': 'transport_name',
        'transport_description': 'transport_description',
        'transport_address': 'transport_address',
        'transport_latitude': 'transport_latitude',
        'transport_longitude': 'transport_longitude',
        'transport_distance': 'transport_distance',
        'transport_distance_metric': 'transport_distance_metric',
        'transport_images': 'transport_images',
        'transport_rating': 'transport_rating',
        'transport_reviews': 'transport_reviews',
        'transport_type': 'transport_type',
        'transport_class': 'transport_class',
        'transport_company': 'transport_company',
        'transport_company_logo': 'transport_company_logo',
        'transport_passengers_number': 'transport_passengers_number',
        'transport_bags_number': 'transport_bags_number',
        'transport_amenities': 'transport_amenities',
        'booking_questions': 'booking_questions'
    }

    def __init__(self, offer_id=None, supplier_offer_id=None, offer_index=None, offer_tax=None, offer_price=None, offer_currency=None, offer_cancelation_policies=None, pickup_date=None, pickup_time=None, adults=None, children=None, return_date=None, return_time=None, transport_name=None, transport_description=None, transport_address=None, transport_latitude=None, transport_longitude=None, transport_distance=None, transport_distance_metric=None, transport_images=None, transport_rating=None, transport_reviews=None, transport_type=None, transport_class=None, transport_company=None, transport_company_logo=None, transport_passengers_number=None, transport_bags_number=None, transport_amenities=None, booking_questions=None):  # noqa: E501
        """TransportGetOfferAvailabilityResponse - a model defined in Swagger"""  # noqa: E501
        self._offer_id = None
        self._supplier_offer_id = None
        self._offer_index = None
        self._offer_tax = None
        self._offer_price = None
        self._offer_currency = None
        self._offer_cancelation_policies = None
        self._pickup_date = None
        self._pickup_time = None
        self._adults = None
        self._children = None
        self._return_date = None
        self._return_time = None
        self._transport_name = None
        self._transport_description = None
        self._transport_address = None
        self._transport_latitude = None
        self._transport_longitude = None
        self._transport_distance = None
        self._transport_distance_metric = None
        self._transport_images = None
        self._transport_rating = None
        self._transport_reviews = None
        self._transport_type = None
        self._transport_class = None
        self._transport_company = None
        self._transport_company_logo = None
        self._transport_passengers_number = None
        self._transport_bags_number = None
        self._transport_amenities = None
        self._booking_questions = None
        self.discriminator = None
        if offer_id is not None:
            self.offer_id = offer_id
        if supplier_offer_id is not None:
            self.supplier_offer_id = supplier_offer_id
        if offer_index is not None:
            self.offer_index = offer_index
        if offer_tax is not None:
            self.offer_tax = offer_tax
        if offer_price is not None:
            self.offer_price = offer_price
        if offer_currency is not None:
            self.offer_currency = offer_currency
        if offer_cancelation_policies is not None:
            self.offer_cancelation_policies = offer_cancelation_policies
        if pickup_date is not None:
            self.pickup_date = pickup_date
        if pickup_time is not None:
            self.pickup_time = pickup_time
        if adults is not None:
            self.adults = adults
        if children is not None:
            self.children = children
        if return_date is not None:
            self.return_date = return_date
        if return_time is not None:
            self.return_time = return_time
        if transport_name is not None:
            self.transport_name = transport_name
        if transport_description is not None:
            self.transport_description = transport_description
        if transport_address is not None:
            self.transport_address = transport_address
        if transport_latitude is not None:
            self.transport_latitude = transport_latitude
        if transport_longitude is not None:
            self.transport_longitude = transport_longitude
        if transport_distance is not None:
            self.transport_distance = transport_distance
        if transport_distance_metric is not None:
            self.transport_distance_metric = transport_distance_metric
        if transport_images is not None:
            self.transport_images = transport_images
        if transport_rating is not None:
            self.transport_rating = transport_rating
        if transport_reviews is not None:
            self.transport_reviews = transport_reviews
        if transport_type is not None:
            self.transport_type = transport_type
        if transport_class is not None:
            self.transport_class = transport_class
        if transport_company is not None:
            self.transport_company = transport_company
        if transport_company_logo is not None:
            self.transport_company_logo = transport_company_logo
        if transport_passengers_number is not None:
            self.transport_passengers_number = transport_passengers_number
        if transport_bags_number is not None:
            self.transport_bags_number = transport_bags_number
        if transport_amenities is not None:
            self.transport_amenities = transport_amenities
        if booking_questions is not None:
            self.booking_questions = booking_questions

    @property
    def offer_id(self):
        """Gets the offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Unique identifier of the offer.  # noqa: E501

        :return: The offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this TransportGetOfferAvailabilityResponse.

        Unique identifier of the offer.  # noqa: E501

        :param offer_id: The offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._offer_id = offer_id

    @property
    def supplier_offer_id(self):
        """Gets the supplier_offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Unique identifier for the supplier’s offer.  # noqa: E501

        :return: The supplier_offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._supplier_offer_id

    @supplier_offer_id.setter
    def supplier_offer_id(self, supplier_offer_id):
        """Sets the supplier_offer_id of this TransportGetOfferAvailabilityResponse.

        Unique identifier for the supplier’s offer.  # noqa: E501

        :param supplier_offer_id: The supplier_offer_id of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._supplier_offer_id = supplier_offer_id

    @property
    def offer_index(self):
        """Gets the offer_index of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Index number of the offer.  # noqa: E501

        :return: The offer_index of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._offer_index

    @offer_index.setter
    def offer_index(self, offer_index):
        """Sets the offer_index of this TransportGetOfferAvailabilityResponse.

        Index number of the offer.  # noqa: E501

        :param offer_index: The offer_index of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._offer_index = offer_index

    @property
    def offer_tax(self):
        """Gets the offer_tax of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Applicable taxes on the offer.  # noqa: E501

        :return: The offer_tax of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._offer_tax

    @offer_tax.setter
    def offer_tax(self, offer_tax):
        """Sets the offer_tax of this TransportGetOfferAvailabilityResponse.

        Applicable taxes on the offer.  # noqa: E501

        :param offer_tax: The offer_tax of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._offer_tax = offer_tax

    @property
    def offer_price(self):
        """Gets the offer_price of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Total price of the offer.  # noqa: E501

        :return: The offer_price of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._offer_price

    @offer_price.setter
    def offer_price(self, offer_price):
        """Sets the offer_price of this TransportGetOfferAvailabilityResponse.

        Total price of the offer.  # noqa: E501

        :param offer_price: The offer_price of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._offer_price = offer_price

    @property
    def offer_currency(self):
        """Gets the offer_currency of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Currency of the offer.  # noqa: E501

        :return: The offer_currency of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._offer_currency

    @offer_currency.setter
    def offer_currency(self, offer_currency):
        """Sets the offer_currency of this TransportGetOfferAvailabilityResponse.

        Currency of the offer.  # noqa: E501

        :param offer_currency: The offer_currency of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._offer_currency = offer_currency

    @property
    def offer_cancelation_policies(self):
        """Gets the offer_cancelation_policies of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Cancellation policies of the offer.  # noqa: E501

        :return: The offer_cancelation_policies of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._offer_cancelation_policies

    @offer_cancelation_policies.setter
    def offer_cancelation_policies(self, offer_cancelation_policies):
        """Sets the offer_cancelation_policies of this TransportGetOfferAvailabilityResponse.

        Cancellation policies of the offer.  # noqa: E501

        :param offer_cancelation_policies: The offer_cancelation_policies of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._offer_cancelation_policies = offer_cancelation_policies

    @property
    def pickup_date(self):
        """Gets the pickup_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Date when the transport is scheduled to be picked up.  # noqa: E501

        :return: The pickup_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: date
        """
        return self._pickup_date

    @pickup_date.setter
    def pickup_date(self, pickup_date):
        """Sets the pickup_date of this TransportGetOfferAvailabilityResponse.

        Date when the transport is scheduled to be picked up.  # noqa: E501

        :param pickup_date: The pickup_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: date
        """

        self._pickup_date = pickup_date

    @property
    def pickup_time(self):
        """Gets the pickup_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Time when the transport is scheduled to be picked up.  # noqa: E501

        :return: The pickup_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._pickup_time

    @pickup_time.setter
    def pickup_time(self, pickup_time):
        """Sets the pickup_time of this TransportGetOfferAvailabilityResponse.

        Time when the transport is scheduled to be picked up.  # noqa: E501

        :param pickup_time: The pickup_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._pickup_time = pickup_time

    @property
    def adults(self):
        """Gets the adults of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Number of adults included in the transport offer.  # noqa: E501

        :return: The adults of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._adults

    @adults.setter
    def adults(self, adults):
        """Sets the adults of this TransportGetOfferAvailabilityResponse.

        Number of adults included in the transport offer.  # noqa: E501

        :param adults: The adults of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._adults = adults

    @property
    def children(self):
        """Gets the children of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Number of children included in the transport offer.  # noqa: E501

        :return: The children of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this TransportGetOfferAvailabilityResponse.

        Number of children included in the transport offer.  # noqa: E501

        :param children: The children of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._children = children

    @property
    def return_date(self):
        """Gets the return_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Date when the transport is scheduled to be returned.  # noqa: E501

        :return: The return_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: date
        """
        return self._return_date

    @return_date.setter
    def return_date(self, return_date):
        """Sets the return_date of this TransportGetOfferAvailabilityResponse.

        Date when the transport is scheduled to be returned.  # noqa: E501

        :param return_date: The return_date of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: date
        """

        self._return_date = return_date

    @property
    def return_time(self):
        """Gets the return_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Time when the transport is scheduled to be returned.  # noqa: E501

        :return: The return_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._return_time

    @return_time.setter
    def return_time(self, return_time):
        """Sets the return_time of this TransportGetOfferAvailabilityResponse.

        Time when the transport is scheduled to be returned.  # noqa: E501

        :param return_time: The return_time of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._return_time = return_time

    @property
    def transport_name(self):
        """Gets the transport_name of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Name of the transport provider or vehicle.  # noqa: E501

        :return: The transport_name of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_name

    @transport_name.setter
    def transport_name(self, transport_name):
        """Sets the transport_name of this TransportGetOfferAvailabilityResponse.

        Name of the transport provider or vehicle.  # noqa: E501

        :param transport_name: The transport_name of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_name = transport_name

    @property
    def transport_description(self):
        """Gets the transport_description of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Description of the transport.  # noqa: E501

        :return: The transport_description of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_description

    @transport_description.setter
    def transport_description(self, transport_description):
        """Sets the transport_description of this TransportGetOfferAvailabilityResponse.

        Description of the transport.  # noqa: E501

        :param transport_description: The transport_description of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_description = transport_description

    @property
    def transport_address(self):
        """Gets the transport_address of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Address where the transport is located or where it operates.  # noqa: E501

        :return: The transport_address of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_address

    @transport_address.setter
    def transport_address(self, transport_address):
        """Sets the transport_address of this TransportGetOfferAvailabilityResponse.

        Address where the transport is located or where it operates.  # noqa: E501

        :param transport_address: The transport_address of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_address = transport_address

    @property
    def transport_latitude(self):
        """Gets the transport_latitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Latitude coordinate of the transport location.  # noqa: E501

        :return: The transport_latitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._transport_latitude

    @transport_latitude.setter
    def transport_latitude(self, transport_latitude):
        """Sets the transport_latitude of this TransportGetOfferAvailabilityResponse.

        Latitude coordinate of the transport location.  # noqa: E501

        :param transport_latitude: The transport_latitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._transport_latitude = transport_latitude

    @property
    def transport_longitude(self):
        """Gets the transport_longitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Longitude coordinate of the transport location.  # noqa: E501

        :return: The transport_longitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._transport_longitude

    @transport_longitude.setter
    def transport_longitude(self, transport_longitude):
        """Sets the transport_longitude of this TransportGetOfferAvailabilityResponse.

        Longitude coordinate of the transport location.  # noqa: E501

        :param transport_longitude: The transport_longitude of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._transport_longitude = transport_longitude

    @property
    def transport_distance(self):
        """Gets the transport_distance of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Distance covered by the transport offer.  # noqa: E501

        :return: The transport_distance of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._transport_distance

    @transport_distance.setter
    def transport_distance(self, transport_distance):
        """Sets the transport_distance of this TransportGetOfferAvailabilityResponse.

        Distance covered by the transport offer.  # noqa: E501

        :param transport_distance: The transport_distance of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._transport_distance = transport_distance

    @property
    def transport_distance_metric(self):
        """Gets the transport_distance_metric of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Metric unit for transport distance (e.g., kilometers, miles).  # noqa: E501

        :return: The transport_distance_metric of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_distance_metric

    @transport_distance_metric.setter
    def transport_distance_metric(self, transport_distance_metric):
        """Sets the transport_distance_metric of this TransportGetOfferAvailabilityResponse.

        Metric unit for transport distance (e.g., kilometers, miles).  # noqa: E501

        :param transport_distance_metric: The transport_distance_metric of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_distance_metric = transport_distance_metric

    @property
    def transport_images(self):
        """Gets the transport_images of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Collection of images of the transport.  # noqa: E501

        :return: The transport_images of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._transport_images

    @transport_images.setter
    def transport_images(self, transport_images):
        """Sets the transport_images of this TransportGetOfferAvailabilityResponse.

        Collection of images of the transport.  # noqa: E501

        :param transport_images: The transport_images of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: list[str]
        """

        self._transport_images = transport_images

    @property
    def transport_rating(self):
        """Gets the transport_rating of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Rating of the transport.  # noqa: E501

        :return: The transport_rating of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._transport_rating

    @transport_rating.setter
    def transport_rating(self, transport_rating):
        """Sets the transport_rating of this TransportGetOfferAvailabilityResponse.

        Rating of the transport.  # noqa: E501

        :param transport_rating: The transport_rating of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._transport_rating = transport_rating

    @property
    def transport_reviews(self):
        """Gets the transport_reviews of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Reviews for the transport.  # noqa: E501

        :return: The transport_reviews of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: list[object]
        """
        return self._transport_reviews

    @transport_reviews.setter
    def transport_reviews(self, transport_reviews):
        """Sets the transport_reviews of this TransportGetOfferAvailabilityResponse.

        Reviews for the transport.  # noqa: E501

        :param transport_reviews: The transport_reviews of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: list[object]
        """

        self._transport_reviews = transport_reviews

    @property
    def transport_type(self):
        """Gets the transport_type of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Type of transport (e.g., car, van, scooter).  # noqa: E501

        :return: The transport_type of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_type

    @transport_type.setter
    def transport_type(self, transport_type):
        """Sets the transport_type of this TransportGetOfferAvailabilityResponse.

        Type of transport (e.g., car, van, scooter).  # noqa: E501

        :param transport_type: The transport_type of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_type = transport_type

    @property
    def transport_class(self):
        """Gets the transport_class of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Class of the transport (e.g., economy, luxury).  # noqa: E501

        :return: The transport_class of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_class

    @transport_class.setter
    def transport_class(self, transport_class):
        """Sets the transport_class of this TransportGetOfferAvailabilityResponse.

        Class of the transport (e.g., economy, luxury).  # noqa: E501

        :param transport_class: The transport_class of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_class = transport_class

    @property
    def transport_company(self):
        """Gets the transport_company of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Company providing the transport.  # noqa: E501

        :return: The transport_company of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_company

    @transport_company.setter
    def transport_company(self, transport_company):
        """Sets the transport_company of this TransportGetOfferAvailabilityResponse.

        Company providing the transport.  # noqa: E501

        :param transport_company: The transport_company of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_company = transport_company

    @property
    def transport_company_logo(self):
        """Gets the transport_company_logo of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Logo of the company providing the transport.  # noqa: E501

        :return: The transport_company_logo of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._transport_company_logo

    @transport_company_logo.setter
    def transport_company_logo(self, transport_company_logo):
        """Sets the transport_company_logo of this TransportGetOfferAvailabilityResponse.

        Logo of the company providing the transport.  # noqa: E501

        :param transport_company_logo: The transport_company_logo of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._transport_company_logo = transport_company_logo

    @property
    def transport_passengers_number(self):
        """Gets the transport_passengers_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Number of passengers the transport can accommodate.  # noqa: E501

        :return: The transport_passengers_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._transport_passengers_number

    @transport_passengers_number.setter
    def transport_passengers_number(self, transport_passengers_number):
        """Sets the transport_passengers_number of this TransportGetOfferAvailabilityResponse.

        Number of passengers the transport can accommodate.  # noqa: E501

        :param transport_passengers_number: The transport_passengers_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._transport_passengers_number = transport_passengers_number

    @property
    def transport_bags_number(self):
        """Gets the transport_bags_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Number of bags the transport can accommodate.  # noqa: E501

        :return: The transport_bags_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._transport_bags_number

    @transport_bags_number.setter
    def transport_bags_number(self, transport_bags_number):
        """Sets the transport_bags_number of this TransportGetOfferAvailabilityResponse.

        Number of bags the transport can accommodate.  # noqa: E501

        :param transport_bags_number: The transport_bags_number of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._transport_bags_number = transport_bags_number

    @property
    def transport_amenities(self):
        """Gets the transport_amenities of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        List of amenities provided with the transport.  # noqa: E501

        :return: The transport_amenities of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._transport_amenities

    @transport_amenities.setter
    def transport_amenities(self, transport_amenities):
        """Sets the transport_amenities of this TransportGetOfferAvailabilityResponse.

        List of amenities provided with the transport.  # noqa: E501

        :param transport_amenities: The transport_amenities of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: list[str]
        """

        self._transport_amenities = transport_amenities

    @property
    def booking_questions(self):
        """Gets the booking_questions of this TransportGetOfferAvailabilityResponse.  # noqa: E501

        Questions related to booking the transport.  # noqa: E501

        :return: The booking_questions of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: list[object]
        """
        return self._booking_questions

    @booking_questions.setter
    def booking_questions(self, booking_questions):
        """Sets the booking_questions of this TransportGetOfferAvailabilityResponse.

        Questions related to booking the transport.  # noqa: E501

        :param booking_questions: The booking_questions of this TransportGetOfferAvailabilityResponse.  # noqa: E501
        :type: list[object]
        """

        self._booking_questions = booking_questions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TransportGetOfferAvailabilityResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TransportGetOfferAvailabilityResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
