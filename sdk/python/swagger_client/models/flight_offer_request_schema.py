# coding: utf-8

"""
    Federated Content API

    Welcome to the Federated Content API following Open API Specification (Version 3.0.0)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FlightOfferRequestSchema(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cabin': 'list',
        'legs': 'list',
        'passengers': 'list',
        'private_fare_codes': 'list',
        'filter_by_keyword': 'str',
        'filter_by_price_min': 'float',
        'filter_by_price_max': 'float',
        'filter_by_duration_min': 'int',
        'filter_by_duration_max': 'int',
        'filter_by_departure_time_min': 'str',
        'filter_by_departure_time_max': 'str',
        'filter_by_arrival_time_min': 'str',
        'filter_by_arrival_time_max': 'str',
        'filter_by_stops_min': 'int',
        'filter_by_stops_max': 'int',
        'filter_by_airlines': 'list',
        'filter_by_airports': 'list',
        'sort_by': 'str',
        'sort_order': 'str',
        'page': 'int',
        'limit': 'int',
        'language': 'str',
        'currency': 'str'
    }

    attribute_map = {
        'cabin': 'cabin',
        'legs': 'legs',
        'passengers': 'passengers',
        'private_fare_codes': 'private_fare_codes',
        'filter_by_keyword': 'filter_by_keyword',
        'filter_by_price_min': 'filter_by_price_min',
        'filter_by_price_max': 'filter_by_price_max',
        'filter_by_duration_min': 'filter_by_duration_min',
        'filter_by_duration_max': 'filter_by_duration_max',
        'filter_by_departure_time_min': 'filter_by_departure_time_min',
        'filter_by_departure_time_max': 'filter_by_departure_time_max',
        'filter_by_arrival_time_min': 'filter_by_arrival_time_min',
        'filter_by_arrival_time_max': 'filter_by_arrival_time_max',
        'filter_by_stops_min': 'filter_by_stops_min',
        'filter_by_stops_max': 'filter_by_stops_max',
        'filter_by_airlines': 'filter_by_airlines',
        'filter_by_airports': 'filter_by_airports',
        'sort_by': 'sort_by',
        'sort_order': 'sort_order',
        'page': 'page',
        'limit': 'limit',
        'language': 'language',
        'currency': 'currency'
    }

    def __init__(self, cabin=None, legs=None, passengers=None, private_fare_codes=None, filter_by_keyword=None, filter_by_price_min=None, filter_by_price_max=None, filter_by_duration_min=None, filter_by_duration_max=None, filter_by_departure_time_min=None, filter_by_departure_time_max=None, filter_by_arrival_time_min=None, filter_by_arrival_time_max=None, filter_by_stops_min=None, filter_by_stops_max=None, filter_by_airlines=None, filter_by_airports=None, sort_by=None, sort_order=None, page=None, limit=None, language=None, currency=None):  # noqa: E501
        """FlightOfferRequestSchema - a model defined in Swagger"""  # noqa: E501
        self._cabin = None
        self._legs = None
        self._passengers = None
        self._private_fare_codes = None
        self._filter_by_keyword = None
        self._filter_by_price_min = None
        self._filter_by_price_max = None
        self._filter_by_duration_min = None
        self._filter_by_duration_max = None
        self._filter_by_departure_time_min = None
        self._filter_by_departure_time_max = None
        self._filter_by_arrival_time_min = None
        self._filter_by_arrival_time_max = None
        self._filter_by_stops_min = None
        self._filter_by_stops_max = None
        self._filter_by_airlines = None
        self._filter_by_airports = None
        self._sort_by = None
        self._sort_order = None
        self._page = None
        self._limit = None
        self._language = None
        self._currency = None
        self.discriminator = None
        if cabin is not None:
            self.cabin = cabin
        if legs is not None:
            self.legs = legs
        if passengers is not None:
            self.passengers = passengers
        if private_fare_codes is not None:
            self.private_fare_codes = private_fare_codes
        if filter_by_keyword is not None:
            self.filter_by_keyword = filter_by_keyword
        if filter_by_price_min is not None:
            self.filter_by_price_min = filter_by_price_min
        if filter_by_price_max is not None:
            self.filter_by_price_max = filter_by_price_max
        if filter_by_duration_min is not None:
            self.filter_by_duration_min = filter_by_duration_min
        if filter_by_duration_max is not None:
            self.filter_by_duration_max = filter_by_duration_max
        if filter_by_departure_time_min is not None:
            self.filter_by_departure_time_min = filter_by_departure_time_min
        if filter_by_departure_time_max is not None:
            self.filter_by_departure_time_max = filter_by_departure_time_max
        if filter_by_arrival_time_min is not None:
            self.filter_by_arrival_time_min = filter_by_arrival_time_min
        if filter_by_arrival_time_max is not None:
            self.filter_by_arrival_time_max = filter_by_arrival_time_max
        if filter_by_stops_min is not None:
            self.filter_by_stops_min = filter_by_stops_min
        if filter_by_stops_max is not None:
            self.filter_by_stops_max = filter_by_stops_max
        if filter_by_airlines is not None:
            self.filter_by_airlines = filter_by_airlines
        if filter_by_airports is not None:
            self.filter_by_airports = filter_by_airports
        if sort_by is not None:
            self.sort_by = sort_by
        if sort_order is not None:
            self.sort_order = sort_order
        if page is not None:
            self.page = page
        if limit is not None:
            self.limit = limit
        if language is not None:
            self.language = language
        if currency is not None:
            self.currency = currency

    @property
    def cabin(self):
        """Gets the cabin of this FlightOfferRequestSchema.  # noqa: E501

        Class options: first, business, premium economy, economy.  # noqa: E501

        :return: The cabin of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._cabin

    @cabin.setter
    def cabin(self, cabin):
        """Sets the cabin of this FlightOfferRequestSchema.

        Class options: first, business, premium economy, economy.  # noqa: E501

        :param cabin: The cabin of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._cabin = cabin

    @property
    def legs(self):
        """Gets the legs of this FlightOfferRequestSchema.  # noqa: E501

        Array of flight legs, each described in FlightLegOfferRequestSchema.  # noqa: E501

        :return: The legs of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._legs

    @legs.setter
    def legs(self, legs):
        """Sets the legs of this FlightOfferRequestSchema.

        Array of flight legs, each described in FlightLegOfferRequestSchema.  # noqa: E501

        :param legs: The legs of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._legs = legs

    @property
    def passengers(self):
        """Gets the passengers of this FlightOfferRequestSchema.  # noqa: E501

        Array of passengers, each described in FlightPassengerOfferRequestSchema.  # noqa: E501

        :return: The passengers of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._passengers

    @passengers.setter
    def passengers(self, passengers):
        """Sets the passengers of this FlightOfferRequestSchema.

        Array of passengers, each described in FlightPassengerOfferRequestSchema.  # noqa: E501

        :param passengers: The passengers of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._passengers = passengers

    @property
    def private_fare_codes(self):
        """Gets the private_fare_codes of this FlightOfferRequestSchema.  # noqa: E501

        Array of codes for accessing special negotiated fares.  # noqa: E501

        :return: The private_fare_codes of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._private_fare_codes

    @private_fare_codes.setter
    def private_fare_codes(self, private_fare_codes):
        """Sets the private_fare_codes of this FlightOfferRequestSchema.

        Array of codes for accessing special negotiated fares.  # noqa: E501

        :param private_fare_codes: The private_fare_codes of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._private_fare_codes = private_fare_codes

    @property
    def filter_by_keyword(self):
        """Gets the filter_by_keyword of this FlightOfferRequestSchema.  # noqa: E501

        Keyword to filter offers.  # noqa: E501

        :return: The filter_by_keyword of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._filter_by_keyword

    @filter_by_keyword.setter
    def filter_by_keyword(self, filter_by_keyword):
        """Sets the filter_by_keyword of this FlightOfferRequestSchema.

        Keyword to filter offers.  # noqa: E501

        :param filter_by_keyword: The filter_by_keyword of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._filter_by_keyword = filter_by_keyword

    @property
    def filter_by_price_min(self):
        """Gets the filter_by_price_min of this FlightOfferRequestSchema.  # noqa: E501

        Minimum price filter.  # noqa: E501

        :return: The filter_by_price_min of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: float
        """
        return self._filter_by_price_min

    @filter_by_price_min.setter
    def filter_by_price_min(self, filter_by_price_min):
        """Sets the filter_by_price_min of this FlightOfferRequestSchema.

        Minimum price filter.  # noqa: E501

        :param filter_by_price_min: The filter_by_price_min of this FlightOfferRequestSchema.  # noqa: E501
        :type: float
        """

        self._filter_by_price_min = filter_by_price_min

    @property
    def filter_by_price_max(self):
        """Gets the filter_by_price_max of this FlightOfferRequestSchema.  # noqa: E501

        Maximum price filter.  # noqa: E501

        :return: The filter_by_price_max of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: float
        """
        return self._filter_by_price_max

    @filter_by_price_max.setter
    def filter_by_price_max(self, filter_by_price_max):
        """Sets the filter_by_price_max of this FlightOfferRequestSchema.

        Maximum price filter.  # noqa: E501

        :param filter_by_price_max: The filter_by_price_max of this FlightOfferRequestSchema.  # noqa: E501
        :type: float
        """

        self._filter_by_price_max = filter_by_price_max

    @property
    def filter_by_duration_min(self):
        """Gets the filter_by_duration_min of this FlightOfferRequestSchema.  # noqa: E501

        Minimum flight duration filter.  # noqa: E501

        :return: The filter_by_duration_min of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._filter_by_duration_min

    @filter_by_duration_min.setter
    def filter_by_duration_min(self, filter_by_duration_min):
        """Sets the filter_by_duration_min of this FlightOfferRequestSchema.

        Minimum flight duration filter.  # noqa: E501

        :param filter_by_duration_min: The filter_by_duration_min of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._filter_by_duration_min = filter_by_duration_min

    @property
    def filter_by_duration_max(self):
        """Gets the filter_by_duration_max of this FlightOfferRequestSchema.  # noqa: E501

        Maximum flight duration filter.  # noqa: E501

        :return: The filter_by_duration_max of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._filter_by_duration_max

    @filter_by_duration_max.setter
    def filter_by_duration_max(self, filter_by_duration_max):
        """Sets the filter_by_duration_max of this FlightOfferRequestSchema.

        Maximum flight duration filter.  # noqa: E501

        :param filter_by_duration_max: The filter_by_duration_max of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._filter_by_duration_max = filter_by_duration_max

    @property
    def filter_by_departure_time_min(self):
        """Gets the filter_by_departure_time_min of this FlightOfferRequestSchema.  # noqa: E501

        Earliest departure time filter.  # noqa: E501

        :return: The filter_by_departure_time_min of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._filter_by_departure_time_min

    @filter_by_departure_time_min.setter
    def filter_by_departure_time_min(self, filter_by_departure_time_min):
        """Sets the filter_by_departure_time_min of this FlightOfferRequestSchema.

        Earliest departure time filter.  # noqa: E501

        :param filter_by_departure_time_min: The filter_by_departure_time_min of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._filter_by_departure_time_min = filter_by_departure_time_min

    @property
    def filter_by_departure_time_max(self):
        """Gets the filter_by_departure_time_max of this FlightOfferRequestSchema.  # noqa: E501

        Latest departure time filter.  # noqa: E501

        :return: The filter_by_departure_time_max of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._filter_by_departure_time_max

    @filter_by_departure_time_max.setter
    def filter_by_departure_time_max(self, filter_by_departure_time_max):
        """Sets the filter_by_departure_time_max of this FlightOfferRequestSchema.

        Latest departure time filter.  # noqa: E501

        :param filter_by_departure_time_max: The filter_by_departure_time_max of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._filter_by_departure_time_max = filter_by_departure_time_max

    @property
    def filter_by_arrival_time_min(self):
        """Gets the filter_by_arrival_time_min of this FlightOfferRequestSchema.  # noqa: E501

        Earliest arrival time filter.  # noqa: E501

        :return: The filter_by_arrival_time_min of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._filter_by_arrival_time_min

    @filter_by_arrival_time_min.setter
    def filter_by_arrival_time_min(self, filter_by_arrival_time_min):
        """Sets the filter_by_arrival_time_min of this FlightOfferRequestSchema.

        Earliest arrival time filter.  # noqa: E501

        :param filter_by_arrival_time_min: The filter_by_arrival_time_min of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._filter_by_arrival_time_min = filter_by_arrival_time_min

    @property
    def filter_by_arrival_time_max(self):
        """Gets the filter_by_arrival_time_max of this FlightOfferRequestSchema.  # noqa: E501

        Latest arrival time filter.  # noqa: E501

        :return: The filter_by_arrival_time_max of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._filter_by_arrival_time_max

    @filter_by_arrival_time_max.setter
    def filter_by_arrival_time_max(self, filter_by_arrival_time_max):
        """Sets the filter_by_arrival_time_max of this FlightOfferRequestSchema.

        Latest arrival time filter.  # noqa: E501

        :param filter_by_arrival_time_max: The filter_by_arrival_time_max of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._filter_by_arrival_time_max = filter_by_arrival_time_max

    @property
    def filter_by_stops_min(self):
        """Gets the filter_by_stops_min of this FlightOfferRequestSchema.  # noqa: E501

        Minimum number of stops filter.  # noqa: E501

        :return: The filter_by_stops_min of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._filter_by_stops_min

    @filter_by_stops_min.setter
    def filter_by_stops_min(self, filter_by_stops_min):
        """Sets the filter_by_stops_min of this FlightOfferRequestSchema.

        Minimum number of stops filter.  # noqa: E501

        :param filter_by_stops_min: The filter_by_stops_min of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._filter_by_stops_min = filter_by_stops_min

    @property
    def filter_by_stops_max(self):
        """Gets the filter_by_stops_max of this FlightOfferRequestSchema.  # noqa: E501

        Maximum number of stops filter.  # noqa: E501

        :return: The filter_by_stops_max of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._filter_by_stops_max

    @filter_by_stops_max.setter
    def filter_by_stops_max(self, filter_by_stops_max):
        """Sets the filter_by_stops_max of this FlightOfferRequestSchema.

        Maximum number of stops filter.  # noqa: E501

        :param filter_by_stops_max: The filter_by_stops_max of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._filter_by_stops_max = filter_by_stops_max

    @property
    def filter_by_airlines(self):
        """Gets the filter_by_airlines of this FlightOfferRequestSchema.  # noqa: E501

        List of airline filters.  # noqa: E501

        :return: The filter_by_airlines of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._filter_by_airlines

    @filter_by_airlines.setter
    def filter_by_airlines(self, filter_by_airlines):
        """Sets the filter_by_airlines of this FlightOfferRequestSchema.

        List of airline filters.  # noqa: E501

        :param filter_by_airlines: The filter_by_airlines of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._filter_by_airlines = filter_by_airlines

    @property
    def filter_by_airports(self):
        """Gets the filter_by_airports of this FlightOfferRequestSchema.  # noqa: E501

        List of airport filters.  # noqa: E501

        :return: The filter_by_airports of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: list
        """
        return self._filter_by_airports

    @filter_by_airports.setter
    def filter_by_airports(self, filter_by_airports):
        """Sets the filter_by_airports of this FlightOfferRequestSchema.

        List of airport filters.  # noqa: E501

        :param filter_by_airports: The filter_by_airports of this FlightOfferRequestSchema.  # noqa: E501
        :type: list
        """

        self._filter_by_airports = filter_by_airports

    @property
    def sort_by(self):
        """Gets the sort_by of this FlightOfferRequestSchema.  # noqa: E501

        Sorting criteria.  # noqa: E501

        :return: The sort_by of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this FlightOfferRequestSchema.

        Sorting criteria.  # noqa: E501

        :param sort_by: The sort_by of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this FlightOfferRequestSchema.  # noqa: E501

        Sorting order, asc or desc.  # noqa: E501

        :return: The sort_order of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this FlightOfferRequestSchema.

        Sorting order, asc or desc.  # noqa: E501

        :param sort_order: The sort_order of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._sort_order = sort_order

    @property
    def page(self):
        """Gets the page of this FlightOfferRequestSchema.  # noqa: E501

        Pagination: page number.  # noqa: E501

        :return: The page of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this FlightOfferRequestSchema.

        Pagination: page number.  # noqa: E501

        :param page: The page of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._page = page

    @property
    def limit(self):
        """Gets the limit of this FlightOfferRequestSchema.  # noqa: E501

        Pagination: maximum items per page.  # noqa: E501

        :return: The limit of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this FlightOfferRequestSchema.

        Pagination: maximum items per page.  # noqa: E501

        :param limit: The limit of this FlightOfferRequestSchema.  # noqa: E501
        :type: int
        """

        self._limit = limit

    @property
    def language(self):
        """Gets the language of this FlightOfferRequestSchema.  # noqa: E501

        Language selection for offer details.  # noqa: E501

        :return: The language of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this FlightOfferRequestSchema.

        Language selection for offer details.  # noqa: E501

        :param language: The language of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def currency(self):
        """Gets the currency of this FlightOfferRequestSchema.  # noqa: E501

        Currency in which prices should be provided.  # noqa: E501

        :return: The currency of this FlightOfferRequestSchema.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this FlightOfferRequestSchema.

        Currency in which prices should be provided.  # noqa: E501

        :param currency: The currency of this FlightOfferRequestSchema.  # noqa: E501
        :type: str
        """

        self._currency = currency

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FlightOfferRequestSchema, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FlightOfferRequestSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
