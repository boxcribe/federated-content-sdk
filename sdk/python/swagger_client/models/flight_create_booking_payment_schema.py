# coding: utf-8

"""
    Federated Content API

    Welcome to the Federated Content API following Open API Specification (Version 3.0.0)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FlightCreateBookingPaymentSchema(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'card_number': 'str',
        'card_expiration_month': 'int',
        'card_expiration_year': 'int',
        'card_cvv': 'str',
        'card_name': 'str',
        'billing_address': 'str',
        'billing_city': 'str',
        'billing_state': 'str',
        'billing_zip': 'str',
        'billing_country': 'str'
    }

    attribute_map = {
        'card_number': 'card_number',
        'card_expiration_month': 'card_expiration_month',
        'card_expiration_year': 'card_expiration_year',
        'card_cvv': 'card_cvv',
        'card_name': 'card_name',
        'billing_address': 'billing_address',
        'billing_city': 'billing_city',
        'billing_state': 'billing_state',
        'billing_zip': 'billing_zip',
        'billing_country': 'billing_country'
    }

    def __init__(self, card_number=None, card_expiration_month=None, card_expiration_year=None, card_cvv=None, card_name=None, billing_address=None, billing_city=None, billing_state=None, billing_zip=None, billing_country=None):  # noqa: E501
        """FlightCreateBookingPaymentSchema - a model defined in Swagger"""  # noqa: E501
        self._card_number = None
        self._card_expiration_month = None
        self._card_expiration_year = None
        self._card_cvv = None
        self._card_name = None
        self._billing_address = None
        self._billing_city = None
        self._billing_state = None
        self._billing_zip = None
        self._billing_country = None
        self.discriminator = None
        if card_number is not None:
            self.card_number = card_number
        if card_expiration_month is not None:
            self.card_expiration_month = card_expiration_month
        if card_expiration_year is not None:
            self.card_expiration_year = card_expiration_year
        if card_cvv is not None:
            self.card_cvv = card_cvv
        if card_name is not None:
            self.card_name = card_name
        if billing_address is not None:
            self.billing_address = billing_address
        if billing_city is not None:
            self.billing_city = billing_city
        if billing_state is not None:
            self.billing_state = billing_state
        if billing_zip is not None:
            self.billing_zip = billing_zip
        if billing_country is not None:
            self.billing_country = billing_country

    @property
    def card_number(self):
        """Gets the card_number of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Credit card number used for the payment.  # noqa: E501

        :return: The card_number of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number):
        """Sets the card_number of this FlightCreateBookingPaymentSchema.

        Credit card number used for the payment.  # noqa: E501

        :param card_number: The card_number of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._card_number = card_number

    @property
    def card_expiration_month(self):
        """Gets the card_expiration_month of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Expiration month of the credit card.  # noqa: E501

        :return: The card_expiration_month of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: int
        """
        return self._card_expiration_month

    @card_expiration_month.setter
    def card_expiration_month(self, card_expiration_month):
        """Sets the card_expiration_month of this FlightCreateBookingPaymentSchema.

        Expiration month of the credit card.  # noqa: E501

        :param card_expiration_month: The card_expiration_month of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: int
        """

        self._card_expiration_month = card_expiration_month

    @property
    def card_expiration_year(self):
        """Gets the card_expiration_year of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Expiration year of the credit card.  # noqa: E501

        :return: The card_expiration_year of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: int
        """
        return self._card_expiration_year

    @card_expiration_year.setter
    def card_expiration_year(self, card_expiration_year):
        """Sets the card_expiration_year of this FlightCreateBookingPaymentSchema.

        Expiration year of the credit card.  # noqa: E501

        :param card_expiration_year: The card_expiration_year of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: int
        """

        self._card_expiration_year = card_expiration_year

    @property
    def card_cvv(self):
        """Gets the card_cvv of this FlightCreateBookingPaymentSchema.  # noqa: E501

        CVV of the credit card.  # noqa: E501

        :return: The card_cvv of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._card_cvv

    @card_cvv.setter
    def card_cvv(self, card_cvv):
        """Sets the card_cvv of this FlightCreateBookingPaymentSchema.

        CVV of the credit card.  # noqa: E501

        :param card_cvv: The card_cvv of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._card_cvv = card_cvv

    @property
    def card_name(self):
        """Gets the card_name of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Name on the credit card.  # noqa: E501

        :return: The card_name of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._card_name

    @card_name.setter
    def card_name(self, card_name):
        """Sets the card_name of this FlightCreateBookingPaymentSchema.

        Name on the credit card.  # noqa: E501

        :param card_name: The card_name of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._card_name = card_name

    @property
    def billing_address(self):
        """Gets the billing_address of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Billing address associated with the credit card.  # noqa: E501

        :return: The billing_address of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this FlightCreateBookingPaymentSchema.

        Billing address associated with the credit card.  # noqa: E501

        :param billing_address: The billing_address of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._billing_address = billing_address

    @property
    def billing_city(self):
        """Gets the billing_city of this FlightCreateBookingPaymentSchema.  # noqa: E501

        City part of the billing address.  # noqa: E501

        :return: The billing_city of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._billing_city

    @billing_city.setter
    def billing_city(self, billing_city):
        """Sets the billing_city of this FlightCreateBookingPaymentSchema.

        City part of the billing address.  # noqa: E501

        :param billing_city: The billing_city of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._billing_city = billing_city

    @property
    def billing_state(self):
        """Gets the billing_state of this FlightCreateBookingPaymentSchema.  # noqa: E501

        State part of the billing address.  # noqa: E501

        :return: The billing_state of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._billing_state

    @billing_state.setter
    def billing_state(self, billing_state):
        """Sets the billing_state of this FlightCreateBookingPaymentSchema.

        State part of the billing address.  # noqa: E501

        :param billing_state: The billing_state of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._billing_state = billing_state

    @property
    def billing_zip(self):
        """Gets the billing_zip of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Postal code part of the billing address.  # noqa: E501

        :return: The billing_zip of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._billing_zip

    @billing_zip.setter
    def billing_zip(self, billing_zip):
        """Sets the billing_zip of this FlightCreateBookingPaymentSchema.

        Postal code part of the billing address.  # noqa: E501

        :param billing_zip: The billing_zip of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._billing_zip = billing_zip

    @property
    def billing_country(self):
        """Gets the billing_country of this FlightCreateBookingPaymentSchema.  # noqa: E501

        Country part of the billing address.  # noqa: E501

        :return: The billing_country of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :rtype: str
        """
        return self._billing_country

    @billing_country.setter
    def billing_country(self, billing_country):
        """Sets the billing_country of this FlightCreateBookingPaymentSchema.

        Country part of the billing address.  # noqa: E501

        :param billing_country: The billing_country of this FlightCreateBookingPaymentSchema.  # noqa: E501
        :type: str
        """

        self._billing_country = billing_country

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FlightCreateBookingPaymentSchema, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FlightCreateBookingPaymentSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
