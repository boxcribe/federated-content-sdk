# coding: utf-8

"""
    Federated Content API

    Welcome to the Federated Content API following Open API Specification (Version 3.0.0)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CarGetOfferAvailabilityResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'offer_id': 'str',
        'supplier_offer_id': 'str',
        'offer_index': 'int',
        'offer_tax': 'float',
        'offer_price': 'float',
        'offer_currency': 'str',
        'offer_cancelation_policies': 'dict(str, object)',
        'pickup_date': 'date',
        'pickup_time': 'str',
        'dropoff_date': 'date',
        'dropoff_time': 'str',
        'car_name': 'str',
        'car_description': 'str',
        'car_address': 'str',
        'car_latitude': 'float',
        'car_longitude': 'float',
        'car_distance': 'float',
        'car_distance_metric': 'str',
        'car_images': 'list[str]',
        'car_rating': 'float',
        'car_reviews': 'int',
        'car_type': 'str',
        'car_class': 'str',
        'car_company': 'str',
        'car_company_logo': 'str',
        'car_passengers_number': 'int',
        'car_bags_number': 'int'
    }

    attribute_map = {
        'offer_id': 'offer_id',
        'supplier_offer_id': 'supplier_offer_id',
        'offer_index': 'offer_index',
        'offer_tax': 'offer_tax',
        'offer_price': 'offer_price',
        'offer_currency': 'offer_currency',
        'offer_cancelation_policies': 'offer_cancelation_policies',
        'pickup_date': 'pickup_date',
        'pickup_time': 'pickup_time',
        'dropoff_date': 'dropoff_date',
        'dropoff_time': 'dropoff_time',
        'car_name': 'car_name',
        'car_description': 'car_description',
        'car_address': 'car_address',
        'car_latitude': 'car_latitude',
        'car_longitude': 'car_longitude',
        'car_distance': 'car_distance',
        'car_distance_metric': 'car_distance_metric',
        'car_images': 'car_images',
        'car_rating': 'car_rating',
        'car_reviews': 'car_reviews',
        'car_type': 'car_type',
        'car_class': 'car_class',
        'car_company': 'car_company',
        'car_company_logo': 'car_company_logo',
        'car_passengers_number': 'car_passengers_number',
        'car_bags_number': 'car_bags_number'
    }

    def __init__(self, offer_id=None, supplier_offer_id=None, offer_index=None, offer_tax=None, offer_price=None, offer_currency=None, offer_cancelation_policies=None, pickup_date=None, pickup_time=None, dropoff_date=None, dropoff_time=None, car_name=None, car_description=None, car_address=None, car_latitude=None, car_longitude=None, car_distance=None, car_distance_metric=None, car_images=None, car_rating=None, car_reviews=None, car_type=None, car_class=None, car_company=None, car_company_logo=None, car_passengers_number=None, car_bags_number=None):  # noqa: E501
        """CarGetOfferAvailabilityResponse - a model defined in Swagger"""  # noqa: E501
        self._offer_id = None
        self._supplier_offer_id = None
        self._offer_index = None
        self._offer_tax = None
        self._offer_price = None
        self._offer_currency = None
        self._offer_cancelation_policies = None
        self._pickup_date = None
        self._pickup_time = None
        self._dropoff_date = None
        self._dropoff_time = None
        self._car_name = None
        self._car_description = None
        self._car_address = None
        self._car_latitude = None
        self._car_longitude = None
        self._car_distance = None
        self._car_distance_metric = None
        self._car_images = None
        self._car_rating = None
        self._car_reviews = None
        self._car_type = None
        self._car_class = None
        self._car_company = None
        self._car_company_logo = None
        self._car_passengers_number = None
        self._car_bags_number = None
        self.discriminator = None
        if offer_id is not None:
            self.offer_id = offer_id
        if supplier_offer_id is not None:
            self.supplier_offer_id = supplier_offer_id
        if offer_index is not None:
            self.offer_index = offer_index
        if offer_tax is not None:
            self.offer_tax = offer_tax
        if offer_price is not None:
            self.offer_price = offer_price
        if offer_currency is not None:
            self.offer_currency = offer_currency
        if offer_cancelation_policies is not None:
            self.offer_cancelation_policies = offer_cancelation_policies
        if pickup_date is not None:
            self.pickup_date = pickup_date
        if pickup_time is not None:
            self.pickup_time = pickup_time
        if dropoff_date is not None:
            self.dropoff_date = dropoff_date
        if dropoff_time is not None:
            self.dropoff_time = dropoff_time
        if car_name is not None:
            self.car_name = car_name
        if car_description is not None:
            self.car_description = car_description
        if car_address is not None:
            self.car_address = car_address
        if car_latitude is not None:
            self.car_latitude = car_latitude
        if car_longitude is not None:
            self.car_longitude = car_longitude
        if car_distance is not None:
            self.car_distance = car_distance
        if car_distance_metric is not None:
            self.car_distance_metric = car_distance_metric
        if car_images is not None:
            self.car_images = car_images
        if car_rating is not None:
            self.car_rating = car_rating
        if car_reviews is not None:
            self.car_reviews = car_reviews
        if car_type is not None:
            self.car_type = car_type
        if car_class is not None:
            self.car_class = car_class
        if car_company is not None:
            self.car_company = car_company
        if car_company_logo is not None:
            self.car_company_logo = car_company_logo
        if car_passengers_number is not None:
            self.car_passengers_number = car_passengers_number
        if car_bags_number is not None:
            self.car_bags_number = car_bags_number

    @property
    def offer_id(self):
        """Gets the offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Unique identifier for the car offer.  # noqa: E501

        :return: The offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this CarGetOfferAvailabilityResponse.

        Unique identifier for the car offer.  # noqa: E501

        :param offer_id: The offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._offer_id = offer_id

    @property
    def supplier_offer_id(self):
        """Gets the supplier_offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Unique identifier for the supplier’s offer.  # noqa: E501

        :return: The supplier_offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._supplier_offer_id

    @supplier_offer_id.setter
    def supplier_offer_id(self, supplier_offer_id):
        """Sets the supplier_offer_id of this CarGetOfferAvailabilityResponse.

        Unique identifier for the supplier’s offer.  # noqa: E501

        :param supplier_offer_id: The supplier_offer_id of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._supplier_offer_id = supplier_offer_id

    @property
    def offer_index(self):
        """Gets the offer_index of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Index of the offer for sorting purposes.  # noqa: E501

        :return: The offer_index of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._offer_index

    @offer_index.setter
    def offer_index(self, offer_index):
        """Sets the offer_index of this CarGetOfferAvailabilityResponse.

        Index of the offer for sorting purposes.  # noqa: E501

        :param offer_index: The offer_index of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._offer_index = offer_index

    @property
    def offer_tax(self):
        """Gets the offer_tax of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Tax applied to the offer.  # noqa: E501

        :return: The offer_tax of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._offer_tax

    @offer_tax.setter
    def offer_tax(self, offer_tax):
        """Sets the offer_tax of this CarGetOfferAvailabilityResponse.

        Tax applied to the offer.  # noqa: E501

        :param offer_tax: The offer_tax of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._offer_tax = offer_tax

    @property
    def offer_price(self):
        """Gets the offer_price of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Price of the offer.  # noqa: E501

        :return: The offer_price of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._offer_price

    @offer_price.setter
    def offer_price(self, offer_price):
        """Sets the offer_price of this CarGetOfferAvailabilityResponse.

        Price of the offer.  # noqa: E501

        :param offer_price: The offer_price of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._offer_price = offer_price

    @property
    def offer_currency(self):
        """Gets the offer_currency of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Currency of the offer price.  # noqa: E501

        :return: The offer_currency of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._offer_currency

    @offer_currency.setter
    def offer_currency(self, offer_currency):
        """Sets the offer_currency of this CarGetOfferAvailabilityResponse.

        Currency of the offer price.  # noqa: E501

        :param offer_currency: The offer_currency of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._offer_currency = offer_currency

    @property
    def offer_cancelation_policies(self):
        """Gets the offer_cancelation_policies of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Cancellation policies applicable to the offer.  # noqa: E501

        :return: The offer_cancelation_policies of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._offer_cancelation_policies

    @offer_cancelation_policies.setter
    def offer_cancelation_policies(self, offer_cancelation_policies):
        """Sets the offer_cancelation_policies of this CarGetOfferAvailabilityResponse.

        Cancellation policies applicable to the offer.  # noqa: E501

        :param offer_cancelation_policies: The offer_cancelation_policies of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: dict(str, object)
        """

        self._offer_cancelation_policies = offer_cancelation_policies

    @property
    def pickup_date(self):
        """Gets the pickup_date of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Scheduled date for car pickup.  # noqa: E501

        :return: The pickup_date of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: date
        """
        return self._pickup_date

    @pickup_date.setter
    def pickup_date(self, pickup_date):
        """Sets the pickup_date of this CarGetOfferAvailabilityResponse.

        Scheduled date for car pickup.  # noqa: E501

        :param pickup_date: The pickup_date of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: date
        """

        self._pickup_date = pickup_date

    @property
    def pickup_time(self):
        """Gets the pickup_time of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Scheduled time for car pickup.  # noqa: E501

        :return: The pickup_time of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._pickup_time

    @pickup_time.setter
    def pickup_time(self, pickup_time):
        """Sets the pickup_time of this CarGetOfferAvailabilityResponse.

        Scheduled time for car pickup.  # noqa: E501

        :param pickup_time: The pickup_time of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._pickup_time = pickup_time

    @property
    def dropoff_date(self):
        """Gets the dropoff_date of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Scheduled date for car dropoff.  # noqa: E501

        :return: The dropoff_date of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: date
        """
        return self._dropoff_date

    @dropoff_date.setter
    def dropoff_date(self, dropoff_date):
        """Sets the dropoff_date of this CarGetOfferAvailabilityResponse.

        Scheduled date for car dropoff.  # noqa: E501

        :param dropoff_date: The dropoff_date of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: date
        """

        self._dropoff_date = dropoff_date

    @property
    def dropoff_time(self):
        """Gets the dropoff_time of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Scheduled time for car dropoff.  # noqa: E501

        :return: The dropoff_time of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._dropoff_time

    @dropoff_time.setter
    def dropoff_time(self, dropoff_time):
        """Sets the dropoff_time of this CarGetOfferAvailabilityResponse.

        Scheduled time for car dropoff.  # noqa: E501

        :param dropoff_time: The dropoff_time of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._dropoff_time = dropoff_time

    @property
    def car_name(self):
        """Gets the car_name of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Name of the car model.  # noqa: E501

        :return: The car_name of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_name

    @car_name.setter
    def car_name(self, car_name):
        """Sets the car_name of this CarGetOfferAvailabilityResponse.

        Name of the car model.  # noqa: E501

        :param car_name: The car_name of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_name = car_name

    @property
    def car_description(self):
        """Gets the car_description of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Description of the car.  # noqa: E501

        :return: The car_description of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_description

    @car_description.setter
    def car_description(self, car_description):
        """Sets the car_description of this CarGetOfferAvailabilityResponse.

        Description of the car.  # noqa: E501

        :param car_description: The car_description of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_description = car_description

    @property
    def car_address(self):
        """Gets the car_address of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Address where the car can be picked up.  # noqa: E501

        :return: The car_address of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_address

    @car_address.setter
    def car_address(self, car_address):
        """Sets the car_address of this CarGetOfferAvailabilityResponse.

        Address where the car can be picked up.  # noqa: E501

        :param car_address: The car_address of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_address = car_address

    @property
    def car_latitude(self):
        """Gets the car_latitude of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Latitude of the car pickup location.  # noqa: E501

        :return: The car_latitude of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._car_latitude

    @car_latitude.setter
    def car_latitude(self, car_latitude):
        """Sets the car_latitude of this CarGetOfferAvailabilityResponse.

        Latitude of the car pickup location.  # noqa: E501

        :param car_latitude: The car_latitude of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._car_latitude = car_latitude

    @property
    def car_longitude(self):
        """Gets the car_longitude of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Longitude of the car pickup location.  # noqa: E501

        :return: The car_longitude of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._car_longitude

    @car_longitude.setter
    def car_longitude(self, car_longitude):
        """Sets the car_longitude of this CarGetOfferAvailabilityResponse.

        Longitude of the car pickup location.  # noqa: E501

        :param car_longitude: The car_longitude of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._car_longitude = car_longitude

    @property
    def car_distance(self):
        """Gets the car_distance of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Distance the car can be driven.  # noqa: E501

        :return: The car_distance of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._car_distance

    @car_distance.setter
    def car_distance(self, car_distance):
        """Sets the car_distance of this CarGetOfferAvailabilityResponse.

        Distance the car can be driven.  # noqa: E501

        :param car_distance: The car_distance of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._car_distance = car_distance

    @property
    def car_distance_metric(self):
        """Gets the car_distance_metric of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Metric system used for car distance (miles/km).  # noqa: E501

        :return: The car_distance_metric of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_distance_metric

    @car_distance_metric.setter
    def car_distance_metric(self, car_distance_metric):
        """Sets the car_distance_metric of this CarGetOfferAvailabilityResponse.

        Metric system used for car distance (miles/km).  # noqa: E501

        :param car_distance_metric: The car_distance_metric of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_distance_metric = car_distance_metric

    @property
    def car_images(self):
        """Gets the car_images of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Array of images of the car.  # noqa: E501

        :return: The car_images of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._car_images

    @car_images.setter
    def car_images(self, car_images):
        """Sets the car_images of this CarGetOfferAvailabilityResponse.

        Array of images of the car.  # noqa: E501

        :param car_images: The car_images of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: list[str]
        """

        self._car_images = car_images

    @property
    def car_rating(self):
        """Gets the car_rating of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Rating of the car based on user reviews.  # noqa: E501

        :return: The car_rating of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: float
        """
        return self._car_rating

    @car_rating.setter
    def car_rating(self, car_rating):
        """Sets the car_rating of this CarGetOfferAvailabilityResponse.

        Rating of the car based on user reviews.  # noqa: E501

        :param car_rating: The car_rating of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: float
        """

        self._car_rating = car_rating

    @property
    def car_reviews(self):
        """Gets the car_reviews of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Number of reviews for the car.  # noqa: E501

        :return: The car_reviews of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._car_reviews

    @car_reviews.setter
    def car_reviews(self, car_reviews):
        """Sets the car_reviews of this CarGetOfferAvailabilityResponse.

        Number of reviews for the car.  # noqa: E501

        :param car_reviews: The car_reviews of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._car_reviews = car_reviews

    @property
    def car_type(self):
        """Gets the car_type of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Type of the car (e.g., sedan, SUV).  # noqa: E501

        :return: The car_type of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_type

    @car_type.setter
    def car_type(self, car_type):
        """Sets the car_type of this CarGetOfferAvailabilityResponse.

        Type of the car (e.g., sedan, SUV).  # noqa: E501

        :param car_type: The car_type of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_type = car_type

    @property
    def car_class(self):
        """Gets the car_class of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Class of the car (e.g., economy, luxury).  # noqa: E501

        :return: The car_class of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_class

    @car_class.setter
    def car_class(self, car_class):
        """Sets the car_class of this CarGetOfferAvailabilityResponse.

        Class of the car (e.g., economy, luxury).  # noqa: E501

        :param car_class: The car_class of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_class = car_class

    @property
    def car_company(self):
        """Gets the car_company of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Company owning the car or rental service.  # noqa: E501

        :return: The car_company of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_company

    @car_company.setter
    def car_company(self, car_company):
        """Sets the car_company of this CarGetOfferAvailabilityResponse.

        Company owning the car or rental service.  # noqa: E501

        :param car_company: The car_company of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_company = car_company

    @property
    def car_company_logo(self):
        """Gets the car_company_logo of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Logo of the company owning the car.  # noqa: E501

        :return: The car_company_logo of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: str
        """
        return self._car_company_logo

    @car_company_logo.setter
    def car_company_logo(self, car_company_logo):
        """Sets the car_company_logo of this CarGetOfferAvailabilityResponse.

        Logo of the company owning the car.  # noqa: E501

        :param car_company_logo: The car_company_logo of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: str
        """

        self._car_company_logo = car_company_logo

    @property
    def car_passengers_number(self):
        """Gets the car_passengers_number of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Number of passengers the car can hold.  # noqa: E501

        :return: The car_passengers_number of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._car_passengers_number

    @car_passengers_number.setter
    def car_passengers_number(self, car_passengers_number):
        """Sets the car_passengers_number of this CarGetOfferAvailabilityResponse.

        Number of passengers the car can hold.  # noqa: E501

        :param car_passengers_number: The car_passengers_number of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._car_passengers_number = car_passengers_number

    @property
    def car_bags_number(self):
        """Gets the car_bags_number of this CarGetOfferAvailabilityResponse.  # noqa: E501

        Number of bags the car can hold.  # noqa: E501

        :return: The car_bags_number of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :rtype: int
        """
        return self._car_bags_number

    @car_bags_number.setter
    def car_bags_number(self, car_bags_number):
        """Sets the car_bags_number of this CarGetOfferAvailabilityResponse.

        Number of bags the car can hold.  # noqa: E501

        :param car_bags_number: The car_bags_number of this CarGetOfferAvailabilityResponse.  # noqa: E501
        :type: int
        """

        self._car_bags_number = car_bags_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CarGetOfferAvailabilityResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CarGetOfferAvailabilityResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
