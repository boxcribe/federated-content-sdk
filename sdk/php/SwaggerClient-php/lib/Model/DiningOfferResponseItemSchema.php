<?php
/**
 * DiningOfferResponseItemSchema
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Federated Content API
 *
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * DiningOfferResponseItemSchema Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DiningOfferResponseItemSchema implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DiningOfferResponseItemSchema';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'offer_id' => 'string',
        'supplier_offer_id' => 'string',
        'offer_index' => 'float',
        'offer_tax' => 'float',
        'offer_price' => 'float',
        'offer_currency' => 'string',
        'offer_cancellation_policies' => 'string',
        'dining_name' => 'string',
        'dining_description' => 'string',
        'dining_address' => 'string',
        'dining_latitude' => 'float',
        'dining_longitude' => 'float',
        'dining_distance' => 'float',
        'dining_distance_metric' => 'string',
        'dining_images' => 'string[]',
        'dining_rating' => 'float',
        'dining_reviews' => 'string[]',
        'dining_subcategories' => 'string[]',
        'dining_hours' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'offer_id' => 'uuid',
        'supplier_offer_id' => 'uuid',
        'offer_index' => 'integer',
        'offer_tax' => 'decimal',
        'offer_price' => 'decimal',
        'offer_currency' => null,
        'offer_cancellation_policies' => null,
        'dining_name' => null,
        'dining_description' => null,
        'dining_address' => null,
        'dining_latitude' => 'float',
        'dining_longitude' => 'float',
        'dining_distance' => 'float',
        'dining_distance_metric' => null,
        'dining_images' => null,
        'dining_rating' => 'float',
        'dining_reviews' => null,
        'dining_subcategories' => null,
        'dining_hours' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'offer_id' => 'offer_id',
        'supplier_offer_id' => 'supplier_offer_id',
        'offer_index' => 'offer_index',
        'offer_tax' => 'offer_tax',
        'offer_price' => 'offer_price',
        'offer_currency' => 'offer_currency',
        'offer_cancellation_policies' => 'offer_cancellation_policies',
        'dining_name' => 'dining_name',
        'dining_description' => 'dining_description',
        'dining_address' => 'dining_address',
        'dining_latitude' => 'dining_latitude',
        'dining_longitude' => 'dining_longitude',
        'dining_distance' => 'dining_distance',
        'dining_distance_metric' => 'dining_distance_metric',
        'dining_images' => 'dining_images',
        'dining_rating' => 'dining_rating',
        'dining_reviews' => 'dining_reviews',
        'dining_subcategories' => 'dining_subcategories',
        'dining_hours' => 'dining_hours'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'offer_id' => 'setOfferId',
        'supplier_offer_id' => 'setSupplierOfferId',
        'offer_index' => 'setOfferIndex',
        'offer_tax' => 'setOfferTax',
        'offer_price' => 'setOfferPrice',
        'offer_currency' => 'setOfferCurrency',
        'offer_cancellation_policies' => 'setOfferCancellationPolicies',
        'dining_name' => 'setDiningName',
        'dining_description' => 'setDiningDescription',
        'dining_address' => 'setDiningAddress',
        'dining_latitude' => 'setDiningLatitude',
        'dining_longitude' => 'setDiningLongitude',
        'dining_distance' => 'setDiningDistance',
        'dining_distance_metric' => 'setDiningDistanceMetric',
        'dining_images' => 'setDiningImages',
        'dining_rating' => 'setDiningRating',
        'dining_reviews' => 'setDiningReviews',
        'dining_subcategories' => 'setDiningSubcategories',
        'dining_hours' => 'setDiningHours'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'offer_id' => 'getOfferId',
        'supplier_offer_id' => 'getSupplierOfferId',
        'offer_index' => 'getOfferIndex',
        'offer_tax' => 'getOfferTax',
        'offer_price' => 'getOfferPrice',
        'offer_currency' => 'getOfferCurrency',
        'offer_cancellation_policies' => 'getOfferCancellationPolicies',
        'dining_name' => 'getDiningName',
        'dining_description' => 'getDiningDescription',
        'dining_address' => 'getDiningAddress',
        'dining_latitude' => 'getDiningLatitude',
        'dining_longitude' => 'getDiningLongitude',
        'dining_distance' => 'getDiningDistance',
        'dining_distance_metric' => 'getDiningDistanceMetric',
        'dining_images' => 'getDiningImages',
        'dining_rating' => 'getDiningRating',
        'dining_reviews' => 'getDiningReviews',
        'dining_subcategories' => 'getDiningSubcategories',
        'dining_hours' => 'getDiningHours'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['offer_id'] = isset($data['offer_id']) ? $data['offer_id'] : null;
        $this->container['supplier_offer_id'] = isset($data['supplier_offer_id']) ? $data['supplier_offer_id'] : null;
        $this->container['offer_index'] = isset($data['offer_index']) ? $data['offer_index'] : null;
        $this->container['offer_tax'] = isset($data['offer_tax']) ? $data['offer_tax'] : null;
        $this->container['offer_price'] = isset($data['offer_price']) ? $data['offer_price'] : null;
        $this->container['offer_currency'] = isset($data['offer_currency']) ? $data['offer_currency'] : null;
        $this->container['offer_cancellation_policies'] = isset($data['offer_cancellation_policies']) ? $data['offer_cancellation_policies'] : null;
        $this->container['dining_name'] = isset($data['dining_name']) ? $data['dining_name'] : null;
        $this->container['dining_description'] = isset($data['dining_description']) ? $data['dining_description'] : null;
        $this->container['dining_address'] = isset($data['dining_address']) ? $data['dining_address'] : null;
        $this->container['dining_latitude'] = isset($data['dining_latitude']) ? $data['dining_latitude'] : null;
        $this->container['dining_longitude'] = isset($data['dining_longitude']) ? $data['dining_longitude'] : null;
        $this->container['dining_distance'] = isset($data['dining_distance']) ? $data['dining_distance'] : null;
        $this->container['dining_distance_metric'] = isset($data['dining_distance_metric']) ? $data['dining_distance_metric'] : null;
        $this->container['dining_images'] = isset($data['dining_images']) ? $data['dining_images'] : null;
        $this->container['dining_rating'] = isset($data['dining_rating']) ? $data['dining_rating'] : null;
        $this->container['dining_reviews'] = isset($data['dining_reviews']) ? $data['dining_reviews'] : null;
        $this->container['dining_subcategories'] = isset($data['dining_subcategories']) ? $data['dining_subcategories'] : null;
        $this->container['dining_hours'] = isset($data['dining_hours']) ? $data['dining_hours'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets offer_id
     *
     * @return string
     */
    public function getOfferId()
    {
        return $this->container['offer_id'];
    }

    /**
     * Sets offer_id
     *
     * @param string $offer_id Unique identifier for the dining offer.
     *
     * @return $this
     */
    public function setOfferId($offer_id)
    {
        $this->container['offer_id'] = $offer_id;

        return $this;
    }

    /**
     * Gets supplier_offer_id
     *
     * @return string
     */
    public function getSupplierOfferId()
    {
        return $this->container['supplier_offer_id'];
    }

    /**
     * Sets supplier_offer_id
     *
     * @param string $supplier_offer_id Identifier for the offer provided by the supplier.
     *
     * @return $this
     */
    public function setSupplierOfferId($supplier_offer_id)
    {
        $this->container['supplier_offer_id'] = $supplier_offer_id;

        return $this;
    }

    /**
     * Gets offer_index
     *
     * @return float
     */
    public function getOfferIndex()
    {
        return $this->container['offer_index'];
    }

    /**
     * Sets offer_index
     *
     * @param float $offer_index Index of the offer for sorting and reference.
     *
     * @return $this
     */
    public function setOfferIndex($offer_index)
    {
        $this->container['offer_index'] = $offer_index;

        return $this;
    }

    /**
     * Gets offer_tax
     *
     * @return float
     */
    public function getOfferTax()
    {
        return $this->container['offer_tax'];
    }

    /**
     * Sets offer_tax
     *
     * @param float $offer_tax Tax applied to the dining offer.
     *
     * @return $this
     */
    public function setOfferTax($offer_tax)
    {
        $this->container['offer_tax'] = $offer_tax;

        return $this;
    }

    /**
     * Gets offer_price
     *
     * @return float
     */
    public function getOfferPrice()
    {
        return $this->container['offer_price'];
    }

    /**
     * Sets offer_price
     *
     * @param float $offer_price Price of the dining experience.
     *
     * @return $this
     */
    public function setOfferPrice($offer_price)
    {
        $this->container['offer_price'] = $offer_price;

        return $this;
    }

    /**
     * Gets offer_currency
     *
     * @return string
     */
    public function getOfferCurrency()
    {
        return $this->container['offer_currency'];
    }

    /**
     * Sets offer_currency
     *
     * @param string $offer_currency Currency in which the offer is priced.
     *
     * @return $this
     */
    public function setOfferCurrency($offer_currency)
    {
        $this->container['offer_currency'] = $offer_currency;

        return $this;
    }

    /**
     * Gets offer_cancellation_policies
     *
     * @return string
     */
    public function getOfferCancellationPolicies()
    {
        return $this->container['offer_cancellation_policies'];
    }

    /**
     * Sets offer_cancellation_policies
     *
     * @param string $offer_cancellation_policies Cancellation policies applicable to the dining offer.
     *
     * @return $this
     */
    public function setOfferCancellationPolicies($offer_cancellation_policies)
    {
        $this->container['offer_cancellation_policies'] = $offer_cancellation_policies;

        return $this;
    }

    /**
     * Gets dining_name
     *
     * @return string
     */
    public function getDiningName()
    {
        return $this->container['dining_name'];
    }

    /**
     * Sets dining_name
     *
     * @param string $dining_name Name of the dining establishment.
     *
     * @return $this
     */
    public function setDiningName($dining_name)
    {
        $this->container['dining_name'] = $dining_name;

        return $this;
    }

    /**
     * Gets dining_description
     *
     * @return string
     */
    public function getDiningDescription()
    {
        return $this->container['dining_description'];
    }

    /**
     * Sets dining_description
     *
     * @param string $dining_description Description of the dining establishment and the dining experience.
     *
     * @return $this
     */
    public function setDiningDescription($dining_description)
    {
        $this->container['dining_description'] = $dining_description;

        return $this;
    }

    /**
     * Gets dining_address
     *
     * @return string
     */
    public function getDiningAddress()
    {
        return $this->container['dining_address'];
    }

    /**
     * Sets dining_address
     *
     * @param string $dining_address Physical address of the dining establishment.
     *
     * @return $this
     */
    public function setDiningAddress($dining_address)
    {
        $this->container['dining_address'] = $dining_address;

        return $this;
    }

    /**
     * Gets dining_latitude
     *
     * @return float
     */
    public function getDiningLatitude()
    {
        return $this->container['dining_latitude'];
    }

    /**
     * Sets dining_latitude
     *
     * @param float $dining_latitude Latitude coordinate of the dining location.
     *
     * @return $this
     */
    public function setDiningLatitude($dining_latitude)
    {
        $this->container['dining_latitude'] = $dining_latitude;

        return $this;
    }

    /**
     * Gets dining_longitude
     *
     * @return float
     */
    public function getDiningLongitude()
    {
        return $this->container['dining_longitude'];
    }

    /**
     * Sets dining_longitude
     *
     * @param float $dining_longitude Longitude coordinate of the dining location.
     *
     * @return $this
     */
    public function setDiningLongitude($dining_longitude)
    {
        $this->container['dining_longitude'] = $dining_longitude;

        return $this;
    }

    /**
     * Gets dining_distance
     *
     * @return float
     */
    public function getDiningDistance()
    {
        return $this->container['dining_distance'];
    }

    /**
     * Sets dining_distance
     *
     * @param float $dining_distance Distance to the dining location from a reference point, if applicable.
     *
     * @return $this
     */
    public function setDiningDistance($dining_distance)
    {
        $this->container['dining_distance'] = $dining_distance;

        return $this;
    }

    /**
     * Gets dining_distance_metric
     *
     * @return string
     */
    public function getDiningDistanceMetric()
    {
        return $this->container['dining_distance_metric'];
    }

    /**
     * Sets dining_distance_metric
     *
     * @param string $dining_distance_metric Metric used to measure the distance (e.g., miles, kilometers).
     *
     * @return $this
     */
    public function setDiningDistanceMetric($dining_distance_metric)
    {
        $this->container['dining_distance_metric'] = $dining_distance_metric;

        return $this;
    }

    /**
     * Gets dining_images
     *
     * @return string[]
     */
    public function getDiningImages()
    {
        return $this->container['dining_images'];
    }

    /**
     * Sets dining_images
     *
     * @param string[] $dining_images Collection of images of the dining establishment and dishes.
     *
     * @return $this
     */
    public function setDiningImages($dining_images)
    {
        $this->container['dining_images'] = $dining_images;

        return $this;
    }

    /**
     * Gets dining_rating
     *
     * @return float
     */
    public function getDiningRating()
    {
        return $this->container['dining_rating'];
    }

    /**
     * Sets dining_rating
     *
     * @param float $dining_rating Rating of the dining establishment based on customer reviews.
     *
     * @return $this
     */
    public function setDiningRating($dining_rating)
    {
        $this->container['dining_rating'] = $dining_rating;

        return $this;
    }

    /**
     * Gets dining_reviews
     *
     * @return string[]
     */
    public function getDiningReviews()
    {
        return $this->container['dining_reviews'];
    }

    /**
     * Sets dining_reviews
     *
     * @param string[] $dining_reviews Customer reviews for the dining establishment.
     *
     * @return $this
     */
    public function setDiningReviews($dining_reviews)
    {
        $this->container['dining_reviews'] = $dining_reviews;

        return $this;
    }

    /**
     * Gets dining_subcategories
     *
     * @return string[]
     */
    public function getDiningSubcategories()
    {
        return $this->container['dining_subcategories'];
    }

    /**
     * Sets dining_subcategories
     *
     * @param string[] $dining_subcategories List of subcategories the dining offer belongs to (e.g., Italian, Seafood, Fine Dining).
     *
     * @return $this
     */
    public function setDiningSubcategories($dining_subcategories)
    {
        $this->container['dining_subcategories'] = $dining_subcategories;

        return $this;
    }

    /**
     * Gets dining_hours
     *
     * @return string[]
     */
    public function getDiningHours()
    {
        return $this->container['dining_hours'];
    }

    /**
     * Sets dining_hours
     *
     * @param string[] $dining_hours Operating hours of the dining establishment.
     *
     * @return $this
     */
    public function setDiningHours($dining_hours)
    {
        $this->container['dining_hours'] = $dining_hours;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
