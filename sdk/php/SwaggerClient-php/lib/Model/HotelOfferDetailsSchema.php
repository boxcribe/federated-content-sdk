<?php
/**
 * HotelOfferDetailsSchema
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Federated Content API
 *
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * HotelOfferDetailsSchema Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HotelOfferDetailsSchema implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'HotelOfferDetailsSchema';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'offer_id' => 'string',
        'supplier_offer_id' => 'string',
        'offer_index' => 'int',
        'offer_tax' => 'double',
        'offer_price' => 'double',
        'offer_currency' => 'string',
        'offer_cancellation_policies' => 'object',
        'checkin_date' => '\DateTime',
        'checkout_date' => '\DateTime',
        'hotel_name' => 'string',
        'hotel_description' => 'string',
        'hotel_address' => 'string',
        'hotel_latitude' => 'float',
        'hotel_longitude' => 'float',
        'hotel_distance' => 'double',
        'hotel_distance_metric' => 'string',
        'hotel_images' => 'string[]',
        'hotel_rating' => 'float',
        'hotel_reviews' => 'object',
        'hotel_stars' => 'int',
        'hotel_checkin_time' => 'string',
        'hotel_checkout_time' => 'string',
        'hotel_facilities' => 'string[]',
        'hotel_amenities' => 'string[]',
        'hotel_policies' => 'string[]',
        'rooms' => '\Swagger\Client\Model\HotelRoomSchema[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'offer_id' => 'uuid',
        'supplier_offer_id' => 'uuid',
        'offer_index' => null,
        'offer_tax' => 'double',
        'offer_price' => 'double',
        'offer_currency' => null,
        'offer_cancellation_policies' => null,
        'checkin_date' => 'date',
        'checkout_date' => 'date',
        'hotel_name' => null,
        'hotel_description' => null,
        'hotel_address' => null,
        'hotel_latitude' => 'float',
        'hotel_longitude' => 'float',
        'hotel_distance' => 'double',
        'hotel_distance_metric' => null,
        'hotel_images' => null,
        'hotel_rating' => 'float',
        'hotel_reviews' => null,
        'hotel_stars' => null,
        'hotel_checkin_time' => 'time',
        'hotel_checkout_time' => 'time',
        'hotel_facilities' => null,
        'hotel_amenities' => null,
        'hotel_policies' => null,
        'rooms' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'offer_id' => 'offer_id',
        'supplier_offer_id' => 'supplier_offer_id',
        'offer_index' => 'offer_index',
        'offer_tax' => 'offer_tax',
        'offer_price' => 'offer_price',
        'offer_currency' => 'offer_currency',
        'offer_cancellation_policies' => 'offer_cancellation_policies',
        'checkin_date' => 'checkin_date',
        'checkout_date' => 'checkout_date',
        'hotel_name' => 'hotel_name',
        'hotel_description' => 'hotel_description',
        'hotel_address' => 'hotel_address',
        'hotel_latitude' => 'hotel_latitude',
        'hotel_longitude' => 'hotel_longitude',
        'hotel_distance' => 'hotel_distance',
        'hotel_distance_metric' => 'hotel_distance_metric',
        'hotel_images' => 'hotel_images',
        'hotel_rating' => 'hotel_rating',
        'hotel_reviews' => 'hotel_reviews',
        'hotel_stars' => 'hotel_stars',
        'hotel_checkin_time' => 'hotel_checkin_time',
        'hotel_checkout_time' => 'hotel_checkout_time',
        'hotel_facilities' => 'hotel_facilities',
        'hotel_amenities' => 'hotel_amenities',
        'hotel_policies' => 'hotel_policies',
        'rooms' => 'rooms'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'offer_id' => 'setOfferId',
        'supplier_offer_id' => 'setSupplierOfferId',
        'offer_index' => 'setOfferIndex',
        'offer_tax' => 'setOfferTax',
        'offer_price' => 'setOfferPrice',
        'offer_currency' => 'setOfferCurrency',
        'offer_cancellation_policies' => 'setOfferCancellationPolicies',
        'checkin_date' => 'setCheckinDate',
        'checkout_date' => 'setCheckoutDate',
        'hotel_name' => 'setHotelName',
        'hotel_description' => 'setHotelDescription',
        'hotel_address' => 'setHotelAddress',
        'hotel_latitude' => 'setHotelLatitude',
        'hotel_longitude' => 'setHotelLongitude',
        'hotel_distance' => 'setHotelDistance',
        'hotel_distance_metric' => 'setHotelDistanceMetric',
        'hotel_images' => 'setHotelImages',
        'hotel_rating' => 'setHotelRating',
        'hotel_reviews' => 'setHotelReviews',
        'hotel_stars' => 'setHotelStars',
        'hotel_checkin_time' => 'setHotelCheckinTime',
        'hotel_checkout_time' => 'setHotelCheckoutTime',
        'hotel_facilities' => 'setHotelFacilities',
        'hotel_amenities' => 'setHotelAmenities',
        'hotel_policies' => 'setHotelPolicies',
        'rooms' => 'setRooms'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'offer_id' => 'getOfferId',
        'supplier_offer_id' => 'getSupplierOfferId',
        'offer_index' => 'getOfferIndex',
        'offer_tax' => 'getOfferTax',
        'offer_price' => 'getOfferPrice',
        'offer_currency' => 'getOfferCurrency',
        'offer_cancellation_policies' => 'getOfferCancellationPolicies',
        'checkin_date' => 'getCheckinDate',
        'checkout_date' => 'getCheckoutDate',
        'hotel_name' => 'getHotelName',
        'hotel_description' => 'getHotelDescription',
        'hotel_address' => 'getHotelAddress',
        'hotel_latitude' => 'getHotelLatitude',
        'hotel_longitude' => 'getHotelLongitude',
        'hotel_distance' => 'getHotelDistance',
        'hotel_distance_metric' => 'getHotelDistanceMetric',
        'hotel_images' => 'getHotelImages',
        'hotel_rating' => 'getHotelRating',
        'hotel_reviews' => 'getHotelReviews',
        'hotel_stars' => 'getHotelStars',
        'hotel_checkin_time' => 'getHotelCheckinTime',
        'hotel_checkout_time' => 'getHotelCheckoutTime',
        'hotel_facilities' => 'getHotelFacilities',
        'hotel_amenities' => 'getHotelAmenities',
        'hotel_policies' => 'getHotelPolicies',
        'rooms' => 'getRooms'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['offer_id'] = isset($data['offer_id']) ? $data['offer_id'] : null;
        $this->container['supplier_offer_id'] = isset($data['supplier_offer_id']) ? $data['supplier_offer_id'] : null;
        $this->container['offer_index'] = isset($data['offer_index']) ? $data['offer_index'] : null;
        $this->container['offer_tax'] = isset($data['offer_tax']) ? $data['offer_tax'] : null;
        $this->container['offer_price'] = isset($data['offer_price']) ? $data['offer_price'] : null;
        $this->container['offer_currency'] = isset($data['offer_currency']) ? $data['offer_currency'] : null;
        $this->container['offer_cancellation_policies'] = isset($data['offer_cancellation_policies']) ? $data['offer_cancellation_policies'] : null;
        $this->container['checkin_date'] = isset($data['checkin_date']) ? $data['checkin_date'] : null;
        $this->container['checkout_date'] = isset($data['checkout_date']) ? $data['checkout_date'] : null;
        $this->container['hotel_name'] = isset($data['hotel_name']) ? $data['hotel_name'] : null;
        $this->container['hotel_description'] = isset($data['hotel_description']) ? $data['hotel_description'] : null;
        $this->container['hotel_address'] = isset($data['hotel_address']) ? $data['hotel_address'] : null;
        $this->container['hotel_latitude'] = isset($data['hotel_latitude']) ? $data['hotel_latitude'] : null;
        $this->container['hotel_longitude'] = isset($data['hotel_longitude']) ? $data['hotel_longitude'] : null;
        $this->container['hotel_distance'] = isset($data['hotel_distance']) ? $data['hotel_distance'] : null;
        $this->container['hotel_distance_metric'] = isset($data['hotel_distance_metric']) ? $data['hotel_distance_metric'] : null;
        $this->container['hotel_images'] = isset($data['hotel_images']) ? $data['hotel_images'] : null;
        $this->container['hotel_rating'] = isset($data['hotel_rating']) ? $data['hotel_rating'] : null;
        $this->container['hotel_reviews'] = isset($data['hotel_reviews']) ? $data['hotel_reviews'] : null;
        $this->container['hotel_stars'] = isset($data['hotel_stars']) ? $data['hotel_stars'] : null;
        $this->container['hotel_checkin_time'] = isset($data['hotel_checkin_time']) ? $data['hotel_checkin_time'] : null;
        $this->container['hotel_checkout_time'] = isset($data['hotel_checkout_time']) ? $data['hotel_checkout_time'] : null;
        $this->container['hotel_facilities'] = isset($data['hotel_facilities']) ? $data['hotel_facilities'] : null;
        $this->container['hotel_amenities'] = isset($data['hotel_amenities']) ? $data['hotel_amenities'] : null;
        $this->container['hotel_policies'] = isset($data['hotel_policies']) ? $data['hotel_policies'] : null;
        $this->container['rooms'] = isset($data['rooms']) ? $data['rooms'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets offer_id
     *
     * @return string
     */
    public function getOfferId()
    {
        return $this->container['offer_id'];
    }

    /**
     * Sets offer_id
     *
     * @param string $offer_id Unique identifier for the hotel offer.
     *
     * @return $this
     */
    public function setOfferId($offer_id)
    {
        $this->container['offer_id'] = $offer_id;

        return $this;
    }

    /**
     * Gets supplier_offer_id
     *
     * @return string
     */
    public function getSupplierOfferId()
    {
        return $this->container['supplier_offer_id'];
    }

    /**
     * Sets supplier_offer_id
     *
     * @param string $supplier_offer_id Unique identifier given by the supplier for the hotel offer.
     *
     * @return $this
     */
    public function setSupplierOfferId($supplier_offer_id)
    {
        $this->container['supplier_offer_id'] = $supplier_offer_id;

        return $this;
    }

    /**
     * Gets offer_index
     *
     * @return int
     */
    public function getOfferIndex()
    {
        return $this->container['offer_index'];
    }

    /**
     * Sets offer_index
     *
     * @param int $offer_index Index number of the offer for sorting and referencing purposes.
     *
     * @return $this
     */
    public function setOfferIndex($offer_index)
    {
        $this->container['offer_index'] = $offer_index;

        return $this;
    }

    /**
     * Gets offer_tax
     *
     * @return double
     */
    public function getOfferTax()
    {
        return $this->container['offer_tax'];
    }

    /**
     * Sets offer_tax
     *
     * @param double $offer_tax Applicable tax amount for the offer.
     *
     * @return $this
     */
    public function setOfferTax($offer_tax)
    {
        $this->container['offer_tax'] = $offer_tax;

        return $this;
    }

    /**
     * Gets offer_price
     *
     * @return double
     */
    public function getOfferPrice()
    {
        return $this->container['offer_price'];
    }

    /**
     * Sets offer_price
     *
     * @param double $offer_price Total price of the hotel offer.
     *
     * @return $this
     */
    public function setOfferPrice($offer_price)
    {
        $this->container['offer_price'] = $offer_price;

        return $this;
    }

    /**
     * Gets offer_currency
     *
     * @return string
     */
    public function getOfferCurrency()
    {
        return $this->container['offer_currency'];
    }

    /**
     * Sets offer_currency
     *
     * @param string $offer_currency Currency in which the offer price is denominated.
     *
     * @return $this
     */
    public function setOfferCurrency($offer_currency)
    {
        $this->container['offer_currency'] = $offer_currency;

        return $this;
    }

    /**
     * Gets offer_cancellation_policies
     *
     * @return object
     */
    public function getOfferCancellationPolicies()
    {
        return $this->container['offer_cancellation_policies'];
    }

    /**
     * Sets offer_cancellation_policies
     *
     * @param object $offer_cancellation_policies Details of the cancellation policies applicable to the offer.
     *
     * @return $this
     */
    public function setOfferCancellationPolicies($offer_cancellation_policies)
    {
        $this->container['offer_cancellation_policies'] = $offer_cancellation_policies;

        return $this;
    }

    /**
     * Gets checkin_date
     *
     * @return \DateTime
     */
    public function getCheckinDate()
    {
        return $this->container['checkin_date'];
    }

    /**
     * Sets checkin_date
     *
     * @param \DateTime $checkin_date Scheduled check-in date for the hotel stay.
     *
     * @return $this
     */
    public function setCheckinDate($checkin_date)
    {
        $this->container['checkin_date'] = $checkin_date;

        return $this;
    }

    /**
     * Gets checkout_date
     *
     * @return \DateTime
     */
    public function getCheckoutDate()
    {
        return $this->container['checkout_date'];
    }

    /**
     * Sets checkout_date
     *
     * @param \DateTime $checkout_date Scheduled check-out date for the hotel stay.
     *
     * @return $this
     */
    public function setCheckoutDate($checkout_date)
    {
        $this->container['checkout_date'] = $checkout_date;

        return $this;
    }

    /**
     * Gets hotel_name
     *
     * @return string
     */
    public function getHotelName()
    {
        return $this->container['hotel_name'];
    }

    /**
     * Sets hotel_name
     *
     * @param string $hotel_name Name of the hotel.
     *
     * @return $this
     */
    public function setHotelName($hotel_name)
    {
        $this->container['hotel_name'] = $hotel_name;

        return $this;
    }

    /**
     * Gets hotel_description
     *
     * @return string
     */
    public function getHotelDescription()
    {
        return $this->container['hotel_description'];
    }

    /**
     * Sets hotel_description
     *
     * @param string $hotel_description Description of the hotel.
     *
     * @return $this
     */
    public function setHotelDescription($hotel_description)
    {
        $this->container['hotel_description'] = $hotel_description;

        return $this;
    }

    /**
     * Gets hotel_address
     *
     * @return string
     */
    public function getHotelAddress()
    {
        return $this->container['hotel_address'];
    }

    /**
     * Sets hotel_address
     *
     * @param string $hotel_address Physical address of the hotel.
     *
     * @return $this
     */
    public function setHotelAddress($hotel_address)
    {
        $this->container['hotel_address'] = $hotel_address;

        return $this;
    }

    /**
     * Gets hotel_latitude
     *
     * @return float
     */
    public function getHotelLatitude()
    {
        return $this->container['hotel_latitude'];
    }

    /**
     * Sets hotel_latitude
     *
     * @param float $hotel_latitude Geographic latitude of the hotel.
     *
     * @return $this
     */
    public function setHotelLatitude($hotel_latitude)
    {
        $this->container['hotel_latitude'] = $hotel_latitude;

        return $this;
    }

    /**
     * Gets hotel_longitude
     *
     * @return float
     */
    public function getHotelLongitude()
    {
        return $this->container['hotel_longitude'];
    }

    /**
     * Sets hotel_longitude
     *
     * @param float $hotel_longitude Geographic longitude of the hotel.
     *
     * @return $this
     */
    public function setHotelLongitude($hotel_longitude)
    {
        $this->container['hotel_longitude'] = $hotel_longitude;

        return $this;
    }

    /**
     * Gets hotel_distance
     *
     * @return double
     */
    public function getHotelDistance()
    {
        return $this->container['hotel_distance'];
    }

    /**
     * Sets hotel_distance
     *
     * @param double $hotel_distance Distance of the hotel from a central point of interest, if applicable.
     *
     * @return $this
     */
    public function setHotelDistance($hotel_distance)
    {
        $this->container['hotel_distance'] = $hotel_distance;

        return $this;
    }

    /**
     * Gets hotel_distance_metric
     *
     * @return string
     */
    public function getHotelDistanceMetric()
    {
        return $this->container['hotel_distance_metric'];
    }

    /**
     * Sets hotel_distance_metric
     *
     * @param string $hotel_distance_metric Unit of measurement for the distance (e.g., km, miles).
     *
     * @return $this
     */
    public function setHotelDistanceMetric($hotel_distance_metric)
    {
        $this->container['hotel_distance_metric'] = $hotel_distance_metric;

        return $this;
    }

    /**
     * Gets hotel_images
     *
     * @return string[]
     */
    public function getHotelImages()
    {
        return $this->container['hotel_images'];
    }

    /**
     * Sets hotel_images
     *
     * @param string[] $hotel_images Array of images associated with the hotel.
     *
     * @return $this
     */
    public function setHotelImages($hotel_images)
    {
        $this->container['hotel_images'] = $hotel_images;

        return $this;
    }

    /**
     * Gets hotel_rating
     *
     * @return float
     */
    public function getHotelRating()
    {
        return $this->container['hotel_rating'];
    }

    /**
     * Sets hotel_rating
     *
     * @param float $hotel_rating Overall rating of the hotel.
     *
     * @return $this
     */
    public function setHotelRating($hotel_rating)
    {
        $this->container['hotel_rating'] = $hotel_rating;

        return $this;
    }

    /**
     * Gets hotel_reviews
     *
     * @return object
     */
    public function getHotelReviews()
    {
        return $this->container['hotel_reviews'];
    }

    /**
     * Sets hotel_reviews
     *
     * @param object $hotel_reviews Collection of reviews for the hotel.
     *
     * @return $this
     */
    public function setHotelReviews($hotel_reviews)
    {
        $this->container['hotel_reviews'] = $hotel_reviews;

        return $this;
    }

    /**
     * Gets hotel_stars
     *
     * @return int
     */
    public function getHotelStars()
    {
        return $this->container['hotel_stars'];
    }

    /**
     * Sets hotel_stars
     *
     * @param int $hotel_stars Star rating of the hotel.
     *
     * @return $this
     */
    public function setHotelStars($hotel_stars)
    {
        $this->container['hotel_stars'] = $hotel_stars;

        return $this;
    }

    /**
     * Gets hotel_checkin_time
     *
     * @return string
     */
    public function getHotelCheckinTime()
    {
        return $this->container['hotel_checkin_time'];
    }

    /**
     * Sets hotel_checkin_time
     *
     * @param string $hotel_checkin_time Standard check-in time at the hotel.
     *
     * @return $this
     */
    public function setHotelCheckinTime($hotel_checkin_time)
    {
        $this->container['hotel_checkin_time'] = $hotel_checkin_time;

        return $this;
    }

    /**
     * Gets hotel_checkout_time
     *
     * @return string
     */
    public function getHotelCheckoutTime()
    {
        return $this->container['hotel_checkout_time'];
    }

    /**
     * Sets hotel_checkout_time
     *
     * @param string $hotel_checkout_time Standard check-out time at the hotel.
     *
     * @return $this
     */
    public function setHotelCheckoutTime($hotel_checkout_time)
    {
        $this->container['hotel_checkout_time'] = $hotel_checkout_time;

        return $this;
    }

    /**
     * Gets hotel_facilities
     *
     * @return string[]
     */
    public function getHotelFacilities()
    {
        return $this->container['hotel_facilities'];
    }

    /**
     * Sets hotel_facilities
     *
     * @param string[] $hotel_facilities List of facilities available at the hotel.
     *
     * @return $this
     */
    public function setHotelFacilities($hotel_facilities)
    {
        $this->container['hotel_facilities'] = $hotel_facilities;

        return $this;
    }

    /**
     * Gets hotel_amenities
     *
     * @return string[]
     */
    public function getHotelAmenities()
    {
        return $this->container['hotel_amenities'];
    }

    /**
     * Sets hotel_amenities
     *
     * @param string[] $hotel_amenities List of amenities offered by the hotel.
     *
     * @return $this
     */
    public function setHotelAmenities($hotel_amenities)
    {
        $this->container['hotel_amenities'] = $hotel_amenities;

        return $this;
    }

    /**
     * Gets hotel_policies
     *
     * @return string[]
     */
    public function getHotelPolicies()
    {
        return $this->container['hotel_policies'];
    }

    /**
     * Sets hotel_policies
     *
     * @param string[] $hotel_policies General policies of the hotel.
     *
     * @return $this
     */
    public function setHotelPolicies($hotel_policies)
    {
        $this->container['hotel_policies'] = $hotel_policies;

        return $this;
    }

    /**
     * Gets rooms
     *
     * @return \Swagger\Client\Model\HotelRoomSchema[]
     */
    public function getRooms()
    {
        return $this->container['rooms'];
    }

    /**
     * Sets rooms
     *
     * @param \Swagger\Client\Model\HotelRoomSchema[] $rooms Array of HotelRoomSchema.
     *
     * @return $this
     */
    public function setRooms($rooms)
    {
        $this->container['rooms'] = $rooms;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
