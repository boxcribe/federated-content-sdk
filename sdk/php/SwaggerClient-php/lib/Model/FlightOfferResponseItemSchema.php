<?php
/**
 * FlightOfferResponseItemSchema
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Federated Content API
 *
 * Welcome to the Federated Content API following Open API Specification (Version 3.0.0)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * FlightOfferResponseItemSchema Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FlightOfferResponseItemSchema implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FlightOfferResponseItemSchema';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'offer_id' => 'string',
        'supplier_offer_id' => 'string',
        'offer_index' => 'int',
        'offer_price' => 'double',
        'offer_currency' => 'string',
        'offer_cancelation_policies' => 'map[string,object]',
        'offer_airline_name' => 'string',
        'offer_airline_code' => 'string',
        'offer_airline_logo' => 'string',
        'legs' => '\Swagger\Client\Model\FlightLegOfferRequestSchema[]',
        'passengers' => '\Swagger\Client\Model\FlightPassengerOfferRequestSchema[]',
        'private_fare_codes' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'offer_id' => 'uuid',
        'supplier_offer_id' => 'uuid',
        'offer_index' => null,
        'offer_price' => 'double',
        'offer_currency' => null,
        'offer_cancelation_policies' => null,
        'offer_airline_name' => null,
        'offer_airline_code' => null,
        'offer_airline_logo' => null,
        'legs' => null,
        'passengers' => null,
        'private_fare_codes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'offer_id' => 'offer_id',
        'supplier_offer_id' => 'supplier_offer_id',
        'offer_index' => 'offer_index',
        'offer_price' => 'offer_price',
        'offer_currency' => 'offer_currency',
        'offer_cancelation_policies' => 'offer_cancelation_policies',
        'offer_airline_name' => 'offer_airline_name',
        'offer_airline_code' => 'offer_airline_code',
        'offer_airline_logo' => 'offer_airline_logo',
        'legs' => 'legs',
        'passengers' => 'passengers',
        'private_fare_codes' => 'private_fare_codes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'offer_id' => 'setOfferId',
        'supplier_offer_id' => 'setSupplierOfferId',
        'offer_index' => 'setOfferIndex',
        'offer_price' => 'setOfferPrice',
        'offer_currency' => 'setOfferCurrency',
        'offer_cancelation_policies' => 'setOfferCancelationPolicies',
        'offer_airline_name' => 'setOfferAirlineName',
        'offer_airline_code' => 'setOfferAirlineCode',
        'offer_airline_logo' => 'setOfferAirlineLogo',
        'legs' => 'setLegs',
        'passengers' => 'setPassengers',
        'private_fare_codes' => 'setPrivateFareCodes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'offer_id' => 'getOfferId',
        'supplier_offer_id' => 'getSupplierOfferId',
        'offer_index' => 'getOfferIndex',
        'offer_price' => 'getOfferPrice',
        'offer_currency' => 'getOfferCurrency',
        'offer_cancelation_policies' => 'getOfferCancelationPolicies',
        'offer_airline_name' => 'getOfferAirlineName',
        'offer_airline_code' => 'getOfferAirlineCode',
        'offer_airline_logo' => 'getOfferAirlineLogo',
        'legs' => 'getLegs',
        'passengers' => 'getPassengers',
        'private_fare_codes' => 'getPrivateFareCodes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['offer_id'] = isset($data['offer_id']) ? $data['offer_id'] : null;
        $this->container['supplier_offer_id'] = isset($data['supplier_offer_id']) ? $data['supplier_offer_id'] : null;
        $this->container['offer_index'] = isset($data['offer_index']) ? $data['offer_index'] : null;
        $this->container['offer_price'] = isset($data['offer_price']) ? $data['offer_price'] : null;
        $this->container['offer_currency'] = isset($data['offer_currency']) ? $data['offer_currency'] : null;
        $this->container['offer_cancelation_policies'] = isset($data['offer_cancelation_policies']) ? $data['offer_cancelation_policies'] : null;
        $this->container['offer_airline_name'] = isset($data['offer_airline_name']) ? $data['offer_airline_name'] : null;
        $this->container['offer_airline_code'] = isset($data['offer_airline_code']) ? $data['offer_airline_code'] : null;
        $this->container['offer_airline_logo'] = isset($data['offer_airline_logo']) ? $data['offer_airline_logo'] : null;
        $this->container['legs'] = isset($data['legs']) ? $data['legs'] : null;
        $this->container['passengers'] = isset($data['passengers']) ? $data['passengers'] : null;
        $this->container['private_fare_codes'] = isset($data['private_fare_codes']) ? $data['private_fare_codes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets offer_id
     *
     * @return string
     */
    public function getOfferId()
    {
        return $this->container['offer_id'];
    }

    /**
     * Sets offer_id
     *
     * @param string $offer_id Unique identifier for the offer.
     *
     * @return $this
     */
    public function setOfferId($offer_id)
    {
        $this->container['offer_id'] = $offer_id;

        return $this;
    }

    /**
     * Gets supplier_offer_id
     *
     * @return string
     */
    public function getSupplierOfferId()
    {
        return $this->container['supplier_offer_id'];
    }

    /**
     * Sets supplier_offer_id
     *
     * @param string $supplier_offer_id Unique identifier for the supplierâ€™s offer.
     *
     * @return $this
     */
    public function setSupplierOfferId($supplier_offer_id)
    {
        $this->container['supplier_offer_id'] = $supplier_offer_id;

        return $this;
    }

    /**
     * Gets offer_index
     *
     * @return int
     */
    public function getOfferIndex()
    {
        return $this->container['offer_index'];
    }

    /**
     * Sets offer_index
     *
     * @param int $offer_index Index of the offer for sorting purposes.
     *
     * @return $this
     */
    public function setOfferIndex($offer_index)
    {
        $this->container['offer_index'] = $offer_index;

        return $this;
    }

    /**
     * Gets offer_price
     *
     * @return double
     */
    public function getOfferPrice()
    {
        return $this->container['offer_price'];
    }

    /**
     * Sets offer_price
     *
     * @param double $offer_price Price of the offer.
     *
     * @return $this
     */
    public function setOfferPrice($offer_price)
    {
        $this->container['offer_price'] = $offer_price;

        return $this;
    }

    /**
     * Gets offer_currency
     *
     * @return string
     */
    public function getOfferCurrency()
    {
        return $this->container['offer_currency'];
    }

    /**
     * Sets offer_currency
     *
     * @param string $offer_currency Currency of the offer price.
     *
     * @return $this
     */
    public function setOfferCurrency($offer_currency)
    {
        $this->container['offer_currency'] = $offer_currency;

        return $this;
    }

    /**
     * Gets offer_cancelation_policies
     *
     * @return map[string,object]
     */
    public function getOfferCancelationPolicies()
    {
        return $this->container['offer_cancelation_policies'];
    }

    /**
     * Sets offer_cancelation_policies
     *
     * @param map[string,object] $offer_cancelation_policies Cancellation policies applicable to the offer.
     *
     * @return $this
     */
    public function setOfferCancelationPolicies($offer_cancelation_policies)
    {
        $this->container['offer_cancelation_policies'] = $offer_cancelation_policies;

        return $this;
    }

    /**
     * Gets offer_airline_name
     *
     * @return string
     */
    public function getOfferAirlineName()
    {
        return $this->container['offer_airline_name'];
    }

    /**
     * Sets offer_airline_name
     *
     * @param string $offer_airline_name Name of the airline providing the offer.
     *
     * @return $this
     */
    public function setOfferAirlineName($offer_airline_name)
    {
        $this->container['offer_airline_name'] = $offer_airline_name;

        return $this;
    }

    /**
     * Gets offer_airline_code
     *
     * @return string
     */
    public function getOfferAirlineCode()
    {
        return $this->container['offer_airline_code'];
    }

    /**
     * Sets offer_airline_code
     *
     * @param string $offer_airline_code Code of the airline providing the offer.
     *
     * @return $this
     */
    public function setOfferAirlineCode($offer_airline_code)
    {
        $this->container['offer_airline_code'] = $offer_airline_code;

        return $this;
    }

    /**
     * Gets offer_airline_logo
     *
     * @return string
     */
    public function getOfferAirlineLogo()
    {
        return $this->container['offer_airline_logo'];
    }

    /**
     * Sets offer_airline_logo
     *
     * @param string $offer_airline_logo Logo URL of the airline.
     *
     * @return $this
     */
    public function setOfferAirlineLogo($offer_airline_logo)
    {
        $this->container['offer_airline_logo'] = $offer_airline_logo;

        return $this;
    }

    /**
     * Gets legs
     *
     * @return \Swagger\Client\Model\FlightLegOfferRequestSchema[]
     */
    public function getLegs()
    {
        return $this->container['legs'];
    }

    /**
     * Sets legs
     *
     * @param \Swagger\Client\Model\FlightLegOfferRequestSchema[] $legs Array of flight legs, each described in FlightLegOfferRequestSchema.
     *
     * @return $this
     */
    public function setLegs($legs)
    {
        $this->container['legs'] = $legs;

        return $this;
    }

    /**
     * Gets passengers
     *
     * @return \Swagger\Client\Model\FlightPassengerOfferRequestSchema[]
     */
    public function getPassengers()
    {
        return $this->container['passengers'];
    }

    /**
     * Sets passengers
     *
     * @param \Swagger\Client\Model\FlightPassengerOfferRequestSchema[] $passengers Array of passengers, each described in FlightPassengerOfferRequestSchema.
     *
     * @return $this
     */
    public function setPassengers($passengers)
    {
        $this->container['passengers'] = $passengers;

        return $this;
    }

    /**
     * Gets private_fare_codes
     *
     * @return string[]
     */
    public function getPrivateFareCodes()
    {
        return $this->container['private_fare_codes'];
    }

    /**
     * Sets private_fare_codes
     *
     * @param string[] $private_fare_codes Array of codes for accessing special negotiated fares.
     *
     * @return $this
     */
    public function setPrivateFareCodes($private_fare_codes)
    {
        $this->container['private_fare_codes'] = $private_fare_codes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
